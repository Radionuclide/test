<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GenuineChannels</name>
    </assembly>
    <members>
        <member name="T:Belikov.GenuineChannels.Authorization.ConnectionIsBeingAcceptedGlobalEventArgs">
            <summary>
            ConnectionIsBeingAcceptedGlobalEventArgs contains authentication information
            about a remote host which establishes a connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Authorization.ConnectionIsBeingAcceptedGlobalEventArgs.Cancel">
            <summary>
            Represents a value indicating whether an action should be cancelled.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Authorization.ConnectionIsBeingAcceptedGlobalEventArgs.IPEndPoint">
            <summary>
            The address of the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Authorization.ConnectionIsBeingAcceptedGlobalEventArgs.Url">
            <summary>
            Url of the remote host or a null reference.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Authorization.ConnectionIsBeingAcceptedGlobalEventArgs.LoginName">
            <summary>
            The login name provided by the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Authorization.ConnectionIsBeingAcceptedGlobalEventArgs.HashedPassword">
            <summary>
            The hashsum of the password provided by the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Authorization.ConnectionIsBeingAcceptedGlobalEventArgs.ProvidedCredentials">
            <summary>
            The credential provided by the remote host.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.BroadcastProxy">
            <summary>
            Implements RealProxy that sends messages to all registered receivers.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.BroadcastProxy.#ctor(System.Type,Belikov.GenuineChannels.BroadcastEngine.Dispatcher)">
            <summary>
            Constructs an instance of the BroadcastProxy class.
            </summary>
            <param name="interfaceToSupport">The object representing a well-known interface which is supported by all receivers.</param>
            <param name="dispatcher">The instance of the Dispatcher class containing a list of the receivers.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.BroadcastProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            Broadcasts message to all registered receivers.
            </summary>
            <param name="msg">The message to be broadcasted.</param>
            <returns></returns>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.Court">
            <summary>
            Represents the court containing information about destination receiver.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.Court.Receiver">
            <summary>
            The receiver.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.Court.Sender">
            <summary>
            The MBR object obtained via a channel through which the response will be sent.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.Court.HasEverReceived">
            <summary>
            Indicates whether this object has received something via broadcast channel.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.CourtCollection">
            <summary>
            Singleton class that provides means to associate receviers with courts.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.CourtCollection.#ctor">
            <summary>
            Singleton.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.CourtCollection.Attach(System.String,System.MarshalByRefObject,System.MarshalByRefObject)">
            <summary>
            Associates the receiver with the specified court.
            The response will be directed to the channel through which the sender object has been obtained.
            </summary>
            <param name="courtName">The name of the court.</param>
            <param name="receiver">The receiver implementing the corresponding interface.</param>
            <param name="sender">An arbitrary MBR object obtained via a channel through which the response will be sent.
            Can be a null reference if this court has been already occupied or if you do not need guaranteed delivery.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.CourtCollection.Detach(System.String)">
            <summary>
            Disassociate the receiver with the specified court.
            Does not throw any exceptions if the court has not been occupied.
            </summary>
            <param name="courtName">The name of the court.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.CourtCollection._courts">
            <summary>
            Court name(string) => Court (class).
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.CourtCollection.Find(System.String,System.MarshalByRefObject@,System.MarshalByRefObject@)">
            <summary>
            Looks for the court associated with the specified string and returns its parameters.
            Automatically sets Court.HasEverReceived member to true.
            </summary>
            <param name="courtName">The name of the court.</param>
            <param name="receiver">The receiver.</param>
            <param name="sender">The MBR object obtained via a channel through which the response will be sent.
            Can be null if this court has been already occupied.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.BroadcastCallFinishedHandler">
            <summary>
            Represents a method called when an invocation made via Broadcast Engine is done asynchronously.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.BroadcastReceiverHasBeenExcludedEventHandler">
            <summary>
            Represents a method called when a receiver is being excluded from the Dispatcher.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.Dispatcher">
            <summary>
            Manages a collection of receivers and provides a way to send a message to all receivers
            concurrently.
            All methods and properties are thread-safe.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.#ctor(System.Type)">
            <summary>
            Constructs an instance of the Dispatcher class.
            </summary>
            <param name="interfaceToSupport">The interface which is supported by all receivers.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.SupportedInterface">
            <summary>
            The interface supported by the transparent proxy provided by this instance.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.Tag">
            <summary>
            Dispatcher's tag. This member is not used by Genuine Channels,
            so you can use it on your own.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.ReceiveResultsTimeOut">
            <summary>
            Gets or sets a value indicating the maximum time span to receive responses from the receivers.
            If reply has not been received during this period of time, OperationException with 
            GenuineChannels.Exception.Broadcast.RemoteEndPointDidNotReplyForTimeOut
            error identifier will be fired.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.CallIsAsync">
            <summary>
            If this member is false, then broadcast call is synchronous. That is the caller's thread 
            waits until all receivers replies or timeout elapses.
            If this member is true and BroadcastCallFinishedHandler member is not null, then broadcast 
            call is asynchronous. Accordingly, control is returned to the caller as soon as broadcast invocation
            will be initiated. When all receivers reply or timeout is elapsed, the 
            BroadcastCallFinishedHandler callback is called.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.BroadcastCallFinishedHandler">
            <summary>
            Delegate to be called when an async call is finished.
            </summary>
        </member>
        <member name="E:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.BroadcastReceiverHasBeenExcluded">
            <summary>
            Signals that a receiver has been excluded from the receiver list.
            The sponsor for the receiver is detached after this event.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.MaximumNumberOfConsecutiveFailsToExcludeReceiverAutomatically">
            <summary>
            Gets or sets a value indicating the maximum allowed number of consecutive failures
            that can be made by a receiver. As soon as the receiver consecutively fails for this 
            number of time, it is automatically removed from the receiver list.
            You can set this value to zero in order to prevent automatic excluding.
            I would recommend to set a large value (for example, 100) in this case.
            Remember, each time the receiver sends successful response, counter for this receiver is resetted to zero.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.MaximumNumberOfConsecutiveFailsToEnableSimulationMode">
            <summary>
            Represents a value indicating the maximum number of failures allowing to specific
            remote receiver before switching it to simulation mode.
            That is as soon as a true broadcast sender will not be able to deliver a message 
            consecutively for this number of tries to the specific receiver, it will automatically
            start sending messages to this specific receiver via the usual channel.
            Set it to zero to prevent switching to simulation mode.
            I would recommend to set a large value (for example, 100) in this case.
            Remember, each time the receiver sends successful response to the message sent via 
            true multicast channel, this counter is resetted to zero and receiver is switched back
            to normal mode when messages are delivered via "true" multicast channel.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.IgnoreRecurrentCalls">
            <summary>
            Gets or sets an value indicating whether the recurrent calls received via different 
            transports will be ignored.
            Also, if you register the same receiver twice and turn on this option, it will
            be invoked only once.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.RecipientsSubscribed">
            <summary>
            Gets an integer indicating how many senders and recipients have been added to the dispatcher collection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.GlobalSponsor">
            <summary>
            Sponsor that lives while Dispatcher is alive.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.Add(System.MarshalByRefObject)">
            <summary>
            Registers the receiver. Returns false if the receiver has already been registered.
            WARNING: does not check whether the receiver supports the required interface (via Reflection) 
            because this check requires client's dll.
            </summary>
            <param name="obj">The receiver being registered.</param>
            <returns>False if the receiver has been already registered.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.Add(System.MarshalByRefObject,System.Object)">
            <summary>
            Registers the receiver and associate the provided object with it.
            Returns false if the receiver has already been registered.
            WARNING: does not check whether the receiver supports the required interface (via Reflection) 
            because this check requires client's dll.
            </summary>
            <param name="obj">The receiver being registered.</param>
            <param name="tag">The object associated with the receiver. This object is accessible when receiver is being unregistered or during filtering.</param>
            <returns>False if the receiver has been already registered.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.Add(System.MarshalByRefObject,System.Object,System.String,Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Registers the receiver and associate the provided object with it.
            Returns false if the receiver has already been registered.
            WARNING: does not check whether the receiver supports the required interface (via Reflection) 
            because this check requires client's dll.
            </summary>
            <param name="obj">The receiver being registered.</param>
            <param name="tag">The object associated with the receiver. This object is accessible when receiver is being unregistered or during filtering.</param>
            <param name="remoteGenuineUri">The uri of the remote host provided by any of Genuine Channels.</param>
            <param name="transportContext">The transport context of the remote host.</param>
            <returns>False if the receiver has been already registered.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.Add(Belikov.GenuineChannels.BroadcastEngine.GeneralBroadcastSender)">
            <summary>
            Registers the broadcast sender that sends a message to several receivers.
            Returns Guid (it's like URI for an MBR object) assigned for this sender that can be used
            to delete this broadcast sender later.
            </summary>
            <param name="generalBroadcastSender">The broadcast sender which sends a message via "true" multicast channel.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.Remove(System.MarshalByRefObject)">
            <summary>
            Removes the receiver from the list of receivers.
            Returns false if there is no such receiver found in the list of receivers.
            </summary>
            <param name="obj">The receiver being exluded.</param>
            <returns>False if there is no such receiver in the list of receivers.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.Remove(System.String)">
            <summary>
            Removes the receiver or the broadcast sender associated with the specified uri.
            Returns false if there is no such receiver found in the list of receivers.
            </summary>
            <param name="uri">The uri of the receiver.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.DeleteSponsorFromTheObjectAndFireEvent(System.Object)">
            <summary>
            Fires the BroadcastReceiverHasBeenExcluded event and detach the sponsor from the specified receiver.
            </summary>
            <param name="state">The receiver being excluded.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.Clear">
            <summary>
            Removes all recipients and broadcast senders.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.UnregisterSponsor(System.Object)">
            <summary>
            Unregisters the sponsor.
            </summary>
            <param name="receiverInfoItemsAsObject">Array of receivers.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.FindObjectByUri(System.String)">
            <summary>
            Returns the receiver associated with the specified uri.
            </summary>
            <param name="uri">The uri associated with the receiver.</param>
            <returns>The receiver associated with the specified uri.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.GetReceiverInfo(System.String)">
            <summary>
            Returns the receiver associated with the specified uri.
            </summary>
            <param name="mbrUri">The uri associated with the receiver.</param>
            <returns>The receiver associated with the specified uri.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.Dispatcher._readerWriterLock">
            <summary>
            To synchronize access to _receivers.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.Dispatcher._receivers">
            <summary>
            Receiver hash that contains { Receiver URI (string) => ReceiverInfo (object) } records.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.Dispatcher._cachedReceiversInfoArray">
            <summary>
            Is used to cache the list of the _receivers' values.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.TransparentProxy">
            <summary>
            The transparent proxy that implements requested interface (or type).
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.AsyncEventStub(Belikov.GenuineChannels.BroadcastEngine.Dispatcher,System.Runtime.Remoting.Messaging.IMessage,Belikov.GenuineChannels.BroadcastEngine.ResultCollector)">
            <summary>
            Does absolutely nothing. If you want to enable async calls and do not need to process call results, use this stub as an event receiver.
            </summary>
            <param name="dispatcher">Ignored.</param>
            <param name="message">Ignored.</param>
            <param name="resultCollector">Ignored.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.GetListOfReceivers(System.Object[]@,System.Runtime.Remoting.Messaging.IMessage,Belikov.GenuineChannels.BroadcastEngine.ResultCollector)">
            <summary>
            Returns the filtered array of the ReceiverInfo instances.
            </summary>
            <param name="arrayOfReceiverInfo">The list of receivers being filtered out.</param>
            <param name="iMessage">The invocation.</param>
            <param name="resultCollector">The Result Collector obtaining the list of receivers. Is used for debugging purposes only.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.IMulticastFilter">
            <summary>
            The filter that will be used if no filter is specified in the current thread.
            See Programming Guide for better explanation.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.SetCurrentFilter(Belikov.GenuineChannels.BroadcastEngine.IMulticastFilter)">
            <summary>
            Specifies the filter which will be used in the current thread.
            Returns the preceding filter specified in the current thread.
            </summary>
            <param name="iMulticastFilter">The filter being set.</param>
            <returns>The previous filter.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.GetCurrentFilter">
            <summary>
            Gets the filter which is used for filtering calls made via all Dispatchers in the current thread.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.DbgDispatcherId">
            <summary>
            The uniqued identifier of the current instance. Is used for debugging purposes only.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.Dispatcher.DbgDispatcherName">
            <summary>
            Gets or sets the name of the current instance. Is used for debugging purposes only.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.DispatcherFilterKeeper">
            <summary>
            DispatcherFilterKeeper forces the specified dispatcher filter to be used during all 
            invocations made in the current thread until the Dispose method is called. 
            The previous filter is set up when the Disposed method is called.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.DispatcherFilterKeeper.#ctor(Belikov.GenuineChannels.BroadcastEngine.IMulticastFilter)">
            <summary>
            Constructs an instance of the DispatcherFilterKeeper class.
            </summary>
            <param name="iMulticastFilter">The filter supporting IMulticastFilter interface.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.DispatcherFilterKeeper.Dispose">
            <summary>
            Restores the previous dispatcher filter.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.GeneralBroadcastSender">
            <summary>
            Abstract class that supports all basic means to broadcast messages via "true" multicast channel.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.GeneralBroadcastSender.#ctor(System.String,Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the GeneralBroadcastSender class.
            </summary>
            <param name="court">The court.</param>
            <param name="iTransportContext">The Transport Ñontext.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.GeneralBroadcastSender.Court">
            <summary>
            The broadcast court.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.GeneralBroadcastSender.ITransportContext">
            <summary>
            The Transport context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.GeneralBroadcastSender.SendMessage(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.BroadcastEngine.ResultCollector)">
            <summary>
            Sends the message via specific broadcast transport.
            </summary>
            <param name="message">The message being sent.</param>
            <param name="resultCollector">The Result Ñollector to gather results of the invocation.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.IBroadcastSenderProvider">
            <summary>
            Represents a "true" broadcast sender that can broadcast messages to
            the specified court.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.IBroadcastSenderProvider.GetBroadcastSender(System.String)">
            <summary>
            Answers broadcast sender which sends messages to the specified court.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.IMulticastFilter">
            <summary>
            Represents a class that filters out unnecessary receivers.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.IMulticastFilter.GetReceivers(System.Object[],System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            Returns receivers that should be called.
            </summary>
            <param name="cachedReceiverList">All registered receivers (read-only cached array).</param>
            <param name="iMessage">The invocation.</param>
            <returns>Receivers that will be called.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.LocalPerformer">
            <summary>
            Executes specified invocation of the object localted in the current appdomain.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.LocalPerformer.#ctor(System.Runtime.Remoting.Messaging.IMessage,Belikov.GenuineChannels.BroadcastEngine.ResultCollector,System.MarshalByRefObject)">
            <summary>
            Constructs an instance of the LocalPerformer class.
            </summary>
            <param name="msg">The invocation to be executed.</param>
            <param name="resultCollector">The Result Collector.</param>
            <param name="mbr">The target.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.LocalPerformer.Call(System.Object)">
            <summary>
            Invokes the target.
            </summary>
            <param name="state">Ignored.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo">
            <summary>
            Contains info about a remote recipient.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.MbrUri">
            <summary>
            Uri of the receiver's MBR object.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.Local">
            <summary>
            Is true if object is within local appdomain.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.LocallyCreated">
            <summary>
            Locally created MBR.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.NeedsBroadcastSimulation">
            <summary>
            Whether this receiver available via broadcast means (IP multicasting).
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.MbrObject">
            <summary>
            Destination object.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.GeneralBroadcastSender">
            <summary>
            Broadcast sender or null if MbrObject is specified.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.SerializedObjRef">
            <summary>
            MarshalByRefObject destination object.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.IClientChannelSink">
            <summary>
            Client channel sink thru that broadcast message will be sent when object
            is unreachable via true multicast channel.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.NumberOfFails">
            <summary>
            Number of consecutive failes.
            If object send successful result, this number is resetted to zero.
            Is used to detach a receiver automatically if the receiver stops replying.
            to sent messages.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.NumberOfMulticastFails">
            <summary>
            How much times does true multicast channel cause consecutively fails.
            If object send successful result, this number is resetted to zero.
            Is used to switch sending to simulation mode if the receiver stops receiving
            messages via true multicast channel.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.Tag">
            <summary>
            Thread-safe tag property.
            I would recommend to keep Client Session here.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.DbgRecipientId">
            <summary>
            The recipient identifier.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo.DbgRemoteHost">
            <summary>
            Gets or sets the remote host where this broadcast recipient is located. Is used for debugging purposes only.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.InvokeAsyncDelegate">
            <summary>
            Represents a method which is used to invoke the real proxy asynchronously.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.ResultCollector">
            <summary>
            Sends the specified message to all receivers, collects results and completes broadcast call.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.#ctor(Belikov.GenuineChannels.BroadcastEngine.Dispatcher,System.Int32,System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            Constructs an instance of the ResultCollector class.
            Created object is in "Sending" state by default.
            </summary>
            <param name="dispatcher">The dispatcher.</param>
            <param name="capacity">The expected number of receivers.</param>
            <param name="iMessage">The message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.Dispose">
            <summary>
            Releases acquired resources.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ResultCollector._messageStream">
            <summary>
            The message being sent in serialized representation.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ResultCollector._secondStagePerformed">
            <summary>
            Indicates whether the second broadcast stage (sending the message via the usual channel(s) to the
            failed receivers) was completed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.Successful">
            <summary>
            Represents a keyed collection containing successful results of invocations.
            Keys are URIs of the remote hosts, values support the IMethodReturnMessage interface.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.Failed">
            <summary>
            Represents a keyed collection containing unsuccessful results of the invocations.
            Keys contain URI, values support the IMethodReturnMessage interface or inherit the Exception class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.AllMessagesReceived">
            <summary>
            Is set when all replies have arrived.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.UnrepliedReceivers">
            <summary>
            Represents a keyed collection containing receivers' uris of receivers that did not
            respond to the send message.
            Uri {string} => null.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.ParseResult(System.String,System.Runtime.Remoting.Messaging.IMethodReturnMessage,System.Exception)">
            <summary>
            Writes down response came from the remote host.
            </summary>
            <param name="mbrUri">The uri of the remote MBR.</param>
            <param name="returnMessage">The received message or a null reference.</param>
            <param name="ex">The exception occurred during sending or receiving.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.StartReceiving">
            <summary>
            Initiate the receiving of responses.
            Returns true if the invocation has been completed synchronously.
            </summary>
            <returns>The true value if the invocation has been completed synchronously.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.WaitUntilReceiversReplyOrTimeOut(System.Object,System.Boolean)">
            <summary>
            Calls the callback when either all receivers reply or wait time elapses.
            </summary>
            <param name="state">Ignored.</param>
            <param name="timeOut">Ignored.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.PerformBroadcasting(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            Sends the invocation to all registered receivers.
            </summary>
            <param name="msg">The message to be sent.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.SendMessageToFailedReceiversDirectly">
            <summary>
            Looks for a failed broadcast receivers and invoke them again.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.ProcessRespose(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Processes the received response.
            </summary>
            <param name="message">The response.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.DispatchException(System.Object)">
            <summary>
            An exception occurred during processing.
            </summary>
            <param name="exceptionAsObject">The exception.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.IsExpired(System.Int32)">
            <summary>
            Indicates whether this message processor still waits for the response/responses.
            </summary>
            <param name="now">The current time elapsed since the system started.</param>
            <returns>The true value if the message processor still waits for the response.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.Remote">
            <summary>
            Gets the uri of the remote host which is expected to send a response.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.IsShortInProcessing">
            <summary>
            Gets an indication whether the response processor does not require a separate thread for processing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.Message">
            <summary>
            Gets the initial message for which the response is expected. Is used only for debugging purposes to track down
            the source message.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.Properties">
            <summary>
            Gets a dictionary through which sink properties can be accessed.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.NextChannelSink">
            <summary>
            Gets the next server channel sink in the server sink chain.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.AsyncProcessRequest(System.Runtime.Remoting.Channels.IClientChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
            <summary>
            Requests asynchronous processing of a method call on the current sink.
            </summary>
            <param name="sinkStack">A stack of channel sinks that called this sink.</param>
            <param name="msg">The message to process.</param>
            <param name="headers">The headers to add to the outgoing message heading to the server.</param>
            <param name="stream">The stream headed to the transport sink.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.AsyncProcessResponse(System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
            <summary>
            Requests asynchronous processing of a response to a method call on the current sink.
            </summary>
            <param name="sinkStack">A stack of sinks that called this sink.</param>
            <param name="state">Information generated on the request side that is associated with this sink.</param>
            <param name="headers">The headers retrieved from the server response stream.</param>
            <param name="stream">The stream coming back from the transport sink.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.GetRequestStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
            <summary>
            Returns the Stream onto which the provided message is to be serialized.
            </summary>
            <param name="msg">The IMethodCallMessage containing details about the method call.</param>
            <param name="headers">The headers to add to the outgoing message heading to the server.</param>
            <returns>The Stream onto which the provided message is to be serialized.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.ProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
            <summary>
            Requests message processing from the current sink.
            </summary>
            <param name="msg">The message to process.</param>
            <param name="requestHeaders">The headers to add to the outgoing message heading to the server.</param>
            <param name="requestStream">The stream headed to the transport sink.</param>
            <param name="responseHeaders">When this method returns, contains an ITransportHeaders interface that holds the headers that the server returned. This parameter is passed uninitialized.</param>
            <param name="responseStream">When this method returns, contains a Stream coming back from the transport sink. This parameter is passed uninitialized.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.NextSink">
            <summary>
            Gets the next message sink in the sink chain.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>
            Asynchronously processes the given message.
            </summary>
            <param name="msg">The message to process.</param>
            <param name="replySink">The reply sink for the reply message.</param>
            <returns>Returns an IMessageCtrl interface that provides a way to control asynchronous messages after they have been dispatched.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            Synchronously processes the given message.
            </summary>
            <param name="msg">The message to process.</param>
            <returns>A reply message in response to the request.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.ResultCollector.DbgResultCollectorId">
            <summary>
            Gets the unique identifier of the current instance. Is used for debugging purposes only.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BroadcastEngine.UniqueCallTracer">
            <summary>
            Registers broadcast calls in order to prevent calling the same
            target twice if an invocation arrives via different channels or channel may double the message.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.UniqueCallTracer.#ctor">
            <summary>
            Constructs an instance of the UniqueCallTracer class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.UniqueCallTracer.Instance">
            <summary>
            Singleton.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.BroadcastEngine.UniqueCallTracer.TimeSpanToRememberCall">
            <summary>
            The period of time to keep guids. 180 seconds by default.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.UniqueCallTracer.WasGuidRegistered(System.String)">
            <summary>
            Checks on whether the specified GUID has been registered before.
            Automatically registers GUID if it wasn't registered.
            </summary>
            <param name="guid">The GUID to check.</param>
            <returns>True if the specified GUID has been registered before.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.BroadcastEngine.UniqueCallTracer._guids">
            <summary>
            Contains all registered guids as keys and DateTime when they were registered as values.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BroadcastEngine.UniqueCallTracer.TimerCallback">
            <summary>
            Deletes all expired guids.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BufferPooling.BufferKeeper">
            <summary>
            Obtains a buffer from Buffer Pool and returns the obtained buffer back to the pool 
            when the Dispose method is called.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BufferPooling.BufferKeeper.#ctor(System.Int32)">
            <summary>
            Obtains a buffer from Buffer Pool.
            </summary>
            <param name="ignored">Ignored.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.BufferPooling.BufferKeeper.Buffer">
            <summary>
            The obtained buffer.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BufferPooling.BufferKeeper.Dispose">
            <summary>
            Disposes all acquired resources.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.BufferPooling.BufferPool">
            <summary>
            Manages a pool of buffers.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.BufferPooling.BufferPool.ObtainBuffer">
            <summary>
            Gets a buffer from the pool of buffers or creates a new one.
            Caller is not obliged to return the buffer back to the pool.
            </summary>
            <returns>The obtained buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.BufferPooling.BufferPool.RecycleBuffer(System.Byte[])">
            <summary>
            Returns the buffer back to Buffer Pool for the following reusing.
            </summary>
            <param name="buf">The buffer.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.BufferPooling.BufferPool.GENERAL_BUFFER_SIZE">
            <summary>
            Size of the buffers kept in the pool.
            All Buffers have exactly this size.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.BufferPooling.BufferPool._maxPooledBuffers">
            <summary>
            The maximum number of buffers kept in the pool.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Connection.ConnectionAcceptedCancellableEventParameter">
            <summary>
            Implements a Genuine Channels event provider that provides the Cancel member which can be used to cancel
            event consequences.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.ConnectionAcceptedCancellableEventParameter.Cancel">
            <summary>
            Indicates whether an action must be cancelled.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.ConnectionAcceptedCancellableEventParameter.Socket">
            <summary>
            The Socket being accepted.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.ConnectionAcceptedCancellableEventParameter.IPEndPoint">
            <summary>
            Remote IPEndPoint.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Connection.ConnectionManager">
            <summary>
            Manages a set of connections being used for performing exchange with the remote host
            via abstract transport.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the ConnectionManager class.
            </summary>
            <param name="iTransportContext">The Transport context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.ConnectionManager.ITransportContext">
            <summary>
            The Transport context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.ConnectionManager.Local">
            <summary>
            Contains information about the local host.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.Send(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Sends a message to the remote host.
            </summary>
            <param name="message">The message to be sent.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.InternalSend(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Sends the message to the remote host. Services messages with serialized content only,
            after Security Session completes its job.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.StartListening(System.Object)">
            <summary>
            Starts listening to the specified end point and accepting incoming connections.
            </summary>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.StopListening(System.Object)">
            <summary>
            Stops listening to the specified end point. Does not close any established connections.
            </summary>
            <param name="endPoint">The end point</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.ReleaseConnections(Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.Exception)">
            <summary>
            Closes all connections that fit to the specified characteristics.
            Automatically releases all resources acquired by connections being closed.
            </summary>
            <param name="hostInformation">The host or a null reference to embrace all remote hosts.</param>
            <param name="genuineConnectionType">Specifies what connection patterns will be affected by this operation.</param>
            <param name="reason">The reason of resource releasing that will be dispatched to all callers waiting something from the connections being closed.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.GetConnectionNames(System.String)">
            <summary>
            Returns the names of connections opened to the specified destination.
            </summary>
            <param name="uri">The URI or URL of the remote host.</param>
            <returns>Names of connections opened to the specified destination.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.Connection.ConnectionManager._disposed">
            <summary>
            Gets or sets a value indicating whether this instance was disposed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.ConnectionManager._disposeReason">
            <summary>
            The reason of the Connection Manager disposing.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.ConnectionManager._disposeLock">
            <summary>
            The dispose lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.Dispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.InternalDispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Connection.ConnectionManager.BytesSent">
            <summary>
            Gets a value indicating how many bytes have been sent to the remote host.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.IncreaseBytesSent(System.Int32)">
            <summary>
            Increases the bytes sent counter.
            </summary>
            <param name="bytesSent">Number of bytes sent.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Connection.ConnectionManager.BytesReceived">
            <summary>
            Gets a value indicating how many bytes have been received from the remote host.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.IncreaseBytesReceived(System.Int32)">
            <summary>
            Increases the bytes received counter.
            </summary>
            <param name="bytesReceived"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.IsExceptionCritical(Belikov.GenuineChannels.OperationException)">
            <summary>
            Determines whether the exception is critical and the connection is subject to be destroyed.
            </summary>
            <param name="operationException">The instance of the OperationException class or a null reference.</param>
            <returns>True if the exception is critical and the connection is subject to be destroyed.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.CreateConnectionLevelSecuritySession(Belikov.GenuineChannels.Connection.GenuineConnectionType)">
            <summary>
            Creates and returns the Connection Level Security Session.
            </summary>
            <param name="genuineConnectionType">The type of the connection.</param>
            <returns>The created Security Session.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.ReleaseHostResources(Belikov.GenuineChannels.TransportContext.HostInformation,System.Exception)">
            <summary>
            Releases information belonging to the failed connection.
            </summary>
            <param name="hostInformation">The reason of releasing.</param>
            <param name="exception">The reason of the resource releasing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.GetUniqueConnectionName">
            <summary>
            Spares a connection name, which is unique within the current appdomain.
            </summary>
            <returns>A connection name that is unique within the current appdomain.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionManager.GetUniqueConnectionId">
            <summary>
            Gets a unique connection identifier, which is used for debugging purposes only.
            </summary>
            <returns>The unique connection identifier, which is used for debugging purposes only.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Connection.ConnectionStateSignaller">
            <summary>
            Controls the state of the specific connection and fires Genuine Channels events when
            the state is changed.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionStateSignaller.#ctor(Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.TransportContext.IGenuineEventProvider)">
            <summary>
            Constructs an instance of the ConnectionSignaller class.
            </summary>
            <param name="remote">The remote host.</param>
            <param name="iGenuineEventProvider">The event provider.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.ConnectionStateSignaller.SetState(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType,System.Exception,System.Object)">
            <summary>
            Sets the state of the persistent connection to the specific remote host.
            </summary>
            <param name="genuineEventType">The state of the connection.</param>
            <param name="reason">The exception.</param>
            <param name="additionalInfo">The additional info.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Connection.GeneralConnection">
            <summary>
            Represents a connection to the remote host.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.GeneralConnection.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the GeneralConnection class.
            </summary>
            <param name="iTransportContext">The Transport Context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection.MessageContainer">
            <summary>
            A queue of the messages arranged to be sent through this connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection.HostIdAsString">
            <summary>
            The connection id in string format.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection.Remote">
            <summary>
            The remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection.ITransportContext">
            <summary>
            The transport context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection.GenuineConnectionType">
            <summary>
            The type of this connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection.ReconnectionLock">
            <summary>
            Connection Manager must obtain the lock for this object in order to modify data
            related to reconnection stuff.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Connection.GeneralConnection.LastTimeContentWasSent">
            <summary>
            A 32-bit signed integer containing the amount of time in milliseconds that has passed since the last sending of a message to the remote host.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Connection.GeneralConnection.IsDisposed">
            <summary>
            Indicates whether this instance was disposed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection._disposeReason">
            <summary>
            The reason of the disposing.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection.DisposeLock">
            <summary>
            Dispose lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.GeneralConnection.Dispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.GeneralConnection.InternalDispose(System.Exception)">
            <summary>
            Releases resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection._connectionStateSignaller">
            <summary>
            The state controller.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection._connectionStateSignallerLock">
            <summary>
            The state controller lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.GeneralConnection.SignalState(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType,System.Exception,System.Object)">
            <summary>
            Sets the state of the connection.
            </summary>
            <param name="genuineEventType">The state of the connection.</param>
            <param name="reason">The exception.</param>
            <param name="additionalInfo">The additional info.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GeneralConnection.CloseConnectionAfterInactivity">
            <summary>
            The time span to close persistent connection after this period of inactivity.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Connection.GeneralConnection.ShutdownTime">
            <summary>
            The time after which the socket will be shut down automatically, or a DateTime.MaxValue value.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.GeneralConnection.Renew">
            <summary>
            Renews socket activity for the CloseConnectionAfterInactivity value.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.GeneralConnection.GatherContentOfConnectionLevelSecuritySessions(System.IO.Stream,System.IO.Stream,Belikov.GenuineChannels.Messaging.GenuineChunkedStream,Belikov.GenuineChannels.Security.SecuritySession,Belikov.GenuineChannels.Security.SecuritySession)">
            <summary>
            Establishes Connection Level Security Session and gather their output into specified stream.
            </summary>
            <param name="senderInput">The input stream.</param>
            <param name="listenerInput">The input stream.</param>
            <param name="output">The output stream.</param>
            <param name="sender">The sender's Security Session.</param>
            <param name="listener">The listener's Security Session.</param>
            <returns>True if at least one Security Session requested sending of data.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Connection.GenuineConnectionType">
            <summary>
            Enumerates the types of connection patterns supported by Genuine Channels.
            WARNING: serialized as a byte.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GenuineConnectionType.None">
            <summary>
            No connections will be affected by this value.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GenuineConnectionType.Persistent">
            <summary>
            A connection for the usual exchange between two hosts.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GenuineConnectionType.Named">
            <summary>
            A kind of persistent connection using for specific calls.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GenuineConnectionType.Invocation">
            <summary>
            Connection should be closed after an invocation is delivered to the remote host and the reply to it received.
            No other packets may be sent through this connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GenuineConnectionType.All">
            <summary>
            All connections will be affected by this value.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Connection.GenuinePersistentConnectionState">
            <summary>
            Enumerats all states of a persistent connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GenuinePersistentConnectionState.NotEstablished">
            <summary>
            Persistent connection is not established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GenuinePersistentConnectionState.Opened">
            <summary>
            Persistent connection was established, local host is a client.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.GenuinePersistentConnectionState.Accepted">
            <summary>
            Persistent connection was accepted, local host is a server.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Connection.PersistentConnectionStorage">
            <summary>
            Implements a storage of connections classified by URIs and connection identifiers.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.#ctor">
            <summary>
            Constructs an instance of the ConnectionStorage.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.ObjectStorageWithDefaultEntry">
            <summary>
            A storage containing all connections to one remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.ObjectStorageWithDefaultEntry.Collection">
            <summary>
            The collection of named objects.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.ObjectStorageWithDefaultEntry.DefaultObject">
            <summary>
            The default object.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.PersistentConnectionStorage._byUri">
            <summary>
            Associates host URIs with ObjectStorageWithDefaultEntry.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.Set(System.String,System.String,System.Object)">
            <summary>
            Associates the provided connection with the specified URI and name.
            </summary>
            <param name="primaryUri">The primary URI of the remote host.</param>
            <param name="name">The name of the connection.</param>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.Remove(System.String,System.String)">
            <summary>
            Removes information about an object associated with the specified name.
            </summary>
            <param name="primaryUri">The primary URI of the remote host.</param>
            <param name="name">The name of the object.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.Get(System.String,System.String)">
            <summary>
            Returns a connection associated with the specified URI and connection name..
            </summary>
            <param name="primaryUri">The primary URI.</param>
            <param name="name">The name of the connection or a null reference to get the default connection.</param>
            <returns>A connection associated with the specified name.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.GetAll(System.String)">
            <summary>
            Returns a list of connection names associated with the specified URI.
            </summary>
            <param name="primaryUri">The primary URI.</param>
            <returns></returns>
        </member>
        <member name="P:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.ProcessConnectionEventHandler">
            <summary>
            Represents a method analyzing connection's stuff.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PersistentConnectionStorage.InspectAllConnections(Belikov.GenuineChannels.Connection.PersistentConnectionStorage.ProcessConnectionEventHandler,System.Object)">
            <summary>
            Inspects all available connections. Used the specified method to analyze each connection.
            </summary>
            <param name="processConnectionEventHandler">The late-bound method analyzing the state of the connection.</param>
            <param name="parameter">A parameter provided to the handler.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Connection.PhysicalConnection">
            <summary>
            Represents a connection providing sending-receiving services via appropriate 
            Transport.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PhysicalConnection.#ctor">
            <summary>
            Constructs an instance of the PhysicalConnection class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.PhysicalConnection.ConnectionLevelSecurity">
            <summary>
            Connection-level Security Session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.PhysicalConnection._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.PhysicalConnection.PhysicalConnectionStateLock">
            <summary>
            This lock must be obtain during all operations that may change the state of the connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.PhysicalConnection.ConnectionAvailable">
            <summary>
            The state of the connection.
            True value of this member indicates that the connection is ready for the action.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PhysicalConnection.AcquireIfAvailable">
            <summary>
            Acquires access to the connection.
            </summary>
            <returns>True if access is acquired.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PhysicalConnection.MarkAsAvailable">
            <summary>
            Releases the connection.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Connection.PhysicalConnection.Reestablish_IsBeingReestablished">
            <summary>
            Gets an indication whether the physical connection is being reestablished.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PhysicalConnection.Reestablish_ObtainStatus">
            <summary>
            Answers true if a lock for connection reestablishing has been obtained.
            </summary>
            <returns>True if a lock for connection reestablishing has been obtained.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PhysicalConnection.Reestablish_ResetStatus">
            <summary>
            Resets the status of reestablishing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Connection.PhysicalConnection.IsDisposed">
            <summary>
            Indicates whether this instance was disposed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.PhysicalConnection._disposeReason">
            <summary>
            The reason of the disposing.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Connection.PhysicalConnection.DisposeLock">
            <summary>
            Dispose lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PhysicalConnection.Dispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Connection.PhysicalConnection.InternalDispose(System.Exception)">
            <summary>
            Releases resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager">
            <summary>
            Provides methods for using and publishing remoted objects and stream handlers.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the DirectExchangeManager class.
            </summary>
            <param name="iTransportContext">The Transport Context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.ITransportContext">
            <summary>
            The Transport Context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.RegisterServerService(System.String,Belikov.GenuineChannels.DirectExchange.IServerServiceEntry)">
            <summary>
            Associates the server service provider with the specified entry.
            </summary>
            <param name="entryName">The name of the entry.</param>
            <param name="iServerServiceEntry">The server service provider.</param>
            <returns>The server service provider previously associated with this entry or a null reference.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.UnregisterServerService(System.String)">
            <summary>
            Unregisters the server service entry.
            </summary>
            <param name="entryName">The name of the entry.</param>
            <returns>The server service provider previously associated with this entry or a null reference.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.GetServerService(System.String)">
            <summary>
            Gets a service associated with the specified entry name.
            </summary>
            <param name="entryName">The name of the entry.</param>
            <returns>The service associated with the specified entry name.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.GetListOfRegisteredServices">
            <summary>
            Returns a list cotaining the names of all registered server service entries.
            Is used in debugging purposes.
            </summary>
            <returns>A list cotaining the names of all registered server service entries.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager._services">
            <summary>
            All registered services.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.RegisterGlobalServerService(System.String,Belikov.GenuineChannels.DirectExchange.IServerServiceEntry)">
            <summary>
            Associates the global server service provider with the specified entry.
            </summary>
            <param name="entryName">The name of the entry.</param>
            <param name="iServerServiceEntry">The server service provider.</param>
            <returns>The server service provider previously associated with this entry or a null reference.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.UnregisterGlobalServerService(System.String)">
            <summary>
            Unregisters the global server service entry.
            </summary>
            <param name="entryName">The name of the entry.</param>
            <returns>The global server service provider previously associated with this entry or a null reference.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.GetListOfGlobalRegisteredServices">
            <summary>
            Returns a list cotaining the names of all registered global server service entries.
            Is used in debugging purposes.
            </summary>
            <returns>A list cotaining the names of all registered global server service entries.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager._globalServices">
            <summary>
            All registered services.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.SendSync(Belikov.GenuineChannels.TransportContext.HostInformation,System.String,System.IO.Stream)">
            <summary>
            Sends the content to the specified remote host and returns a response sent by the remote
            host in reply.
            </summary>
            <param name="destination">The remote host.</param>
            <param name="serviceName">The name of the service.</param>
            <param name="content">The content.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.SendAsync(Belikov.GenuineChannels.TransportContext.HostInformation,System.String,System.IO.Stream,Belikov.GenuineChannels.DirectExchange.StreamResponseEventHandler)">
            <summary>
            Sends the content to the specified remote host and redirects a response to the callback.
            </summary>
            <param name="destination">The remote host.</param>
            <param name="serviceName">The name of the service.</param>
            <param name="content">The content.</param>
            <param name="streamResponseEventHandler">The callback.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.SendAsync(Belikov.GenuineChannels.TransportContext.HostInformation,System.String,System.IO.Stream,Belikov.GenuineChannels.DirectExchange.StreamResponseEventHandler,System.Object)">
            <summary>
            Sends the content to the specified remote host and redirects a response to the callback.
            </summary>
            <param name="destination">The remote host.</param>
            <param name="serviceName">The name of the service.</param>
            <param name="content">The content.</param>
            <param name="streamResponseEventHandler">The callback.</param>
            <param name="tag">The object that contains data about this invocation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.SendAsync(Belikov.GenuineChannels.TransportContext.HostInformation,System.String,System.IO.Stream,Belikov.GenuineChannels.DirectExchange.IStreamResponseHandler)">
            <summary>
            Sends the content to the specified remote host and redirects a response to the callback.
            </summary>
            <param name="destination">The remote host.</param>
            <param name="serviceName">The name of the service.</param>
            <param name="content">The content.</param>
            <param name="iStreamResponseHandler">The response handler.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.SendAsync(Belikov.GenuineChannels.TransportContext.HostInformation,System.String,System.IO.Stream,Belikov.GenuineChannels.DirectExchange.IStreamResponseHandler,System.Object)">
            <summary>
            Sends the content to the specified remote host and redirects a response to the callback.
            </summary>
            <param name="destination">The remote host.</param>
            <param name="serviceName">The name of the service.</param>
            <param name="content">The content.</param>
            <param name="iStreamResponseHandler">The response handler.</param>
            <param name="tag">The object that contains data about this invocation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.SendOneWay(Belikov.GenuineChannels.TransportContext.HostInformation,System.String,System.IO.Stream)">
            <summary>
            Sends one-way message to the remote host. Ignores all exceptions and does not 
            receive the response.
            </summary>
            <param name="destination">The remote host.</param>
            <param name="serviceName">The name of the entry.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.DirectExchangeManager.HandleRequest(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Handles the incoming request.
            </summary>
            <param name="message">The response.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.DirectExchange.IServerServiceEntry">
            <summary>
            Describes the interface between custom server service entry and Genuine Channels' Connection
            Manager.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.IServerServiceEntry.HandleMessage(System.IO.Stream,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Processes the incoming requests.
            Must close the provided stream immediately after using.
            Must return true if there is no response to the incoming request.
            May not throw any exceptions.
            </summary>
            <param name="stream">The stream containing a request or a response.</param>
            <param name="sender">The remote host that sent this request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.DirectExchange.StreamResponseEventHandler">
            <summary>
            Represents a method that handles a stream received from the remote host in reply to the sent
            request.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.DirectExchange.IStreamResponseHandler">
            <summary>
            Describes behavior of the response handler.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.IStreamResponseHandler.HandleResponse(System.IO.Stream,Belikov.GenuineChannels.TransportContext.HostInformation,System.Object)">
            <summary>
            Handles a stream received from the remote host in reply to the sent request.
            </summary>
            <param name="response">The response.</param>
            <param name="remoteHost">The recipient of the message.</param>
            <param name="tag">The object provided during initiation of the invocation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.IStreamResponseHandler.HandleException(System.Exception,Belikov.GenuineChannels.TransportContext.HostInformation,System.Object)">
            <summary>
            Dispatches the exception to the response processor.
            </summary>
            <param name="exception">The exception.</param>
            <param name="remoteHost">The recipient of the message.</param>
            <param name="tag">The object provided during initiation of the invocation.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent">
            <summary>
            Implements synchronous response receiver.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.#ctor(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Constructs an instance of the SyncResponseProcessorWithEvent class.
            </summary>
            <param name="message">The request.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.Dispose">
            <summary>
            Releases acquired resources.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.IsReceivedEvent">
            <summary>
            Is set when the response is received or an exception is dispatched.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.Response">
            <summary>
            The received response.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.DispatchedException">
            <summary>
            The exception dispatched instead of the response.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.ProcessRespose(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Directs the message to the message receiver.
            </summary>
            <param name="message">The response.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.DispatchException(System.Object)">
            <summary>
            Dispatches the exception to the caller.
            </summary>
            <param name="exceptionAsObject">The exception.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.IsExpired(System.Int32)">
            <summary>
            Indicates whether this message processor still waits for the response(s).
            </summary>
            <param name="now">The current time elapsed since the system started.</param>
            <returns>True if the message processor still waits for the response(s).</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.Remote">
            <summary>
            Gets the uri of the remote host expected to send a response.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.IsShortInProcessing">
            <summary>
            Gets an indication whether the response processor does not require a separate thread for processing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DirectExchange.SyncResponseProcessorWithEvent.Message">
            <summary>
            Gets the initial message for which the response is expected. Is used only for debugging purposes to track down
            the source message.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.DirectExchange.UniversalAsyncResponseProcessor">
            <summary>
            Implements universal asynchronous response processor that redirects the response to the
            specified recipient.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.UniversalAsyncResponseProcessor.#ctor(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.DirectExchange.StreamResponseEventHandler,Belikov.GenuineChannels.DirectExchange.IStreamResponseHandler)">
            <summary>
            Initializes the instance of the UniversalAsyncResponseProcessor class.
            </summary>
            <param name="message">The source message.</param>
            <param name="streamResponseEventHandler">The response handler represented as a callback or a null reference.</param>
            <param name="iStreamResponseHandler">The response handler represented as a object supporting the IStreamResponseHandler interface or a null reference.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.UniversalAsyncResponseProcessor.Dispose">
            <summary>
            Releases acquired resources.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.UniversalAsyncResponseProcessor.ProcessRespose(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Directs the message to the message receiver.
            </summary>
            <param name="message">The response.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.UniversalAsyncResponseProcessor.DispatchException(System.Object)">
            <summary>
            Dispatches the exception to the handler.
            </summary>
            <param name="exceptionAsObject">The exception.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DirectExchange.UniversalAsyncResponseProcessor.IsExpired(System.Int32)">
            <summary>
            Indicates whether this message processor still waits for the response(s).
            </summary>
            <param name="now">The current time.</param>
            <returns>True if the message processor still waits for the response(s).</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.DirectExchange.UniversalAsyncResponseProcessor.Remote">
            <summary>
            Gets the uri of the remote host which is expected to send a response.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DirectExchange.UniversalAsyncResponseProcessor.IsShortInProcessing">
            <summary>
            Gets an indication whether the response processor does not require a separate thread for processing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DirectExchange.UniversalAsyncResponseProcessor.Message">
            <summary>
            Gets the initial message for which the response is expected. Is used only for debugging purposes to track down
            the source message.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.AsyncSinkStackResponseProcessor">
            <summary>
            Processes replies to the .NET Remoting invocations sent asynchronously.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.AsyncSinkStackResponseProcessor.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,Belikov.GenuineChannels.Messaging.Message,System.Runtime.Remoting.Channels.IClientChannelSinkStack)">
            <summary>
            Initializes an instance of the AsyncSinkStackResponseProcessor class.
            </summary>
            <param name="iTransportContext">The Transport Context.</param>
            <param name="message">Source message.</param>
            <param name="iClientChannelSinkStack">The client channel sink stack.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.AsyncSinkStackResponseProcessor.Dispose">
            <summary>
            Releases acquired resources.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.AsyncSinkStackResponseProcessor.ProcessRespose(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Directs the message to the message receiver.
            </summary>
            <param name="message">The response.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.AsyncSinkStackResponseProcessor.DispatchException(System.Object)">
            <summary>
            Dispatches the exception to the caller.
            </summary>
            <param name="exceptionAsObject">The reason of the error represented as the reference to an instance of the Object class.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.AsyncSinkStackResponseProcessor.IsExpired(System.Int32)">
            <summary>
            Indicates whether this message processor still waits for the response(s).
            </summary>
            <param name="now">The current time elapsed since the system started.</param>
            <returns>True if the message processor still waits for the response.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.AsyncSinkStackResponseProcessor.Remote">
            <summary>
            Gets the uri of the remote host expected to send a response.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.AsyncSinkStackResponseProcessor.IsShortInProcessing">
            <summary>
            Gets an indication whether the response processor does not require a separate thread for processing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.AsyncSinkStackResponseProcessor.Message">
            <summary>
            Gets the initial message for which the response is expected. Is used only for debugging purposes to track down
            the source message.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity">
            <summary>
            Represents an abstract .NET Remoting channel working via Transport Context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.#ctor(System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
            <summary>
            Constructs an instance of the BasicChannelWithSecurity class.
            </summary>
            <param name="iClientChannelSinkProvider">The client channel sink provider.</param>
            <param name="iServerChannelSinkProvider">The server channel sink provider.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.InitializeInstance(System.Collections.IDictionary)">
            <summary>
            Constructs an instance of the BasicChannelWithSecurity class.
            </summary>
            <param name="properties">Channel properties.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.ITransportContext">
            <summary>
            Gets or sets the underlying transport context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.IServerChannelSink">
            <summary>
            Gets the server channel sink.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity._iClientChannelSinkProvider">
            <summary>
            Client channel sink provider.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity._iServerChannelSinkProvider">
            <summary>
            Server channel sink provider.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.CreateClientChannelSinkProvider">
            <summary>
            Gets the client transport sink.
            </summary>
            <returns>Returns client transport sink.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity._properties">
            <summary>
            To implement Keys and Items members. See BaseChannelWithProperties for details.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.Keys">
            <summary>
            Gets an ICollection of keys that the channel object properties are associated with.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.Item(System.Object)">
            <summary>
            Gets or sets the property associated with the specified key.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.ChannelName">
            <summary>
            Gets the name of the channel.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity._channelName">
            <summary>
            Channel name which is available via ChannelName member.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.ChannelPriority">
            <summary>
            Gets the priority of the channel.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity._channelPriority">
            <summary>
            The channel priority which is available via the ChannelName member.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.Parse(System.String,System.String@)">
            <summary>
            Extracts the channel URI and the remote well known object URI from the specified URL.
            </summary>
            <param name="url">The URL from which to extract the URI of the remote well known object.</param>
            <param name="objectURI">When this method returns, contains a String that holds the URI of the remote well known object. This parameter is passed uninitialized.</param>
            <returns>The URI of the current channel.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.ChannelData">
            <summary>
            Gets the channel-specific data.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity._channelData">
            <summary>
            Contains channel's information available via ChannelData property.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.GetUrlsForUri(System.String)">
            <summary>
            Returns an array of all the URLs for a URI.
            </summary>
            <param name="objectUri">The URI for which URLs are required.</param>
            <returns>An array of the URLs.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.StartListening(System.Object)">
            <summary>
            Instructs the current channel to start listening for requests.
            </summary>
            <param name="data">Optional initialization information.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.StopListening(System.Object)">
            <summary>
            Instructs the current channel to stop listening for requests.
            </summary>
            <param name="data">Optional state information for the channel.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.CreateMessageSink(System.String,System.Object,System.String@)">
            <summary>
            Returns a channel message sink that delivers messages to the specified URL or channel data object.
            </summary>
            <param name="url">The url.</param>
            <param name="remoteChannelData">The information associated with the channel.</param>
            <param name="objectURI">The uri of the target.</param>
            <returns>A channel message sink that delivers messages to the specified URL or channel data object.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.SecuritySessionParameters">
            <summary>
            Gets or sets the current security context being used on the channel level.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.UrlPrefix">
            <summary>
            Gets the URL prefix of the channel.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity._urlPrefix">
            <summary>
            The URL prefix of the channel.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.UriPrefix">
            <summary>
            Gets the internal URI prefix of the channel.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity._possibleChannelPrefixes">
            <summary>
            Contains possible channel prefixes (such as gtcp, ghttp) supported by this channel.
            </summary>
        </member>
        <member name="E:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.GenuineChannelsEvent">
            <summary>
            This event is fired on any global event related to the current channel.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.FireGenuineEvent(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs)">
            <summary>
            Fires the GenuineChannelsGlobalEvent event with the specified parameters.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.PerformEventSending(System.Object)">
            <summary>
            Fires the event.
            </summary>
            <param name="genuineEventArgsAsObject">Event parameters.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.OnGenuineEvent(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs)">
            <summary>
            Genuine Event handler.
            </summary>
            <param name="genuineEventArgs">The event arguments.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.ReadSettings(System.Collections.IDictionary)">
            <summary>
            Reads settings.
            </summary>
            <param name="properties">Settings container to read from.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity.HandleMessage(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Handles the incoming message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs">
            <summary>
            Represents an event related to Genuine Channels solution.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs.#ctor(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType,System.Exception,Belikov.GenuineChannels.TransportContext.HostInformation,System.Object)">
            <summary>
            Initializes an instance of the GenuineEventArgs class.
            </summary>
            <param name="genuineEventType">Event type.</param>
            <param name="sourceException">Source exception.</param>
            <param name="hostInformation">Information about remote host.</param>
            <param name="additionalInfo">Additional information related to the event or a null reference.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs.EventType">
            <summary>
            The type of the event.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs.SourceException">
            <summary>
            The exception that causes this event or a null reference.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs.HostInformation">
            <summary>
            The information about the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs.AdditionalInfo">
            <summary>
            The optional information available for the event.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType">
            <summary>
            Enumerates all global events available in Genuine Channels solution.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GeneralConnectionIndeterminate">
            <summary>
            The connection is in the indeterminated state.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GeneralConnectionEstablished">
            <summary>
            The connection was established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GeneralServerRestartDetected">
            <summary>
            The remote server has been restarted.
            All URIs and transparent proxies became invalid.
            Client application has to re-login and reattach to all server's events.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GeneralNewSessionDetected">
            <summary>
            The remote host signals that this is the first persistent connection it has accepted or opened.
            Therefore, remote host has an empty Client Session and has no established Security Session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GeneralConnectionReestablishing">
            <summary>
            The connection has been broken but will be probably restored.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GeneralConnectionClosed">
            <summary>
            The connection was closed and all resources related to this connection were released.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GeneralListenerStarted">
            <summary>
            Connection Manager successfully started listening to the specific local end point.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GeneralListenerShutDown">
            <summary>
            Connection Manager stopped listening to the specific local end point.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GeneralListenerFailure">
            <summary>
            Connection Manager caught an exception during accepting connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GTcpConnectionAccepted">
            <summary>
            GTCP connection accepted from the client. You can analyze client's end point and
            reject the connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GHttpConnectionAccepted">
            <summary>
            GHTTP connection accepted from the client.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.GUdpSocketException">
            <summary>
            An exception fired by UDP socket.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.BroadcastUnknownCourtReceived">
            <summary>
            Broadcast message directed to unassigned court was received.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.UnknownServerService">
            <summary>
            A request has come to an unknown server service.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.SecuritySessionWasNotFound">
            <summary>
            Unknown security session is requested by the remote peer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.SecuritySessionFailed">
            <summary>
            Security session failed. All requests sent in this security context will result in
            exception. All responses will be lost (actually the current design of Genuine Channels
            prevents from having such responses, but in general it's possible).
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType.HostResourcesReleased">
            <summary>
            All resources associated with the remote host were released.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineGlobalEventProvider">
            <summary>
            The global event provier containing an event fired for every event related to Genuine Channels.
            </summary>
        </member>
        <member name="E:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineGlobalEventProvider.GenuineChannelsGlobalEvent">
            <summary>
            The event which is fired on any global event related to Genuine Channels.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineGlobalEventProvider.FireGlobalEvent(System.Object,Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs)">
            <summary>
            Fires the GenuineChannelsGlobalEvent event with specified parameters.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink">
            <summary>
            Implements the client transport sink.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink.#ctor(System.String,Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the GenuineTcpClientTransportSink class.
            </summary>
            <param name="url">The Url of the remote object.</param>
            <param name="iTransportContext">The transport context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink.ITransportContext">
            <summary>
            The transport context to send messages through.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink._properties">
            <summary>
            Internal properties.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink.Keys">
            <summary>
            Gets an ICollection of keys that the channel object properties are associated with.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink.Item(System.Object)">
            <summary>
            Gets or sets the property associated with the specified key.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink._recipientUri">
            <summary>
            The uri of the recipient.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink.NextChannelSink">
            <summary>
            Gets the next server channel sink in the server sink chain.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink.AsyncProcessRequest(System.Runtime.Remoting.Channels.IClientChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
            <summary>
            Requests asynchronous processing of a method call on the current sink.
            </summary>
            <param name="sinkStack">A stack of channel sinks that called this sink.</param>
            <param name="msg">The message to process.</param>
            <param name="headers">The headers to add to the outgoing message heading to the server.</param>
            <param name="stream">The stream headed to the transport sink.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
            <summary>
            Requests asynchronous processing of a response to a method call on the current sink.
            </summary>
            <param name="sinkStack">A stack of sinks that called this sink.</param>
            <param name="state">Information generated on the request side that is associated with this sink.</param>
            <param name="headers">The headers retrieved from the server response stream.</param>
            <param name="stream">The stream coming back from the transport sink.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink.GetRequestStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
            <summary>
            Returns the Stream onto which the provided message is to be serialized.
            </summary>
            <param name="msg">The IMethodCallMessage containing details about the method call.</param>
            <param name="headers">The headers to add to the outgoing message heading to the server.</param>
            <returns>The Stream onto which the provided message is to be serialized.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSink.ProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
            <summary>
            Requests message processing from the current sink.
            </summary>
            <param name="msg">The message to process.</param>
            <param name="requestHeaders">The headers to add to the outgoing message heading to the server.</param>
            <param name="requestStream">The stream headed to the transport sink.</param>
            <param name="responseHeaders">When this method returns, contains an ITransportHeaders interface that holds the headers that the server returned. This parameter is passed uninitialized.</param>
            <param name="responseStream">When this method returns, contains a Stream coming back from the transport sink. This parameter is passed uninitialized.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSinkProvider">
            <summary>
            Factory class creating tcp client transport sinks.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSinkProvider.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the GenuineTcpClientTransportSinkProvider class.
            </summary>
            <param name="iTransportContext">Transport Context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSinkProvider.ITransportContext">
            <summary>
            The transport context to send messages through.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSinkProvider.System#Runtime#Remoting#Channels#IClientChannelSinkProvider#Next">
            <summary>
            Gets or sets the next sink provider in the channel sink provider chain.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineTcpClientTransportSinkProvider.System#Runtime#Remoting#Channels#IClientChannelSinkProvider#CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
            <summary>
            Creates a client transport sink.
            </summary>
            <param name="channel">Channel for which the current sink chain is being constructed.</param>
            <param name="url">The URL of the object to connect to. This parameter can be a null reference (Nothing in Visual Basic) if the connection is based entirely on the information contained in the remoteChannelData parameter.</param>
            <param name="remoteChannelData">A channel data object describing a channel on the remote server.</param>
            <returns>The first sink of the newly formed channel sink chain, or a null reference (Nothing in Visual Basic) indicating that this provider will not or cannot provide a connection for this endpoint.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineUniversalServerTransportSink">
            <summary>
            Implements the server transport sink.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineUniversalServerTransportSink.#cctor">
            <summary>
            To avoid a problem inside MS code that can happen once per 380 thousand requests on multiCPU machines.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineUniversalServerTransportSink.#ctor(Belikov.GenuineChannels.DotNetRemotingLayer.BasicChannelWithSecurity,System.Runtime.Remoting.Channels.IServerChannelSink,Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Creates an instance of the GenuineTcpServerTransportSink class.
            </summary>
            <param name="channel">The parent channel.</param>
            <param name="nextChannelSink">The next channel sink for futher processing.</param>
            <param name="iTransportContext">The Transport Context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineUniversalServerTransportSink.ITransportContext">
            <summary>
            The transport context to send messages through.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineUniversalServerTransportSink.NextChannelSink">
            <summary>
            Gets the next server channel sink in the server sink chain.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineUniversalServerTransportSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
            <summary>
            Requests processing from the current sink of the response from a method call sent asynchronously.
            It's a reply to a previously processed async call.
            Parameter state is expected to contain source message.
            </summary>
            <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
            <param name="state">Information generated on the request side that is associated with this sink.</param>
            <param name="msg">The response message.</param>
            <param name="headers">The headers to add to the return message heading to the client.</param>
            <param name="stream">The stream heading back to the transport sink.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineUniversalServerTransportSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
            <summary>
            Returns the Stream onto which the provided response message is to be serialized.
            </summary>
            <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
            <param name="state">The state that has been pushed to the stack by this sink.</param>
            <param name="msg">The response message to serialize.</param>
            <param name="headers">The headers to put in the response stream to the client.</param>
            <returns>The Stream onto which the provided response message is to be serialized.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineUniversalServerTransportSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
            <summary>
            Requests message processing from the current sink.
            </summary>
            <param name="sinkStack">A stack of channel sinks that called the current sink.</param>
            <param name="requestMsg">The message that contains the request.</param>
            <param name="requestHeaders">Headers retrieved from the incoming message from the client.</param>
            <param name="requestStream">The stream that needs to be to processed and passed on to the deserialization sink.</param>
            <param name="responseMsg">When this method returns, contains an IMessage that holds the response message. This parameter is passed uninitialized.</param>
            <param name="responseHeaders">When this method returns, contains an ITransportHeaders that holds the headers that are to be added to return message heading to the client. This parameter is passed uninitialized.</param>
            <param name="responseStream">When this method returns, contains a Stream that is heading back to the transport sink. This parameter is passed uninitialized.</param>
            <returns>A ServerProcessing status value that provides information about how message was processed.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineUniversalServerTransportSink.Properties">
            <summary>
            Just to avoid compiler error.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineUniversalServerTransportSink.HandleIncomingMessage(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Handles incoming message (message, response or event).
            </summary>
            <param name="message">The message to handle.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.GenuineChannelsGlobalEventHandler">
            <summary>
            Is used to fire events related to Genuine Channels.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.IGenuineChannelEventProvider">
            <summary>
            IEventProvider allows intercepting channel events.
            </summary>
        </member>
        <member name="E:Belikov.GenuineChannels.DotNetRemotingLayer.IGenuineChannelEventProvider.GenuineChannelsEvent">
            <summary>
            This event is fired on any global event related to Genuine Channels.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.IGenuineChannelEventProvider.FireGenuineEvent(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs)">
            <summary>
            Fires the event with the specified parameter.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.ISessionSupport">
            <summary>
            Represents a thread-safe collection of key-and-value pairs.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.ISessionSupport.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key in thread-safe way.
            Deletes an entry if the set value is a null reference.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor">
            <summary>
            Processes replies to the .NET Remoting invocations sent synchronously.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Initializes the instance of the SyncSinkStackResponseProcessor class.
            </summary>
            <param name="iTransportContext">The Transport Context.</param>
            <param name="message">The source message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.Dispose">
            <summary>
            Releases acquired resources.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.IsReceivedEvent">
            <summary>
            Is set when the response has been received.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.Response">
            <summary>
            The received response.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.DispatchedException">
            <summary>
            The exception dispatched instead of the response.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.ProcessRespose(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Directs the message to the message receiver.
            </summary>
            <param name="message">The response.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.DispatchException(System.Object)">
            <summary>
            Dispatches the exception to the caller.
            </summary>
            <param name="exceptionAsObject">The exception.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.IsExpired(System.Int32)">
            <summary>
            Indicates whether this message processor still waits for the response(s).
            </summary>
            <param name="now">The current time elapsed since the system started.</param>
            <returns>True if the message processor still waits for the response.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.Remote">
            <summary>
            Gets the uri of the remote host expected to send a response.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.IsShortInProcessing">
            <summary>
            Gets an indication whether the response processor does not require a separate thread for processing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.DotNetRemotingLayer.SyncSinkStackResponseProcessor.Message">
            <summary>
            Gets the initial message for which the response is expected. Is used only for debugging purposes to track down
            the source message.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GCHandleKeeper">
            <summary>
            GCHandleKeeper holds on GCHandle structure and implements the IDisposable interface
            for releasing resources obtained by GCHandle.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GCHandleKeeper.#ctor(System.Object,System.Runtime.InteropServices.GCHandleType)">
            <summary>
            Constructs an instance of the GCHandleKeeper class.
            </summary>
            <param name="val"></param>
            <param name="type"></param>
        </member>
        <member name="F:Belikov.GenuineChannels.GCHandleKeeper.GCHandle">
            <summary>
            GCHandle instance.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GCHandleKeeper.Dispose">
            <summary>
            Releases the pin.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions">
            <summary>
            Utility that centralizes all exceptions.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Send_TooLargePacketSize(System.Int32,System.Int32)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="packetSize">Size of the packet being sent.</param>
            <param name="maxContentSize">Maximum allowable packet size.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.TooLargePacketSize">
            <summary>
            The exception that is thrown when a too large message is being sent.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TooLargePacketSize.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the TooLargePacketSize class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TooLargePacketSize.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TooLargePacketSize.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TooLargePacketSize class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TooLargePacketSize.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the TooLargePacketSize class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Send_TransportProblem">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.SendTransportProblem">
            <summary>
            The exception that is thrown when the message cannot be delivered
            because the socket.Send operation informs that zero bytes have been sent.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendTransportProblem.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the SendTransportProblem class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendTransportProblem.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendTransportProblem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SendTransportProblem class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendTransportProblem.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the SendTransportProblem class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Send_ServerDidNotReply">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ServerDidNotReply">
            <summary>
            The exception that is thrown when the server does not reply within the specified period of time.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ServerDidNotReply.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ServerDidNotReply class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ServerDidNotReply.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ServerDidNotReply.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ServerDidNotReply class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ServerDidNotReply.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ServerDidNotReply class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Send_Timeout">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.SendTimeout">
            <summary>
            The exception that is thrown when the timeout of the send operation elapses.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendTimeout.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the SendTimeout class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendTimeout.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendTimeout.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SendTimeout class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendTimeout.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the SendTimeout class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Send_NoSender(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="destination">Destination</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.SendNoSender">
            <summary>
            The exception that is thrown when no connection available that can deliver the message to the specified destination.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendNoSender.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the SendNoSender class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendNoSender.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendNoSender.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SendNoSender class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SendNoSender.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the SendNoSender class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Send_DestinationIsUnreachable(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="destination">Destination</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.DestinationIsUnreachable">
            <summary>
            The exception that is thrown when the destination is unreachable.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.DestinationIsUnreachable.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the DestinationIsUnreachable class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.DestinationIsUnreachable.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.DestinationIsUnreachable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the DestinationIsUnreachable class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.DestinationIsUnreachable.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the DestinationIsUnreachable class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Send_NoNamedConnectionFound(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="connectionName">Name of the connection</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.NoNamedConnectionFound">
            <summary>
            The exception that is thrown when the specified named connection cannot be found.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoNamedConnectionFound.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the NoNamedConnectionFound class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoNamedConnectionFound.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoNamedConnectionFound.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the NoNamedConnectionFound class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoNamedConnectionFound.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the NoNamedConnectionFound class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Send_QueueIsOverloaded(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.QueueIsOverloaded">
            <summary>
            The exception that is thrown when a queue is overrun.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.QueueIsOverloaded.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the QueueIsOverloaded class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.QueueIsOverloaded.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.QueueIsOverloaded.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the QueueIsOverloaded class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.QueueIsOverloaded.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the QueueIsOverloaded class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Connect_CanNotConnectToRemoteHost(System.String,System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="url">Url.</param>
            <param name="systemReason">Windows error message.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.CanNotConnectToRemoteHost">
            <summary>
            The exception that is thrown when the connection to the remote host can not be established.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotConnectToRemoteHost.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the CanNotConnectToRemoteHost class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotConnectToRemoteHost.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotConnectToRemoteHost.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the CanNotConnectToRemoteHost class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotConnectToRemoteHost.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the CanNotConnectToRemoteHost class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Connect_CanNotResolveHostName(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="hostName">Host name.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.CanNotResolveHostName">
            <summary>
            The exception that is thrown when the Dns.Resolve method fails.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotResolveHostName.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the CanNotResolveHostName class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotResolveHostName.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotResolveHostName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the CanNotResolveHostName class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotResolveHostName.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the CanNotResolveHostName class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Connect_RemoteHostDoesNotRespond">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.RemoteHostDoesNotRespond">
            <summary>
            The exception that is thrown when the remote host does not respond to the request.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.RemoteHostDoesNotRespond.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the RemoteHostDoesNotRespond class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.RemoteHostDoesNotRespond.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.RemoteHostDoesNotRespond.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the RemoteHostDoesNotRespond class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.RemoteHostDoesNotRespond.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the RemoteHostDoesNotRespond class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Connect_CanNotAcceptIncomingConnection(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="reason">Error source.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.CanNotAcceptIncomingConnection">
            <summary>
            The exception that is thrown when a server can not accept the inbound connection.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotAcceptIncomingConnection.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the CanNotAcceptIncomingConnection class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotAcceptIncomingConnection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotAcceptIncomingConnection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the CanNotAcceptIncomingConnection class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotAcceptIncomingConnection.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the CanNotAcceptIncomingConnection class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Connect_ConnectionReestablished">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ConnectionReestablished">
            <summary>
            The exception that is thrown when a connection can not be reestablished.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionReestablished.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ConnectionReestablished class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionReestablished.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionReestablished.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ConnectionReestablished class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionReestablished.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ConnectionReestablished class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Connection_LifetimeCycleEnded">
            <summary>
            Returns a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.LifetimeCycleEnded">
            <summary>
            The exception that is thrown when a connection is closed due to expired lifetime.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.LifetimeCycleEnded.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the LifetimeCycleEnded class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.LifetimeCycleEnded.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.LifetimeCycleEnded.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the LifetimeCycleEnded class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.LifetimeCycleEnded.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the LifetimeCycleEnded class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Host_IncorrectHostUpdate">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.IncorrectHostUpdate">
            <summary>
            The exception that is thrown when a host cannot update its URI or URL.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectHostUpdate.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the IncorrectHostUpdate class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectHostUpdate.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectHostUpdate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the IncorrectHostUpdate class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectHostUpdate.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the IncorrectHostUpdate class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_IncorrectData">
            <summary>
            Returns an instance of the predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.IncorrectData">
            <summary>
            The exception that is thrown when an incorrect information is received.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectData.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the IncorrectData class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the IncorrectData class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectData.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the IncorrectData class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_IncorrectData(System.String)">
            <summary>
            Returns an instance of the predefined exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_TooLargePortionToReceive">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.TooLargePortionToReceive">
            <summary>
            The exception that is thrown when the size of the message exceeds the set boundaries.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TooLargePortionToReceive.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the TooLargePortionToReceive class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TooLargePortionToReceive.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TooLargePortionToReceive.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TooLargePortionToReceive class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TooLargePortionToReceive.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the TooLargePortionToReceive class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_Portion">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_ConnectionClosed">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ConnectionClosed">
            <summary>
            The exception that is thrown when the connection is closed.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionClosed.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ConnectionClosed class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionClosed.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionClosed.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ConnectionClosed class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionClosed.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ConnectionClosed class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_ConnectionClosed(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_NoServices(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="destination">Destination.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.NoServices">
            <summary>
            The exception that is thrown when the request service is not found.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoServices.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the NoServices class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoServices.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoServices.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the NoServices class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoServices.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the NoServices class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_NoServerChannel">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.NoServerChannel">
            <summary>
            The exception that is thrown when there is no channel registered with the name "ghttp".
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoServerChannel.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the NoServerChannel class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoServerChannel.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoServerChannel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the NoServerChannel class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoServerChannel.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the NoServerChannel class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_ServerHasBeenRestared">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ServerHasBeenRestarted">
            <summary>
            The exception that is thrown if a restart of the remote host is detected.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ServerHasBeenRestarted.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ServerHasBeenRestarted class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ServerHasBeenRestarted.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ServerHasBeenRestarted.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ServerHasBeenRestarted class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ServerHasBeenRestarted.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ServerHasBeenRestarted class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_NewSessionDetected">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.NewSessionDetected">
            <summary>
            The exception that is thrown if a restart of the remote host is detected.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NewSessionDetected.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the NewSessionDetected class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NewSessionDetected.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NewSessionDetected.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the NewSessionDetected class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NewSessionDetected.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the NewSessionDetected class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Receive_ConflictOfConnections">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ConflictOfConnections">
            <summary>
            The exception that is thrown when a conflict of connections has been detected.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConflictOfConnections.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ConflictOfConnections class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConflictOfConnections.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConflictOfConnections.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ConflictOfConnections class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConflictOfConnections.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ConflictOfConnections class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Processing_LogicError(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="reason">Error source.</param>
            <returns>An instance of the object representing the exception.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.LogicError">
            <summary>
            The exception that is thrown when a false assertion is found.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.LogicError.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the LogicError class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.LogicError.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.LogicError.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the LogicError class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.LogicError.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the LogicError class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Processing_NoSessionAvailable">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.NoSessionAvailable">
            <summary>
            The exception that is thrown when the requested Security Session is not available.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoSessionAvailable.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the NoSessionAvailable class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoSessionAvailable.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoSessionAvailable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the NoSessionAvailable class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NoSessionAvailable.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the NoSessionAvailable class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Processing_ThreadPoolLimitExceeded">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ThreadPoolLimitExceeded">
            <summary>
            The exception that is thrown when a Thread Pool is exceeded.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ThreadPoolLimitExceeded.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ThreadPoolLimitExceeded class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ThreadPoolLimitExceeded.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ThreadPoolLimitExceeded.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ThreadPoolLimitExceeded class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ThreadPoolLimitExceeded.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ThreadPoolLimitExceeded class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Processing_TransportConnectionFailed">
            <summary>
            Returns a predefined exception to throw.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.TransportConnectionFailed">
            <summary>
            The exception that is thrown when the transport connection fails.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TransportConnectionFailed.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the TransportConnectionFailed class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TransportConnectionFailed.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TransportConnectionFailed.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TransportConnectionFailed class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.TransportConnectionFailed.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the TransportConnectionFailed class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Processing_HostResourcesReleased(System.String,System.String)">
            <summary>
            Returns a predefined exception to throw.
            </summary>
            <param name="uri">The URI of the remote host.</param>
            <param name="url">The URL of the remote host.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.HostResourcesReleased">
            <summary>
            The exception that is thrown when the host resources were released.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.HostResourcesReleased.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the HostResourcesReleased class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.HostResourcesReleased.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.HostResourcesReleased.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the HostResourcesReleased class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.HostResourcesReleased.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the HostResourcesReleased class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Server_IncorrectAddressToListen(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="url">Url.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.IncorrectUrl">
            <summary>
            The exception that is thrown when an incorrect url is provided.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectUrl.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the IncorrectUrl class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectUrl.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectUrl.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the IncorrectUrl class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.IncorrectUrl.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the IncorrectUrl class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Server_EndPointIsAlreadyBeingListenedTo(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="url">Url.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.EndPointListened">
            <summary>
            The exception that is thrown when .
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.EndPointListened.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the EndPointListened class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.EndPointListened.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.EndPointListened.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EndPointListened class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.EndPointListened.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the EndPointListened class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Channel_ClientDidNotReconnectWithinTimeOut(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="url">Url.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ClientDidNotReconnectWithinTimeOut">
            <summary>
            The exception that is thrown when the client did not reestablish a connection within the specified period of time.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ClientDidNotReconnectWithinTimeOut.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ClientDidNotReconnectWithinTimeOut class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ClientDidNotReconnectWithinTimeOut.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ClientDidNotReconnectWithinTimeOut.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ClientDidNotReconnectWithinTimeOut class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ClientDidNotReconnectWithinTimeOut.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ClientDidNotReconnectWithinTimeOut class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Windows_CanNotCreateOrOpenNamedEvent(System.Int32)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="errorCode">Windows' error code.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.CanNotCreateOrOpenNamedEvent">
            <summary>
            The exception that is thrown when creation or opening of the global event fails.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotCreateOrOpenNamedEvent.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the CanNotCreateOrOpenNamedEvent class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotCreateOrOpenNamedEvent.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotCreateOrOpenNamedEvent.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the CanNotCreateOrOpenNamedEvent class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotCreateOrOpenNamedEvent.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the CanNotCreateOrOpenNamedEvent class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Windows_NamedEventError(System.Int32)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="errorCode">Windows' error code.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.NamedEventError">
            <summary>
            The exception that is thrown when an operation on a named event fails.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NamedEventError.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the NamedEventError class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NamedEventError.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NamedEventError.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the NamedEventError class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.NamedEventError.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the NamedEventError class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Windows_CanNotCreateOrOpenSharedMemory(System.Int32)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="errorCode">Windows' error code.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.CanNotCreateOrOpenSharedMemory">
            <summary>
            The exception that is thrown when the memory share cannot be created or opened.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotCreateOrOpenSharedMemory.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the CanNotCreateOrOpenSharedMemory class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotCreateOrOpenSharedMemory.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotCreateOrOpenSharedMemory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the CanNotCreateOrOpenSharedMemory class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.CanNotCreateOrOpenSharedMemory.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the CanNotCreateOrOpenSharedMemory class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Windows_SharedMemoryError(System.Int32)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="errorCode">Windows' error code.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.SharedMemoryError">
            <summary>
            The exception that is thrown when an error occurs during work with shared memory.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SharedMemoryError.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the SharedMemoryError class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SharedMemoryError.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SharedMemoryError.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SharedMemoryError class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SharedMemoryError.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the SharedMemoryError class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Windows_SspiError(System.Int32)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="errorCode">Windows' error code.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.SspiError">
            <summary>
            The exception that is thrown when an SSPI error occurs.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SspiError.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the SspiError class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SspiError.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SspiError.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SspiError class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SspiError.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the SspiError class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Windows_SspiDidNotProvideRequestedFeature(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="feature">Feature.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.SspiDidNotProvideRequestedFeature">
            <summary>
            The exception that is thrown if the established SSPI context does not support a requested feature.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SspiDidNotProvideRequestedFeature.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the SspiDidNotProvideRequestedFeature class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SspiDidNotProvideRequestedFeature.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SspiDidNotProvideRequestedFeature.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SspiDidNotProvideRequestedFeature class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.SspiDidNotProvideRequestedFeature.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the SspiDidNotProvideRequestedFeature class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Channel_InvalidParameter(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="parameterName">Name of parameter.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.InvalidParameter">
            <summary>
            The exception that is thrown when an invalid parameter value is found.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.InvalidParameter.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the InvalidParameter class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.InvalidParameter.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.InvalidParameter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidParameter class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.InvalidParameter.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the InvalidParameter class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Channel_ReconnectionFailed">
            <summary>
            Returns a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ReconnectionFailed">
            <summary>
            The exception that is thrown when a client channel was not able to reconnect to the server.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ReconnectionFailed.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ReconnectionFailed class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ReconnectionFailed.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ReconnectionFailed.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ReconnectionFailed class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ReconnectionFailed.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ReconnectionFailed class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Channel_ConnectionGracefullyClosed">
            <summary>
            Returns a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ConnectionGracefullyClosed">
            <summary>
            The exception signals that the connection has been correctly closed.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionGracefullyClosed.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ConnectionGracefullyClosed class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionGracefullyClosed.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionGracefullyClosed.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ConnectionGracefullyClosed class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionGracefullyClosed.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ConnectionGracefullyClosed class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Channel_ConnectionShutDown(System.Exception)">
            <summary>
            Returns a predefined exception.
            </summary>
            <param name="reason">The reason of the connection shutdown.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ConnectionShutDown">
            <summary>
            The exception that is thrown when a connection is forcibly shut down.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionShutDown.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ConnectionShutDown class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionShutDown.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionShutDown.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ConnectionShutDown class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionShutDown.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ConnectionShutDown class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Channel_ConnectionClosedAfterTimeout">
            <summary>
            Returns a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ConnectionClosedAfterTimeout">
            <summary>
            The exception that is thrown when a connection is closed due to its inactivity.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionClosedAfterTimeout.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ConnectionClosedAfterTimeout class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionClosedAfterTimeout.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionClosedAfterTimeout.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ConnectionClosedAfterTimeout class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ConnectionClosedAfterTimeout.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ConnectionClosedAfterTimeout class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Channel_Closed">
            <summary>
            Returns a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ChannelClosed">
            <summary>
            The exception that is thrown if the requested channel is closed.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ChannelClosed.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ChannelClosed class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ChannelClosed.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ChannelClosed.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ChannelClosed class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ChannelClosed.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ChannelClosed class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Channel_Desynchronization">
            <summary>
            Returns a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ChannelDesynchronization">
            <summary>
            The exception that is thrown when a connection is closed due to its inactivity.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ChannelDesynchronization.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ChannelDesynchronization class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ChannelDesynchronization.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ChannelDesynchronization.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ChannelDesynchronization class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ChannelDesynchronization.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ChannelDesynchronization class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Broadcast_DestinationTypeMustBeAnInterface">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Broadcast_ClientSinkIsUnknown">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Broadcast_RemoteEndPointDidNotReplyForTimeOut">
            <summary>
            Returns a predefined exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Broadcast_CallHasAlreadyBeenMade">
            <summary>
            Returns a predefined exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Broadcast_HandlerUninitialized">
            <summary>
            Returns a predefined exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Security_ContextNotFound(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="keyName">Context's name.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ContextNotFound">
            <summary>
            The exception that is thrown when a Security Key Provider is not found.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ContextNotFound.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ContextNotFound class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ContextNotFound.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ContextNotFound.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ContextNotFound class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ContextNotFound.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ContextNotFound class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Security_ContextWasNotEstablished(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="keyName">Context's name.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.ContextWasNotEstablished">
            <summary>
            The exception that is thrown when then requested Security Session is not established.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ContextWasNotEstablished.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the ContextWasNotEstablished class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ContextWasNotEstablished.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ContextWasNotEstablished.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ContextWasNotEstablished class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.ContextWasNotEstablished.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the ContextWasNotEstablished class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Security_UnexpectedContext(System.String,System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="keyName">The requested context name.</param>
            <param name="expectedKeyName">The expected context name.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Security_InvalidTimeoutParameter(System.String)">
            <summary>
            Gets a predefined exception.
            </summary>
            <param name="val">Incorrect value.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Security_PasswordKnowledgeIsNotProved">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.PasswordKnowledgeIsNotProved">
            <summary>
            The exception that is thrown when the received hash sum doesn't match the expected sequence.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.PasswordKnowledgeIsNotProved.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the PasswordKnowledgeIsNotProved class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.PasswordKnowledgeIsNotProved.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.PasswordKnowledgeIsNotProved.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the PasswordKnowledgeIsNotProved class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.PasswordKnowledgeIsNotProved.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the PasswordKnowledgeIsNotProved class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Security_WrongSignature">
            <summary>
            Gets a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.WrongSignature">
            <summary>
            The exception that is thrown when the received message doesn't pass checking on signature.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.WrongSignature.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the WrongSignature class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.WrongSignature.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.WrongSignature.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the WrongSignature class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.WrongSignature.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the WrongSignature class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.Get_Debugging_GeneralWarning(System.String,System.Object[])">
            <summary>
            Returns a predefined exception.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineExceptions.DebuggingGeneralWarning">
            <summary>
            The exception that is thrown when the application falls into an exception flow.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.DebuggingGeneralWarning.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the DebuggingGeneralWarning class.
            </summary>
            <param name="operationErrorMessage"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.DebuggingGeneralWarning.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.DebuggingGeneralWarning.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the DebuggingGeneralWarning class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.DebuggingGeneralWarning.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the DebuggingGeneralWarning class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineExceptions.DebuggingGeneralWarning.StackTrace">
            <summary>
            Gets a string representation of the frames on the call stack at the time the current exception was thrown.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineExceptions.IGenuineExceptionLocalizer">
            <summary>
            Gets or sets the localizer that can provide localized error messages.
            This property is thread-safe.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineExceptions.GetLocalizedErrorOrDefaultText(System.String,System.String,System.Object[])">
            <summary>
            Gets the error message corresponding to the specified error identifier.
            The default error message is used if the currently available localizer does not provide the localized error message.
            </summary>
            <param name="errorIdentifier">The error identifier.</param>
            <param name="errorMessageParameters">The error message parameters.</param>
            <param name="defaultErrorMessage">The default error message.</param>
            <returns>The error message corresponding to the specified error identifier.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.GenuineHttpClientChannel">
            <summary>
            Implements GHTTP client channel behavior.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.GenuineHttpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
            <summary>
            Constructs an instance of the GenuineHttpClientChannel class.
            </summary>
            <param name="properties">An IDictionary of the channel properties which hold the configuration information for the current channel.</param>
            <param name="iClientChannelSinkProvider">The IClientChannelSinkProvider that creates the client channel sinks for the underlying channel through which remoting messages flow through.</param>
            <param name="iServerChannelSinkProvider">The IServerChannelSinkProvider that creates server channel sinks for the underlying channel through which remoting messages flow through.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.GenuineHttpClientChannel.GetUrlsForUri(System.String)">
            <summary>
            Returns an array of all the URLs for a URI.
            </summary>
            <param name="objectUri">The URI for which URLs are required.</param>
            <returns>An array of the URLs.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.GenuineHttpClientChannel.UriPrefix">
            <summary>
            Gets the initial part of the URI prefix.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.GenuineHttpServerChannel">
            <summary>
            Implements GHTTP server channel behavior.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.GenuineHttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
            <summary>
            Constructs an instance of the GenuineHttpServerChannel class.
            </summary>
            <param name="properties">An IDictionary of the channel properties which hold the configuration information for the current channel.</param>
            <param name="iClientChannelSinkProvider">The IClientChannelSinkProvider that creates the client channel sinks for the underlying channel through which remoting messages flow through.</param>
            <param name="iServerChannelSinkProvider">The IServerChannelSinkProvider that creates server channel sinks for the underlying channel through which remoting messages flow through.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.GenuineHttpServerChannel.GetUrlsForUri(System.String)">
            <summary>
            Returns an array of all the URLs for a URI.
            </summary>
            <param name="objectUri">The URI for which URLs are required.</param>
            <returns>An array of the URLs.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.GenuineHttpServerChannel.UriPrefix">
            <summary>
            Gets the initial part of the URI prefix.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection">
            <summary>
            Implements GHTTP client connection logic.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,System.String)">
            <summary>
            Constructs an instance of the HttpClientConnection class.
            </summary>
            <param name="iTransportContext">The Transport Context.</param>
            <param name="connectionName">The name of the connection.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.HttpClientConnectionManager">
            <summary>
            The connection manager.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.HostId">
            <summary>
            The identifier of the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.HostIdAsString">
            <summary>
            The connection id in string format.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.ConnectionName">
            <summary>
            The name of the connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.DbgConnectionId">
            <summary>
            The unique connection identifier, which is used for debugging purposes only.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.MessageContainer">
            <summary>
            The message queue.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.ITransportContext">
            <summary>
            The transport context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Remote">
            <summary>
            The remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.GenuineConnectionType">
            <summary>
            The type of this connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Sender_ConnectionLevelSecurity">
            <summary>
            Connection-level Security Session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Listener_ConnectionLevelSecurity">
            <summary>
            Connection-level Security Session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.SendingLock">
            <summary>
            Sender must obtain the lock for this object in order to send something.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.IsSent">
            <summary>
            Indicates whether the request is being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.MessagesBeingSent">
            <summary>
            Contains all messages currently being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Sender">
            <summary>
            The sender.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.SentContent">
            <summary>
            Content being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Sender_SendBuffer">
            <summary>
            The buffer for intermediate serialization.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Sender_ReceiveBuffer">
            <summary>
            The buffer for analyzing incoming content.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.OnEndSending">
            <summary>
            The callback calling on the end of sending.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.SendSequenceNo">
            <summary>
            The sequence number of the packet.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.SenderClosed">
            <summary>
            Signals whether the sender request was completed.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Callback_OnEndSending(System.IAsyncResult)">
            <summary>
            Processes sending results.
            </summary>
            <param name="ar">The result.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.ListenerSequenceNo">
            <summary>
            The sequence number of the packet.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Listener">
            <summary>
            The listener.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.OnEndReceiving">
            <summary>
            The callback calling on the end of receiving.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Listener_ReceiveBuffer">
            <summary>
            The buffer for analyzing incoming content.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.ListenerClosed">
            <summary>
            Signals whether the listener request was completed.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Callback_OnEndReceiving(System.IAsyncResult)">
            <summary>
            Processes sending results.
            </summary>
            <param name="ar">The result.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.ReconnectionContainer">
            <summary>
            Implements a reconnection lock that indicates whether reconnection process is in progress
            and when its timeout expires.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.ReconnectionContainer.SyncLock">
            <summary>
            A lock for this object must be obtained before using any members of this class.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.ReconnectionContainer.RequestFailed">
            <summary>
            A boolean value that indicates whether the HTTP request has failed and IsReconnectionStarted was true when this happened.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.ReconnectionContainer.ReconnectionStartedAt">
            <summary>
            The moment when reconnection was initiated.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.ReconnectionContainer.IsReconnectionStarted">
            <summary>
            Gets or sets a value indicating whether the reconnection is in progress.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.ListenerReconnectionLock">
            <summary>
            The reconnection lock for the listener connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.SenderReconnectionLock">
            <summary>
            The reconnection lock for the sender connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection._keepalive">
            <summary>
            Represents a value indicating whether HTTP 1.1 keep-alive connections will be used.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.InitializeRequest(System.Boolean,System.Boolean)">
            <summary>
            Creates and initializes http web request.
            </summary>
            <param name="sender">True to create a sender request.</param>
            <param name="keepAlive">False to force connection closing.</param>
            <returns>Initialized HttpWebRequest instance.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.LastMessageWasReceviedAt">
            <summary>
            The moment by which the message should be received successfuly via this connection.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.LastMessageWasSentAt">
            <summary>
            The moment at which the last message was sent to the remote host.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection._disposed">
            <summary>
            Indicates whether this instance was disposed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection._disposeReason">
            <summary>
            The reason this shell was disposed due to.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection._disposeLock">
            <summary>
            Dispose lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.Dispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.On_ShutdownCompleted(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous invocation.
            </summary>
            <param name="ar">The async result.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection._connectionStateSignaller">
            <summary>
            The state controller.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection._connectionStateSignallerLock">
            <summary>
            The state controller lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnection.SignalState(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType,System.Exception,System.Object)">
            <summary>
            Sets the state of the connection.
            </summary>
            <param name="genuineEventType">The state of the connection.</param>
            <param name="reason">The exception.</param>
            <param name="additionalInfo">The additional info.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager">
            <summary>
            Implements HTTP transport manager working via .NET Remoting http web request implementation.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the HttpClientConnectionManager class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.InternalSend(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Sends the message to the remote host.
            </summary>
            <param name="message">The message to be sent.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.InternalSend(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.GenuineHttp.HttpClientConnection)">
            <summary>
            Sends the message to the remote host.
            </summary>
            <param name="message">The message to be sent.</param>
            <param name="httpClientConnection">The connection.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager._invocation">
            <summary>
            Set of invocation connections { remote url => connection }.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.FindInvocationConnection(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Gets an invocation connection that is able to deliver a message and receive a result.
            </summary>
            <param name="message">The source message.</param>
            <returns>An invocation connection that is able to deliver a message and receive a result.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager._persistent">
            <summary>
            Set of connections {remote url => connection}.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager._hostRenewingSpan">
            <summary>
            TimeSpan to renew the host resource for.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.Pool_GetConnectionForSending(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Opens or returns established connection according to message parameters.
            </summary>
            <param name="message">The message.</param>
            <returns>The established connection.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.Pool_Sender_OnEndSending(Belikov.GenuineChannels.GenuineHttp.HttpClientConnection,System.Net.HttpWebResponse)">
            <summary>
            Finishes sending a message through the connection.
            </summary>
            <param name="httpClientConnection">The connection.</param>
            <param name="httpWebResponse">The received response.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.Pool_Sender_OnEndSending_ContinueExchange(System.Object)">
            <summary>
            This is the second part of the Pool_Sender_OnEndSending implementation being
            executed in the separate thread to prevent .NET Framework internal deadlock.
            </summary>
            <param name="httpClientConnectionAsObject">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.ConnectionFailed(Belikov.GenuineChannels.GenuineHttp.HttpClientConnection,System.Boolean,System.Exception,System.Boolean)">
            <summary>
            Processes failed or closed connections.
            </summary>
            <param name="httpClientConnection">The connection.</param>
            <param name="sender">The type of the failed connection (P/Async).</param>
            <param name="exception">The exception.</param>
            <param name="tryToReestablish">True if it's a good idea to try to reestablish the connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.TimerCallback">
            <summary>
            Closes expired connections and sends ping via inactive connections.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.Internal_TimerCallback(System.Object)">
            <summary>
            Closes expired connections and sends ping via inactive connections.
            </summary>
            <param name="ignored">Ignored.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.PerformConnectionFailure(System.Object)">
            <summary>
            Closes the expired connection.
            </summary>
            <param name="httpClientConnectionAsObject">The connection to be closed.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.SendPing(System.Object)">
            <summary>
            Sends a ping through the specified connection.
            </summary>
            <param name="httpClientConnectionAsObject">The connection.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.FailedHttpRequest">
            <summary>
            Represents a failed HTTP request.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.FailedHttpRequest.HttpClientConnection">
            <summary>
            The connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.FailedHttpRequest.Exception">
            <summary>
            The reason of failure.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.FailedHttpRequest.Sender">
            <summary>
            Represents a value indicating the type of the failed connection.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.ReestablishFailedConnection(System.Object)">
            <summary>
            Tries to reestablish the failed connection.
            </summary>
            <param name="failedHttpRequestAsObject">The failed request.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager._webRequestInitiationTimeout">
            <summary>
            Represents a value indicating the maximum time period of WebRequest initialization.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.LowLevel_Sender_Send(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.GenuineHttp.HttpClientConnection,System.AsyncCallback,System.Boolean)">
            <summary>
            Sends the message to the remote host through the sender connection.
            </summary>
            <param name="message">Message to be sent.</param>
            <param name="httpClientConnection">The connection.</param>
            <param name="asyncCallback">The callback to be called after the operation will be completed.</param>
            <param name="repeatSending">Whether to send the previous content again.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.LowLevel_InitiateHttpWebRequest(System.Net.HttpWebRequest,System.IO.Stream,System.Threading.ManualResetEvent,System.Boolean,System.AsyncCallback,Belikov.GenuineChannels.GenuineHttp.HttpClientConnection)">
            <summary>
            Initiates the HTTP request.
            </summary>
            <param name="httpWebRequest">The instance of the HttpWebRequest class.</param>
            <param name="inputStream">The input stream.</param>
            <param name="closed">The state event.</param>
            <param name="sender">Indicates whether the sender request is being sent.</param>
            <param name="asyncCallback">The callback.</param>
            <param name="dbgHttpClientConnection">The connection provided for debugging purposes.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.LowLevel_OpenConnection(Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.String)">
            <summary>
            Opens connection to the remote host.
            </summary>
            <param name="remote">The remote host.</param>
            <param name="genuineConnectionType">The type of the connection.</param>
            <param name="connectionName">The name of the connection.</param>
            <returns>The opened connection.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.LowLevel_ParseLabelledStream(System.IO.Stream,System.Byte[],Belikov.GenuineChannels.GenuineHttp.HttpClientConnection,Belikov.GenuineChannels.Security.SecuritySession)">
            <summary>
            Reads messages from the stream and processes them.
            </summary>
            <param name="stream">The source stream.</param>
            <param name="intermediateBuffer">The intermediate buffer.</param>
            <param name="httpClientConnection">The connection.</param>
            <param name="connectionLevelSecuritySession">The Connection Level Security Session that decrypted this message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.LowLevel_InitiateListening(Belikov.GenuineChannels.GenuineHttp.HttpClientConnection,System.Boolean)">
            <summary>
            Initiates the listening request.
            </summary>
            <param name="httpClientConnection">The connection.</param>
            <param name="requestNextPacket">Whether to request the next packet.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.Listener_OnEndReceiving(Belikov.GenuineChannels.GenuineHttp.HttpClientConnection,System.Net.HttpWebResponse)">
            <summary>
            Finishes sending a message through the connection.
            </summary>
            <param name="httpClientConnection">The connection.</param>
            <param name="httpWebResponse">The received response.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.Listener_OnEndReceiving_ContinueExchange(System.Object)">
            <summary>
            The second part of the Listener_OnEndReceiving member implementation which is executed
            in the separate thread to avoid internal .NET Framework deadlock.
            </summary>
            <param name="httpClientConnectionAsObject">The connection represented as a reference to an instance of the Object class.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.StartListening(System.Object)">
            <summary>
            Starts listening to the specified end point and accepting incoming connections.
            </summary>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.StopListening(System.Object)">
            <summary>
            Stops listening to the specified end point. Does not close any connections.
            </summary>
            <param name="endPoint">The end point</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.ReleaseConnections(Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.Exception)">
            <summary>
            Closes the specified connections to the remote host and releases acquired resources.
            </summary>
            <param name="hostInformation">Host information.</param>
            <param name="genuineConnectionType">What kind of connections will be affected by this operation.</param>
            <param name="reason">Reason of resource releasing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.GetConnectionNames(System.String)">
            <summary>
            Returns names of connections opened to the specified destination.
            Not all Connection Manager support this member.
            </summary>
            <param name="uri">The URI or URL of the remote host.</param>
            <returns>Names of connections opened to the specified destination.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.InternalDispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.StartReestablishingIfNecessary(Belikov.GenuineChannels.GenuineHttp.HttpClientConnection,System.Exception,System.Boolean)">
            <summary>
            Starts reestablishing if it has not been started.
            </summary>
            <param name="httpClientConnection">The HTTP client connection.</param>
            <param name="exception">The reason of the connection failure.</param>
            <param name="sender">A flag indicating the role of the connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpClientConnectionManager.ReestablishingCompleted(Belikov.GenuineChannels.GenuineHttp.HttpClientConnection,System.Boolean)">
            <summary>
            Resets the reestablishing flag.
            </summary>
            <param name="httpClientConnection">The HTTP client connection.</param>
            <param name="sender">A flag indicating the role of the connection.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection">
            <summary>
            Represents an invocation connection opened to a particular remote host.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Constructs an instance of the HttpInvocationConnection class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
            <param name="remote">The remote host.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.HostId">
            <summary>
            The identifier of the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.HostIdAsString">
            <summary>
            The connection id in string format.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.ITransportContext">
            <summary>
            The transport context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.Remote">
            <summary>
            The remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.SendMessage(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Sends the stream to the remote host.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.InitiateSending(Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.ConnectionInfo,System.IO.Stream,System.Int32)">
            <summary>
            Initiates sending of the specified HTTP request.
            </summary>
            <param name="connectionInfo">The connection.</param>
            <param name="stream">The content of the request.</param>
            <param name="timeout">The timeout of the operation.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.ConnectionInfo">
            <summary>
            A storage containing information with respect to a specific HTTP request.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.ConnectionInfo.#ctor(System.Net.HttpWebRequest,System.Int32,Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Constructs an instance of the ConnectionInfo class.
            </summary>
            <param name="httpWebRequest">The web request.</param>
            <param name="index">The index.</param>
            <param name="message">The source message.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.ConnectionInfo.HttpWebRequest">
            <summary>
            The HttpWebRequest.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.ConnectionInfo.Index">
            <summary>
            The index.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.ConnectionInfo.Message">
            <summary>
            The source message containing messageId. It can be used to dispatch a network exception to the caller context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.OnRequestCompleted(System.IAsyncResult)">
            <summary>
            Completes the HTTP request.
            </summary>
            <param name="ar">The result of the HTTP request.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.FindAvailableConnectionEntry">
            <summary>
            Returns the index of the available element.
            </summary>
            <returns>The index of the available element.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.ReleaseConnectionEntry(System.Int32)">
            <summary>
            Releases the element with the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection._keepalive">
            <summary>
            Represents a value indicating whether HTTP 1.1 keep-alive connections will be used.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpInvocationConnection.InitializeRequest(System.String,System.Boolean)">
            <summary>
            Creates and initializes http web request.
            </summary>
            <param name="postfix">True to create a sender request.</param>
            <param name="keepAlive">False to force connection closing.</param>
            <returns>Initialized HttpWebRequest instance.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpMessageCoder">
            <summary>
            Provides a set of operations for writing and reading HTTP headers.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpMessageCoder.#ctor">
            <summary>
            To prevent creating instances of the HttpMessageCoder class.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpMessageCoder.WriteRequestHeader(System.IO.BinaryWriter,System.Byte,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.Byte[],Belikov.GenuineChannels.GenuineHttp.HttpPacketType,System.Int32,System.String,System.Int32)">
            <summary>
            Writes HTTP header to the specified binary writer.
            </summary>
            <param name="binaryWriter">The binary writer.</param>
            <param name="protocolVersion">The version of the protocol.</param>
            <param name="genuineConnectionType">The type of connection.</param>
            <param name="hostId">The id of the remote host.</param>
            <param name="httpPacketType">The type of the packet.</param>
            <param name="sequenceNo">The packet number.</param>
            <param name="connectionName">The name of the connection.</param>
            <param name="localHostUniqueIdentifier">The unique identifier of the local HostInformation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpMessageCoder.ReadRequestHeader(System.IO.BinaryReader,System.Byte@,Belikov.GenuineChannels.Connection.GenuineConnectionType@,System.Guid@,Belikov.GenuineChannels.GenuineHttp.HttpPacketType@,System.Int32@,System.String@,System.Int32@)">
            <summary>
            Parses the HTTP header.
            </summary>
            <param name="binaryReader">The source binary reader.</param>
            <param name="protocolVersion">The version of the protocol.</param>
            <param name="genuineConnectionType">The type of connection.</param>
            <param name="hostId">The identifier of the remote host.</param>
            <param name="httpPacketType">The type of the packet.</param>
            <param name="sequenceNo">The packet number.</param>
            <param name="connectionName">The name of the connection.</param>
            <param name="remoteHostUniqueIdentifier">The unique identifier of the HostInformation used by the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpMessageCoder.WriteResponseHeader(System.IO.BinaryWriter,System.Byte,System.String,System.Int32,Belikov.GenuineChannels.GenuineHttp.HttpPacketType,System.Int32)">
            <summary>
            Writes the HTTP response header.
            </summary>
            <param name="binaryWriter">The destination.</param>
            <param name="protocolVersion">The version of the protocol.</param>
            <param name="serverUri">The server uri.</param>
            <param name="sequenceNo">The packet number.</param>
            <param name="httpPacketType">The type of the packet.</param>
            <param name="localHostUniqueIdentifier">The unique identifier of the local HostInformation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpMessageCoder.ReadResponseHeader(System.IO.BinaryReader,System.String@,System.Int32@,Belikov.GenuineChannels.GenuineHttp.HttpPacketType@,System.Int32@)">
            <summary>
            Reads the response from the stream.
            </summary>
            <param name="binaryReader">The source.</param>
            <param name="serverUri">The fetched server uri.</param>
            <param name="sequenceNo">The packet number.</param>
            <param name="httpPacketType">The type of the packet.</param>
            <param name="remoteHostUniqueIdentifier">The unique identifier of the HostInformation used by the remote host.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpPacketType">
            <summary>
            Enumerates types of HTTP packet.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.Usual">
            <summary>
            CLIENT. The usual (PIO/sender) message.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.Listening">
            <summary>
            CLIENT. The listening request (P/listener).
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.Establishing_ResetConnection">
            <summary>
            CLIENT/SERVER. The request to establish a new connection and release all data previously acquired by this host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.Establishing">
            <summary>
            CLIENT/SERVER. The request to establish a connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.DoubleRequests">
            <summary>
            SERVER. Server received two listener requests and this one is ignored.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.RequestRepeated">
            <summary>
            SERVER. Server repeated the response.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.Desynchronization">
            <summary>
            SERVER. Too small or too large sequence number.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.SenderResponse">
            <summary>
            SERVER. The response to the sender's request.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.ListenerTimedOut">
            <summary>
            SERVER. The listener request is expired.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.ClosedManually">
            <summary>
            SERVER. The listener connection is manually closed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.SenderError">
            <summary>
            SERVER. Error during parsing the client's request.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpPacketType.Unkown">
            <summary>
            CLIENT/SERVER. Specifies undetermined state of the connection.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection">
            <summary>
            Implements GHTTP server connection behavior (P/*).
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,System.Guid,Belikov.GenuineChannels.TransportContext.HostInformation,System.String,System.Int32)">
            <summary>
            Constructs an instance of the HttpServerConnection class.
            </summary>
            <param name="iTransportContext">The Transport Context.</param>
            <param name="hostId">The id of the remote host.</param>
            <param name="remote">The remote host.</param>
            <param name="connectionName">The name of the connection.</param>
            <param name="closeConnectionAfterInactivity">The time span to renew a connection after each message.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.HttpServerConnectionManager">
            <summary>
            The connection manager.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.HostId">
            <summary>
            The connection id.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.HostIdAsString">
            <summary>
            The identifier of the remote host in a string format.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.ITransportContext">
            <summary>
            The transport context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Remote">
            <summary>
            The remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.ConnectionName">
            <summary>
            The name of the connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.DbgConnectionId">
            <summary>
            The unique connection identifier, which is used for debugging purposes only.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Sender_SequenceNo">
            <summary>
            The current sequence number;
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Listener_SequenceNo">
            <summary>
            The current sequence number;
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Listener_SentStream">
            <summary>
            The current stream being sent.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Listener_Lock">
            <summary>
            Connection manager must obtain a lock for this object to modify any
            information regarding the listener connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Listener">
            <summary>
            The request.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Listener_MessageContainer">
            <summary>
            The message container.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Listener_MessagesBeingSent">
            <summary>
            Contains all messages currently being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Listener_IntermediateBuffer">
            <summary>
            The intermediate buffer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Listener_Opened">
            <summary>
            The time when a listener request was received.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Sender_SecuritySession">
            <summary>
            CLSS.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Listener_SecuritySession">
            <summary>
            CLSS.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection._disposed">
            <summary>
            Indicates whether this instance was disposed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection._disposeReason">
            <summary>
            The reason this shell was disposed due to.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection._disposeLock">
            <summary>
            Dispose lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Dispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection._connectionStateSignaller">
            <summary>
            The state controller.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection._connectionStateSignallerLock">
            <summary>
            The state controller lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.SignalState(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType,System.Exception,System.Object)">
            <summary>
            Sets the state of the connection.
            </summary>
            <param name="genuineEventType">The state of the connection.</param>
            <param name="reason">The exception.</param>
            <param name="additionalInfo">The additional info.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.CloseConnectionAfterInactivity">
            <summary>
            The time span to close invocation connection after this period of inactivity.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.ShutdownTime">
            <summary>
            The time after which the socket will be shut down automatically.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnection.Renew">
            <summary>
            Renews the connection lifetime.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager">
            <summary>
            Intercepts incoming requests come to the registered web handler and processes them.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the HttpServerConnectionManager class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.InternalSend(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Sends the message to the remote host.
            </summary>
            <param name="message">The message to be sent.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.HandleIncomingRequest(System.Object)">
            <summary>
            Handles the incoming HTTP request.
            </summary>
            <param name="httpServerRequestResultAsObject">The HTTP request.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.LowLevel_ProcessListenerRequest(Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult,Belikov.GenuineChannels.GenuineHttp.HttpServerConnection,System.Int32)">
            <summary>
            Handles the listener request.
            </summary>
            <param name="httpServerRequestResult">The request.</param>
            <param name="httpServerConnection">The connection.</param>
            <param name="requestedSequenceNo">The sequence number.</param>
            <returns>True if the response should be delayed.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.LowLevel_ProcessSenderRequest(Belikov.GenuineChannels.Connection.GenuineConnectionType,System.IO.Stream,Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult,Belikov.GenuineChannels.GenuineHttp.HttpServerConnection,System.Int32,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Processes the sender's request.
            </summary>
            <param name="genuineConnectionType">The type of the connection.</param>
            <param name="input">The incoming data.</param>
            <param name="httpServerRequestResult">The request.</param>
            <param name="httpServerConnection">The connection.</param>
            <param name="sequenceNo">The sequence number.</param>
            <param name="remote">The information about remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.LowLevel_CreateStreamWithHeader(Belikov.GenuineChannels.GenuineHttp.HttpPacketType,System.Int32,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Creates and returns the stream with a written response header.
            </summary>
            <param name="httpPacketType">The type of the packet.</param>
            <param name="sequenceNo">The sequence number.</param>
            <param name="remote">The HostInformation of the remote host.</param>
            <returns>The stream with a written response header.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.LowLevel_SendStream(System.Web.HttpContext,System.Boolean,Belikov.GenuineChannels.GenuineHttp.HttpServerConnection,System.Boolean,System.IO.Stream@,Belikov.GenuineChannels.GenuineHttp.HttpServerConnection)">
            <summary>
            Sends the response to the remote host.
            </summary>
            <param name="httpContext">The http context.</param>
            <param name="listener">True if it's a listener.</param>
            <param name="httpServerConnection">The connection containing CLSS.</param>
            <param name="applyClss">Indicates whether it is necessary to apply Connection Level Security Session.</param>
            <param name="content">The content being sent to the remote host.</param>
            <param name="httpServerConnectionForDebugging">The connection that will be mentioned in the debug records.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.LowLevel_ReportServerError(System.Web.HttpContext)">
            <summary>
            Sends the response to the remote host.
            </summary>
            <param name="httpContext">The http context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager._iMessageRegistrator">
            <summary>
            The message registrator.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager._persistent">
            <summary>
            The set of persistent connections (with CLSS and message queues): Uri -> connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager._invocation">
            <summary>
            The set of response to messages received via invocation connections (connection Id => Message or a null reference).
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.Pool_SendThroughListener(Belikov.GenuineChannels.GenuineHttp.HttpServerConnection,Belikov.GenuineChannels.GenuineHttp.HttpPacketType)">
            <summary>
            Sends the packet with empty content and specified type of packet to the remote host
            through the listening connection.
            </summary>
            <param name="httpServerConnection">The connection.</param>
            <param name="httpPacketType">The type of packet.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.ReleaseConnections_InspectPersistentConnections(System.Object,System.Object)">
            <summary>
            Finds connections to be released.
            </summary>
            <param name="httpServerConnectionAsObject">The connection.</param>
            <param name="releaseConnections_ParametersAsObject">Stuff to make decisions and to save the results.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.ReleaseConnections(Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.Exception)">
            <summary>
            Closes the specified connections to the remote host and releases acquired resources.
            </summary>
            <param name="hostInformation">Host information.</param>
            <param name="genuineConnectionType">What kind of connections will be affected by this operation.</param>
            <param name="reason">The reason of resource releasing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.GetConnectionNames(System.String)">
            <summary>
            Returns names of connections opened to the specified destination.
            Not all Connection Manager support this member.
            </summary>
            <param name="uri">The URI or URL of the remote host.</param>
            <returns>Names of connections opened to the specified destination.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.InternalDispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.TimerCallback">
            <summary>
            Closes expired connections and sends ping via inactive connections.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.Internal_TimerCallback_InspectPersistentConnections(System.Object,System.Object)">
            <summary>
            Finds connections to be released.
            </summary>
            <param name="httpServerConnectionAsObject">The connection.</param>
            <param name="parametersAsObject">Stuff to make decisions and to save the results.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.Internal_TimerCallback(System.Object)">
            <summary>
            Closes expired connections and sends ping via inactive connections.
            </summary>
            <param name="ignored">Ignored.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.StartListening(System.Object)">
            <summary>
            Starts listening to the specified end point and accepting incoming connections.
            </summary>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerConnectionManager.StopListening(System.Object)">
            <summary>
            Stops listening to the specified end point. Does not close any connections.
            </summary>
            <param name="endPoint">The end point</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpServerHandler">
            <summary>
            Implements ASP.NET Web handler which services incoming GHTTP requests.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerHandler.#ctor">
            <summary>
            Constructs an instance of the HttpServerHandler class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerHandler.HttpContext">
            <summary>
            The HTTP context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerHandler.AsyncCallback">
            <summary>
            The provided async callback.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the IHttpHandler interface.
            </summary>
            <param name="context">The http context.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
            <summary>
            Initiates an asynchronous call to the HTTP handler.
            </summary>
            <param name="context">An HttpContext object that provides references to intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
            <param name="cb">The AsyncCallback to call when the asynchronous method call is complete. If cb is a null reference (Nothing in Visual Basic), the delegate is not called.</param>
            <param name="extraData">Any extra data needed to process the request.</param>
            <returns>An IAsyncResult that contains information about the status of the process.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerHandler.EndProcessRequest(System.IAsyncResult)">
            <summary>
            Executes a clean-up code when the process ends.
            </summary>
            <param name="result">An IAsyncResult that contains information about the status of the process.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpServerHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the IHttpHandler instance.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult">
            <summary>
            Represents the result of the HTTP request processed asynchronously.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult.#ctor(System.Web.HttpContext,System.AsyncCallback,System.Object)">
            <summary>
            Constructs an instance of the HttpServerRequestResult class.
            </summary>
            <param name="httpContext">The http context.</param>
            <param name="asyncCallback">The async callback.</param>
            <param name="asyncState">The async state.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult.HttpContext">
            <summary>
            The http context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult.IPrincipal">
            <summary>
            The threads' current principal.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult.AsyncCallback">
            <summary>
            The listener's callback.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult.Complete(System.Boolean)">
            <summary>
            Completes the asynchronous invocation.
            </summary>
            <param name="completedSynchronously">True if the request was completed synchronously.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult.CompletedSynchronously">
            <summary>
            Gets an indication of whether the asynchronous operation completed synchronously.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult.AsyncWaitHandle">
            <summary>
            Gets a WaitHandle that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult.IsCompleted">
            <summary>
            Gets an indication whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineHttp.HttpWebRequestCop">
            <summary>
            Implements async web requests on .Net Framework v2.0.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpWebRequestCop.HttpWebRequestCopAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpWebRequestCop.HttpWebRequestCopAsyncResult.AsyncWaitHandle">
            <summary>
            Gets a System.Threading.WaitHandle that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpWebRequestCop.HttpWebRequestCopAsyncResult.CompletedSynchronously">
            <summary>
            Gets an indication of whether the asynchronous operation completed synchronously.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineHttp.HttpWebRequestCop.HttpWebRequestCopAsyncResult.IsCompleted">
            <summary>
            Gets an indication whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineHttp.HttpWebRequestCop.#ctor(System.Net.HttpWebRequest,System.AsyncCallback,System.Object,System.Int32)">
            <summary>
            Initiates the HTTP web request.
            </summary>
            <param name="httpWebRequest">The HttpWebRequest.</param>
            <param name="asyncCallback">The callback.</param>
            <param name="state">The additional parameter to the request.</param>
            <param name="timeoutSpan">The timeout of the operation.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineSharedMemory.GenuineSharedMemoryChannel">
            <summary>
            Implements a channel that uses Shared Memory as a transport.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.GenuineSharedMemoryChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
            <summary>
            Constructs an instance of the GenuineSharedMemoryChannel class.
            </summary>
            <param name="properties">An IDictionary of the channel properties which hold the configuration information for the current channel.</param>
            <param name="iClientChannelSinkProvider">The IClientChannelSinkProvider that creates the client channel sinks for the underlying channel through which remoting messages flow through.</param>
            <param name="iServerChannelSinkProvider">The IServerChannelSinkProvider that creates server channel sinks for the underlying channel through which remoting messages flow through.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.GenuineSharedMemoryChannel.ConstructSharedObjectName(System.String,Belikov.GenuineChannels.Parameters.IParameterProvider)">
            <summary>
            Constructs a full name of a shared object given the name and channel properties.
            </summary>
            <param name="name">The name of a shared object.</param>
            <param name="parameters">The channel parameters.</param>
            <returns>The full name of a shared object.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.GenuineSharedMemoryChannel.GetUrlsForUri(System.String)">
            <summary>
            Returns an array of all URLs for the URI.
            </summary>
            <param name="objectUri">The URI for which URLs are required.</param>
            <returns>An array of the URLs.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.GenuineSharedMemoryChannel.StartListening(System.Object)">
            <summary>
            Instructs the current channel to start listening for requests.
            </summary>
            <param name="data">Optional initialization information.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.GenuineSharedMemoryChannel.StopListening(System.Object)">
            <summary>
            Instructs the current channel to stop listening for requests.
            </summary>
            <param name="data">Optional state information for the channel.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.GenuineSharedMemoryChannel.UriPrefix">
            <summary>
            Gets the URI prefix.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineSharedMemory.NamedEvent">
            <summary>
            NamedEvent wraps Windows API to represent a named event, which can be used for interprocess synchronization.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.NamedEvent.#ctor(System.IntPtr)">
            <summary>
            Initialization only via static constructors.
            </summary>
            <param name="handle">Event handle.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.NamedEvent.CreateNamedEvent(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates named event object.
            </summary>
            <param name="name">The name of the event object.</param>
            <param name="initialState">If this parameter is TRUE, the initial state of the event object is signaled; otherwise, it is nonsignaled.</param>
            <param name="manualReset">If this parameter is FALSE, the function creates an auto-reset event object, and system automatically resets the state to nonsignaled after a single waiting thread has been released.</param>
            <returns>Created event object.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.NamedEvent.OpenNamedEvent(System.String)">
            <summary>
            Opens an existent event object with the specified name.
            </summary>
            <param name="name">The name of the global Event.</param>
            <returns>The opened event object.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.NamedEvent.ManualResetEvent">
            <summary>
            Gets ManualResetEvent containing current object's handler.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection">
            <summary>
            Represents a Shared Memory connection.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructs an instance of the SharedMemoryConnection class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
            <param name="name">The name of the shared chunk.</param>
            <param name="isServer">The role.</param>
            <param name="setCloseStatusOnExit">Indicates whether it is necessary to set the "closed" status on exit.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._setCloseStatusOnExit">
            <summary>
            Whether to set the "closed" status of the share on exit.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.Finalize">
            <summary>
            Releases resources.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.ReleaseUnmanagedResources">
            <summary>
            Releases unmanaged resources.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.ShareName">
            <summary>
            The name of the share.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.ITransportContext">
            <summary>
            The transport context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.IsServer">
            <summary>
            The role.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.IsValid">
            <summary>
            Whether this connection is valid.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.ConnectionLevelSecurity">
            <summary>
            Connection-level Security Session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.DbgConnectionId">
            <summary>
            The unique connection identifier, which is used for debugging purposes only.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.Remote">
            <summary>
            The remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.WriteAccess">
            <summary>
            Writer must acquire a lock on this object in order to send something.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._shareSize">
            <summary>
            Size of the share in bytes.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.MIN_SHARE_SIZE">
            <summary>
            Minimum size of the share.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.MAX_SHARE_SIZE">
            <summary>
            Maximum size of the share.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.SHARE_CONTENT_OFFSET">
            <summary>
            The size of the share header.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._mapHandle">
            <summary>
            File mapping handle.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._pointer">
            <summary>
            Unmanaged pointer to memory share.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._sendBuffer">
            <summary>
            It's impossible to write stream content to the share directly.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._closed">
            <summary>
            Indicates whether the connection was closed.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._writtenShareSize">
            <summary>
            The size of the share.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.LowLevel_CreateSharedMemory">
            <summary>
            Creates shared memory object.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.OpenSharedMemory">
            <summary>
            Opens the handle of an existent share.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.LowLevel_SendSync(System.IO.Stream,System.Int32)">
            <summary>
            Sends a message synchronously. Does not process exceptions!
            </summary>
            <param name="content">The content being sent to the remote host.</param>
            <param name="timeout">The sending must be completed before this moment.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.LowLevel_ReadSync(System.Int32)">
            <summary>
            Provides a stream reading synchronously from the given connection.
            </summary>
            <param name="finishTime">Read timeout.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current connection.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.ReadNextPortion">
            <summary>
            Synchronously reads the next network packet if it is available.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.Close">
            <summary>
            Closes the current stream and releases any resources associated with the current stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.SkipMessage">
            <summary>
            Skip the current message in the transport stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous read, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in buffer from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous write, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams only return zero (0) at the end of the stream, otherwise, they should block until at least one byte is available.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._connectionStateSignaller">
            <summary>
            The state controller.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._connectionStateSignallerLock">
            <summary>
            The state controller lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.SignalState(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType,System.Exception,System.Object)">
            <summary>
            Sets the state of the connection.
            </summary>
            <param name="genuineEventType">The state of the connection.</param>
            <param name="reason">The exception.</param>
            <param name="additionalInfo">The additional info.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._pingTimeOut">
            <summary>
            A time span value indicating how often Connect Manager should check the connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection._closeAfterInactivity">
            <summary>
            Time span during which the remote host must send at least one valid message.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.Renew">
            <summary>
            Renews connection activity for the CloseConnectionAfterInactivity value.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.LastTimeAMessageWasSent">
            <summary>
            Gets a DateTime representing a moment when last message was sent to the remote host.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection.UpdateLastTimeAMessageWasSent">
            <summary>
            Updates the DateTime when last message was sent.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager">
            <summary>
            Implement connection manager logic for Shared memory transport.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the SharedMemoryConnectionManager class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.InternalSend(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Sends the message to the remote host.
            Returns a response if the corresponding Security Session is established and the initial message is not one-way.
            </summary>
            <param name="message">Message to be sent or a null reference (if there is a queued message).</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.SendSync(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection)">
            <summary>
            Sends the message through the specified connection.
            </summary>
            <param name="message">The message.</param>
            <param name="sharedMemoryConnection">The connection.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager._persistent">
            <summary>
            Connection primary URL => Shared connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager._smAcceptConnectionClosure">
            <summary>
            The listening closure.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.StartListening(System.Object)">
            <summary>
            Starts listening to the specified end point and accepting incoming connections.
            </summary>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.StopListening(System.Object)">
            <summary>
            Stops listening to the specified end point. Does not close any connections.
            </summary>
            <param name="endPoint">The end point</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.ReleaseConnections(Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.Exception)">
            <summary>
            Closes the specified connections to the remote host and releases acquired resources.
            </summary>
            <param name="hostInformation">The host information.</param>
            <param name="genuineConnectionType">A value indicating what kind of connections will be affected by this operation.</param>
            <param name="reason">The reason of resource releasing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.InternalDispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.LowLevel_OpenConnection(Belikov.GenuineChannels.TransportContext.HostInformation,System.String,System.String@,System.Int32@)">
            <summary>
            Opens a connection to the host specified by the url.
            </summary>
            <param name="remote">The HostInformation of the Remote Host.</param>
            <param name="localUri">The uri of the local host.</param>
            <param name="remoteUri">The uri of the remote host.</param>
            <param name="remoteHostUniqueIdentifier">The unique identifier of the HostInformation used by the remote host.</param>
            <returns>The established connection.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.LowLevel_AcceptConnection_1(System.String,System.String,System.Byte,System.String@,System.Int32@)">
            <summary>
            Accepts an incoming connection.
            </summary>
            <param name="url">The name of the share.</param>
            <param name="localUri">URI of the local host.</param>
            <param name="protocolVersion">The version of the protocol supported by the remote host.</param>
            <param name="remoteUri">Uri of the remote host.</param>
            <param name="remoteHostUniqueIdentifier">The unique identifier of the HostInformation used by the remote host.</param>
            <returns>The established connection.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.Connection_AcceptConnection(System.String,System.Byte)">
            <summary>
            Accepts the incoming connection.
            </summary>
            <param name="shareName">The name of the share.</param>
            <param name="protocolVersion">The version of the protocol supported by the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.Connection_InitiateReceiving(Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection)">
            <summary>
            Initiates reading incoming content from the socket and dispatching it to the message handler manager.
            Should be called only once for persistent and named connections.
            </summary>
            <param name="sharedMemoryConnection">The connection.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.SynchronousReceiving">
            <summary>
            Provides a receiving method being executed in a separate thread.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.SynchronousReceiving.ReceiveSynchronously">
            <summary>
            Reads messages from the connection and processes them synchronously.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.ConnectionFailed(System.Exception,Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection)">
            <summary>
            Releases all resources related to the specified connection.
            </summary>
            <param name="exception">The reason.</param>
            <param name="sharedMemoryConnection">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.TimerCallback">
            <summary>
            Closes expired connections and sends ping via inactive connections.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager.SendPing(System.Object)">
            <summary>
            Sends a ping through the specified connection.
            </summary>
            <param name="sharedMemoryConnectionAsObject">The connection.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure">
            <summary>
            Implements a Shared Memory listener which is capable of accepting inbound client's requests.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnection,Belikov.GenuineChannels.GenuineSharedMemory.SharedMemoryConnectionManager,System.String)">
            <summary>
            Constructs an instance of the SMAcceptConnectionClosure class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
            <param name="sharedMemoryConnection">The server's connection.</param>
            <param name="sharedMemoryConnectionManager">The connection manager.</param>
            <param name="shareName">The name of the share.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.ITransportContext">
            <summary>
            The transport context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.SharedMemoryConnection">
            <summary>
            The server's memory share.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.SharedMemoryConnectionManager">
            <summary>
            The connection manager.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.ShareName">
            <summary>
            Name of the share.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.StopListening">
            <summary>
            Indicates whether the listening should be stopped.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.AcceptConnections">
            <summary>
            Accepts incoming connections.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.AcceptConnectionInformation">
            <summary>
            Contains information about the connection being accepted.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.AcceptConnectionInformation.ShareName">
            <summary>
            The name of the client share.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.AcceptConnectionInformation.ProtocolVersion">
            <summary>
            The version of the protocol supported by the client.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.SMAcceptConnectionClosure.AcceptConnection(System.Object)">
            <summary>
            Accepts incoming connection.
            </summary>
            <param name="acceptConnectionInformationAsObject">Information about the connection being accepted.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI">
            <summary>
            Contains declarations of windows API stuff related to shared memory functionality.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.PAGE_READWRITE">
            <summary>
            Page read/write constant.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.SECTION_QUERY">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.SECTION_MAP_WRITE">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.SECTION_MAP_READ">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.SECTION_MAP_EXECUTE">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.SECTION_EXTEND_SIZE">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.FILE_MAP_ALL_ACCESS">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.FORMAT_MESSAGE_ALLOCATE_BUFFER">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.FORMAT_MESSAGE_IGNORE_INSERTS">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.FORMAT_MESSAGE_FROM_STRING">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.FORMAT_MESSAGE_FROM_HMODULE">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.FORMAT_MESSAGE_FROM_SYSTEM">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.FORMAT_MESSAGE_ARGUMENT_ARRAY">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.FORMAT_MESSAGE_MAX_WIDTH_MASK">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.WAIT_TIMEOUT">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.INFINITE">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.SYNCHRONIZE">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.STANDARD_RIGHTS_REQUIRED">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.EVENT_ALL_ACCESS">
            <summary>
            See Win API docs.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI._SECURITY_ATTRIBUTES">
            <summary>
            Security attributes.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineSharedMemory.WindowsAPI.OpenMutex(System.String)">
            <summary>
            Opens an existent mutex.
            </summary>
            <param name="name">The name of the mutex.</param>
            <returns>The opened mutex.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.AcceptConnectionClosure">
            <summary>
            Services a listening socket.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.AcceptConnectionClosure.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,System.String,System.Net.Sockets.Socket,Belikov.GenuineChannels.GenuineTcp.IAcceptConnectionConsumer)">
            <summary>
            Constructs an instance of the AcceptConnectionClosure class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
            <param name="listeningEndPoint">The end point.</param>
            <param name="socket">The socket.</param>
            <param name="iAcceptConnectionConsumer"></param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.AcceptConnectionClosure.ITransportContext">
            <summary>
            The transport context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.AcceptConnectionClosure.Socket">
            <summary>
            The socket serviced.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.AcceptConnectionClosure.IAcceptConnectionConsumer">
            <summary>
            The master manager.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.AcceptConnectionClosure.ListeningEndPoint">
            <summary>
            End point.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.AcceptConnectionClosure.StopListening">
            <summary>
            Indicates whether the listening should be stopped.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.AcceptConnectionClosure.AcceptConnections">
            <summary>
            Accepts incoming connections.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.AcceptConnectionClosure.AcceptConnection(System.Object)">
            <summary>
            Accepts incoming connection.
            </summary>
            <param name="socketAsObject">The socket.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.Async_InitiateSocketReceiving">
            <summary>
            Initiates asynchronous receiving from the socket.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.Async_InitiateSocketReceiving.#ctor(System.Net.Sockets.Socket,System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Constructs an instance of the Async_InitiateSocketReceiving class.
            </summary>
            <param name="socket">The socket.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size of the sending chunk.</param>
            <param name="asyncCallback">The callback.</param>
            <param name="state">The optional parameter.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.Async_InitiateSocketReceiving.StartAsynchronousOperation">
            <summary>
            Initiates an asynchronous operation.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.Async_InitiateSocketSending">
            <summary>
            Initiates asynchronous sending to the socket.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.Async_InitiateSocketSending.#ctor(System.Net.Sockets.Socket,System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Constructs an instance of the Async_InitiateSocketSending class.
            </summary>
            <param name="socket">The socket.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size of the sending chunk.</param>
            <param name="asyncCallback">The callback.</param>
            <param name="state">The optional parameter.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.Async_InitiateSocketSending.StartAsynchronousOperation">
            <summary>
            Initiates an asynchronous operation.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.ConnectionEstablishingClosure">
            <summary>
            A closure that establishes a connection to the remote host.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.ConnectionEstablishingClosure.#ctor(System.String,System.Int32,Belikov.GenuineChannels.Parameters.IParameterProvider)">
            <summary>
            Constructs an instance of the ConnectionEstablishingClosure class.
            </summary>
            <param name="__hostName">The host name.</param>
            <param name="portNumber">The port.</param>
            <param name="parameterProvider">The current Transport Context parameter collection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.ConnectionEstablishingClosure.StartOperation">
            <summary>
            Starts connection establishing.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.ConnectionEstablishingClosure.StartConnecting(System.Object)">
            <summary>
            Resolves the remote host IP address and establishes the connection.
            </summary>
            <param name="ignored">This parameter is ignored.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.ConnectionEstablishingClosure.CompleteOperation">
            <summary>
            Completes the connection establishing operation.
            </summary>
            <returns>The connected socket.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.ConnectionEstablishingClosure.CancelConnecting(System.Exception)">
            <summary>
            Cancels the connection establishing operation.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.ConnectionEstablishingClosure.Dispose">
            <summary>
            Closes the socket.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel">
            <summary>
            GenuineTcpChannel implements a .NET Remoting channel wrapper over GTCP Transport Context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
            <summary>
            Constructs an instance of the GenuineTcpChannel class.
            </summary>
            <param name="properties">An IDictionary of the channel properties which hold the configuration information for the current channel.</param>
            <param name="iClientChannelSinkProvider">The IClientChannelSinkProvider that creates the client channel sinks for the underlying channel through which remoting messages flow through.</param>
            <param name="iServerChannelSinkProvider">The IServerChannelSinkProvider that creates server channel sinks for the underlying channel through which remoting messages flow through.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel.CreateClientChannelSinkProvider">
            <summary>
            Returns the client channel sink provider (transport level).
            </summary>
            <returns>The client channel sink provider.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel.LocalPort">
            <summary>
            The port being listened to.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel.GetUrlsForUri(System.String)">
            <summary>
            Returns an array of all the URLs for a URI.
            </summary>
            <param name="objectUri">The URI for which URLs are required.</param>
            <returns>An array of the URLs.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel.StartListening(System.Object)">
            <summary>
            Instructs the current channel to start listening for requests.
            </summary>
            <param name="data">Optional initialization information.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel.StopListening(System.Object)">
            <summary>
            Instructs the current channel to stop listening for requests.
            </summary>
            <param name="data">Optional state information for the channel.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel.UriPrefix">
            <summary>
            Gets the initial part of the URI prefix.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel._localPort">
            <summary>
            The port number to bind to.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel._localInterface">
            <summary>
            Interface.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel.ListeningEntry">
            <summary>
            The listening entry the channel binds listening socket to.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel.ReadSettings(System.Collections.IDictionary)">
            <summary>
            Reads settings.
            </summary>
            <param name="properties">Settings container to read from.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.IAcceptConnectionConsumer">
            <summary>
            Exposes a connection consumer, which completes accepting of connections
            and pass them to Connection Manager.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.IAcceptConnectionConsumer.IsDisposed">
            <summary>
            Gets an indication whether the Connection Manager has been disposed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.IAcceptConnectionConsumer.AcceptConnection(System.Net.Sockets.Socket)">
            <summary>
            Completes accepting of the specified socket.
            </summary>
            <param name="socket">The socket accepted.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.SyncMessageSlot">
            <summary>
            Represents a message that allows to acquire socket's resources in another thread.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncMessageSlot.#ctor">
            <summary>
            Constructs an instance of the SyncMessageSlot class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.SyncMessageSlot.TcpSocketInfo">
            <summary>
            Is not released automatically.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream">
            <summary>
            Implements a stream reading data from a socket synchronously.
            Automatically initiates receiving after the current message is read up entirely.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.#ctor(Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager,Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo,System.Int32,System.Boolean)">
            <summary>
            Constructs an instance of the SyncSocketReadingStream class.
            </summary>
            <param name="tcpConnectionManager">TCP Connection Manager.</param>
            <param name="tcpSocketInfo">The connection.</param>
            <param name="receiveTimeout">The moment at which the message must be received entirely.</param>
            <param name="automaticallyContinueReading">Indicates whether this instance will automatically initiate reading of the next message from the specified connection.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.DbgStreamId">
            <summary>
            The unique identifier of the current stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.ReadNextPortion(System.Boolean)">
            <summary>
            Synchronously reads the next network packet if it is available.
            </summary>
            <param name="deriveHeader">Indicates whether it is necessary to take header from the provided connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.ReadingCompleted">
            <summary>
            Completes reading from the connection.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.ReadFromSocket(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from the socket.
            </summary>
            <param name="buffer">An array of type Byte that is the storage location for received data.</param>
            <param name="offset">The location in buffer to store the received data.</param>
            <param name="count">The number of bytes to receive.</param>
            <returns>The number of bytes read.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.Dispose">
            <summary>
            Skips the remaining part of the message.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.Close">
            <summary>
            Closes the current stream and releases all resources associated with the current stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.SkipMessage">
            <summary>
            Skips the current message in the transport stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.IsReadingFinished">
            <summary>
            Gets an indication whether the message reading from the underlying provider was completed.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.IsMessageProcessed">
            <summary>
            Gets an indication whether the message has been read from this stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous read, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in buffer from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous write, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams only return zero (0) at the end of the stream, otherwise, they should block until at least one byte is available.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketReadingStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream">
            <summary>
            Exposes a stream around the specified socket. Supports only synchronous operations.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.#ctor(System.Net.Sockets.Socket,Belikov.GenuineChannels.Connection.ConnectionManager,System.Int32)">
            <summary>
            Constructs an instance of the SyncSocketStream class.
            </summary>
            <param name="socket">The socket.</param>
            <param name="connectionManager">The Connect Manager to update its send/receive counters automatically.</param>
            <param name="timeout">The timeout of the current operation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous read, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in buffer from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous write, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams only return zero (0) at the end of the stream, otherwise, they should block until at least one byte is available.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream">
            <summary>
            Implements a stream writing to the socket synchronously.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.#ctor(Belikov.GenuineChannels.Connection.ConnectionManager,System.Net.Sockets.Socket,System.Int32,System.Int32,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Constructs an instance of the SyncSocketWritingStream class.
            </summary>
            <param name="connectionManager">The Connection Manager.</param>
            <param name="socket">The socket.</param>
            <param name="writeTimeout">The timeout of the current operation.</param>
            <param name="dbgConnectionId">The identifier of the connection.</param>
            <param name="remote">Information about the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous read, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in buffer from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous write, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams only return zero (0) at the end of the stream, otherwise, they should block until at least one byte is available.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.SyncSocketWritingStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager">
            <summary>
            Provides an implementation for a sender-receiver Connection Manager that uses the TCP protocol to transmit messages.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the TcpConnectionManager class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.InternalSend(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Sends the message to the remote host.
            Returns a response if corresponding Security Session is established and the initial message is not one-way.
            </summary>
            <param name="message">The message to be sent or a null reference (if there is a queued message).</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.SendSync(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo)">
            <summary>
            Sends the message to the remote host.
            Returns a response if corresponding Security Session parameters are set and 
            the initial message is not one-way.
            </summary>
            <param name="message">Message to be sent synchronously.</param>
            <param name="tcpSocketInfo">Socket connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.SendAsync(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo)">
            <summary>
            Sends the message to the remote host.
            Returns a response if corresponding Security Session is established and the initial message is not one-way.
            </summary>
            <param name="message">The message to be sent asynchronously.</param>
            <param name="tcpSocketInfo">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.SendPing(System.Object)">
            <summary>
            Sends a ping through the specified connection.
            </summary>
            <param name="tcpSocketInfoAsObject">The connection.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.HEADER_SIZE">
            <summary>
            0[1] - Magic byte.
            1[4] - Chunk length.
            5[1] - Stream finish flag.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.SOCKET_BUFFER_SIZE">
            <summary>
            Size of the buffer to read messages from the socket.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LowLevel_SendSync(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo)">
            <summary>
            Sends a message synchronously. Does not process exceptions!
            </summary>
            <param name="message">Message.</param>
            <param name="tcpSocketInfo">Acquired connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LowLevel_ReadSync(Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo,System.Int32,System.Boolean)">
            <summary>
            Provides a stream reading synchronously from the given connection.
            </summary>
            <param name="tcpSocketInfo">Socket structure.</param>
            <param name="timeoutInMilliseconds">Read timeout.</param>
            <param name="automaticallyContinueReading">Indicates whether this instance will automatically initiate reading of the next message from the specified connection.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LowLevel_StartSending(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo)">
            <summary>
            Starts sending the message through the specified connection.
            </summary>
            <param name="message">The message being sent.</param>
            <param name="tcpSocketInfo">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LowLevel_EndSending(System.IAsyncResult)">
            <summary>
            Completes sending of the message.
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LowLevel_Client_PreventDelayedAck(System.Object)">
            <summary>
            Sends a small synchronous packet to the server in order to prevent delayed ack.
            </summary>
            <param name="tcpSocketInfoAsObject">The TCP connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LowLevel_HalfSync_StartReceiving(Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo)">
            <summary>
            Initiates receiving of the message's header.
            </summary>
            <param name="tcpSocketInfo">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LowLevel_HalfSync_EndReceiving(System.IAsyncResult)">
            <summary>
            Processes the received content.
            </summary>
            <param name="ar">The result of the asynchronous invocation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LowLevel_CloseConnection(System.Object)">
            <summary>
            Closes the connection.
            </summary>
            <param name="tcpSocketInfoAsObject">The connection to be closed.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager._persistent">
            <summary>
            A connection store containing all persistent connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager._named">
            <summary>
            Connection primary URL + "/" + connection name => TcpSocketInfo.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager._invocation">
            <summary>
            Contains all invocation connections Hash 
            { Server url => ArrayList containing TcpSocketInfo }.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager._knownInvocationConnections">
            <summary>
            Contains known named invocation connections to send responses through.
            { Connection Id => TcpSocketInfo }
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LowLevel_OpenConnection(Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.String,System.Int32,System.String,System.String@,System.Int32@)">
            <summary>
            Establishes a connection to the remote host.
            </summary>
            <param name="remote">The HostInformation of the remote host.</param>
            <param name="genuineConnectionType">Type of the connection.</param>
            <param name="localUri">Local URI.</param>
            <param name="localPort">Local port.</param>
            <param name="connectionName">The name of the connection or a null reference.</param>
            <param name="remoteUri">Remote URI.</param>
            <param name="remoteHostUniqueIdentifier">The unique identifier of the HostInformation used by the remote host.</param>
            <returns>A connection.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LowLevel_AcceptConnection(System.Net.Sockets.Socket,System.String,System.String@,System.String@,System.String@,System.Int32@,System.Exception@)">
            <summary>
            Accepts an incoming TCP connection.
            </summary>
            <param name="socket">The socket.</param>
            <param name="localUri">URI of the local host.</param>
            <param name="remoteUri">Uri of the remote host.</param>
            <param name="remoteAddress">Address of the remote host.</param>
            <param name="connectionName">The name of the connection.</param>
            <param name="remoteHostUniqueIdentifier">The unique identifier of the HostInformation used by the remote host.</param>
            <param name="reasonOfStateLost">The reason why the remote host has lost its state (if it's happened).</param>
            <returns>An instance of the TcpSocketInfo class.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager._lowLevel_OpenConnectionLock">
            <summary>
            All checks on number of connections should be performed only while access to this object is obtained.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.ReestablishConnection(System.Object)">
            <summary>
            Re-establishes the persistent connection to the remote host.
            </summary>
            <param name="stubSocketInfoAsObject">Stub socket that holds message queue.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.TimerCallback">
            <summary>
            Closes expired connections and sends ping via inactive connections.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.FindExpiredConnections(System.Object,System.Object)">
            <summary>
            Analyzes the state of the connection.
            </summary>
            <param name="tcpSocketInfoAsObject">The connection.</param>
            <param name="findExpiredConnections_CollectedConnectionsAsObject">Stuff to make decisions and to save the results.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.Internal_TimerCallback(System.Object)">
            <summary>
            Closes expired connections and sends pings via inactive connections.
            </summary>
            <param name="ignored">Ignored.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.GetConnectionForSending(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Acquires a connection according to message parameters or throw the corresponding exception
            if it's impossible.
            </summary>
            <param name="message">The message being sent.</param>
            <returns>The acquired connection.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.Pool_StartSending(Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo)">
            <summary>
            Assigns the sending task for a connection.
            </summary>
            <param name="tcpSocketInfo">Tcp connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.Pool_InitiateReceiving(Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo,Belikov.GenuineChannels.Parameters.IParameterProvider)">
            <summary>
            Initiates reading incoming content from the socket and dispatching it to the message handler manager.
            Should be called only once for persistent and named connections.
            </summary>
            <param name="tcpSocketInfo">The connection.</param>
            <param name="iParameterProvider">Parameter provider or a null reference.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.Pool_HandleAvailableInvocationOrOneWayConnection(Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo)">
            <summary>
            Sets correct connection state and parameters when the current operation is successfully completed.
            </summary>
            <param name="tcpSocketInfo"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.Pool_DestroyPersistentConnection(Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo,System.Exception)">
            <summary>
            Destroys the specified connection and releases absolutely all resources belonging to
            the remote host the connection points at.
            </summary>
            <param name="tcpSocketInfo">The connection.</param>
            <param name="reason">The reason of disposing connection resources.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.Pool_ContinueHalfSyncReceiving(System.Object)">
            <summary>
            Continues receiving and processing of the message in half-sync mode.
            </summary>
            <param name="tcpSocketInfoAsObject">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.GetNamedConnectionName(System.Boolean,Belikov.GenuineChannels.TransportContext.HostInformation,System.String)">
            <summary>
            Gets the name of the TCP connection.
            </summary>
            <param name="isServer">A boolean value indicating whether this connection manager works as a server.</param>
            <param name="hostInformation">The HostInformation of the remote host.</param>
            <param name="connectionName">The name of the connection.</param>
            <returns>The name of the TCP connection.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.SocketFailed(System.Exception,Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo)">
            <summary>
            Processes failed sockets.
            </summary>
            <param name="exception">The source exception.</param>
            <param name="tcpSocketInfo">The socket.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.LocalPort">
            <summary>
            The local port being listened.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager._listeningSockets">
            <summary>
            Listening sockets. End Point => AcceptConnectionClosure.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.StartListening(System.Object)">
            <summary>
            Starts listening to the specified end point and accepting incoming connections.
            </summary>
            <param name="endPointAsObject">The end point.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.StopListening(System.Object)">
            <summary>
            Stops listening to the specified end point. Does not close any connections.
            </summary>
            <param name="endPointAsObject">The end point.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.Belikov#GenuineChannels#GenuineTcp#IAcceptConnectionConsumer#AcceptConnection(System.Net.Sockets.Socket)">
            <summary>
            Accepts the connection.
            </summary>
            <param name="clientSocket">The socket.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.IsDisposed">
            <summary>
            Gets an indication whether the Connection Manager has been disposed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.ReleaseConnections_InspectPersistentConnections(System.Object,System.Object)">
            <summary>
            Finds connections to be released.
            </summary>
            <param name="tcpSocketInfoAsObject">The connection.</param>
            <param name="releaseConnections_ParametersAsObject">Stuff to make decisions and to save the results.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.ReleaseConnections(Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.Exception)">
            <summary>
            Closes the specified connections to the remote host and releases acquired resources.
            </summary>
            <param name="hostInformation">Host information or a null reference to close all connection according to specified types.</param>
            <param name="genuineConnectionType">What kind of connections will be affected by this operation.</param>
            <param name="reason">Reason of resource releasing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.GetConnectionNames(System.String)">
            <summary>
            Returns names of connections opened to the specified destination.
            Not all Connection Manager support this member.
            </summary>
            <param name="uri">The URI or URL of the remote host.</param>
            <returns>Names of connections opened to the specified destination.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpConnectionManager.InternalDispose(System.Exception)">
            <summary>
            Releases all required resources. Closes all opened connections. 
            Stops the network activity. Dispatches the provided exception to all invocations 
            made via this Connection Manager.
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.TcpInvocationFiniteAutomatonState">
            <summary>
            Enumerats lifetime states of TCP finite state automaton.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpInvocationFiniteAutomatonState.Teardown">
            <summary>
            Connection was terminated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpInvocationFiniteAutomatonState.ClientAvailable">
            <summary>
            Connection is not in use.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpInvocationFiniteAutomatonState.ClientSending">
            <summary>
            Sending was initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpInvocationFiniteAutomatonState.ClientReceiving">
            <summary>
            Response receiving was initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpInvocationFiniteAutomatonState.ServerAwaiting">
            <summary>
            Awaiting for the incoming request (i.e. reading).
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpInvocationFiniteAutomatonState.ServerExecution">
            <summary>
            Awaiting until a response will be reported.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpInvocationFiniteAutomatonState.ServerSending">
            <summary>
            Response is sending to the remote host.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo">
            <summary>
            Incapsulates information about a socket connection.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.#ctor(System.Net.Sockets.Socket,Belikov.GenuineChannels.TransportContext.ITransportContext,System.String)">
            <summary>
            Constructs an instance of the TcpSocketInfo class.
            </summary>
            <param name="socket">The socket.</param>
            <param name="iTransportContext">Transport Context.</param>
            <param name="connectionName">The name of the connection.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.DbgConnectionId">
            <summary>
            Gets the identifier of the connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.Socket">
            <summary>
            The socket.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.ConnectionName">
            <summary>
            The name of this connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.Remote">
            <summary>
            The host the connection is directed to.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.PrimaryRemoteUri">
            <summary>
            Gets the URL of the remote host if it's a server or the URI of the remote host if it's a client.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.ITransportContext">
            <summary>
            Transport Context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.IsValid">
            <summary>
            Indicates whether this connection is capable of sending or receiving messages.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.GenuineConnectionType">
            <summary>
            The type of the connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.ConnectionLevelSecurity">
            <summary>
            Connection-level Security Session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.Message">
            <summary>
            The message being sent asynchronously.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.MaxSendSize">
            <summary>
            Maximum size of the chunk being sent through the socket.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo._iMessageRegistrator">
            <summary>
            The message registrator to prevent processing the same request twice after connection
            reestablishing.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.LockForSending">
            <summary>
            Gets or sets an indication whether this socket is available for sending.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.MessageContainer">
            <summary>
            A queue of the messages arranged to be sent through this connection.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.LastTimeContentWasSent">
            <summary>
            The most recent moment the message was sent to the remote host.
            To manage the ping sending.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.InitialMessage">
            <summary>
            The message to receive a response for.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.CloseConnectionAfterInactivity">
            <summary>
            The time span to close invocation connection after this period of inactivity.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.ShutdownTime">
            <summary>
            The time after which the socket will be shut down automatically.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.Renew">
            <summary>
            Renews socket activity for the CloseConnectionAfterInactivity value.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.IsServer">
            <summary>
            Indicates whether the connection was opened by the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.TcpInvocationFiniteAutomatonState">
            <summary>
            Indicates the current state of the connection.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.SetupWriting(System.Int32)">
            <summary>
            Sets up the synchronous reading from the socket.
            </summary>
            <param name="operationTimeout">Operation timeout.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.AsyncSendBuffer">
            <summary>
            The data being sent to the socket asynchronously.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.AsyncSendBufferSizeOfValidContent">
            <summary>
            Size of the valid content being contained in SendingBuffer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.AsyncSendBufferCurrentPosition">
            <summary>
            Current position in SendingBuffer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.AsyncSendBufferIsLastPacket">
            <summary>
            Indicates whether the stream was read and last packet flag was sent.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.AsyncSendStream">
            <summary>
            The stream containing the data being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.ReceivingHeaderBuffer">
            <summary>
            The header.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.ReceivingBufferExpectedSize">
            <summary>
            The size of the content being read to ReceivingBuffer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.ReceivingBufferCurrentPosition">
            <summary>
            The current position in ReceivingBuffer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.IsHeaderIsBeingReceived">
            <summary>
            True if a header is being currently received.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous read, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in buffer from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous write, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams only return zero (0) at the end of the stream, otherwise, they should block until at least one byte is available.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo._connectionStateSignaller">
            <summary>
            The state controller.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo._connectionStateSignallerLock">
            <summary>
            The state controller lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineTcp.TcpSocketInfo.SignalState(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventType,System.Exception,System.Object)">
            <summary>
            Sets the state of the connection.
            </summary>
            <param name="genuineEventType">The state of the connection.</param>
            <param name="reason">The exception.</param>
            <param name="additionalInfo">The additional info.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineUdp.GenuineUdpChannel">
            <summary>
            Implements UDP Genuine Channel with IP multicasting support.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.GenuineUdpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
            <summary>
            Constructs an instance of the GenuineUdpChannel class.
            </summary>
            <param name="properties">An IDictionary of the channel properties which hold the configuration information for the current channel.</param>
            <param name="iClientChannelSinkProvider">The IClientChannelSinkProvider that creates the client channel sinks for the underlying channel through which remoting messages flow through.</param>
            <param name="iServerChannelSinkProvider">The IServerChannelSinkProvider that creates server channel sinks for the underlying channel through which remoting messages flow through.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.GenuineUdpChannel.GetUrlsForUri(System.String)">
            <summary>
            Returns an array of all the URLs for a URI.
            </summary>
            <param name="objectUri">The URI for which URLs are required.</param>
            <returns>An array of the URLs.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.GenuineUdpChannel.StartListening(System.Object)">
            <summary>
            Instructs the current channel to start listening for requests.
            </summary>
            <param name="data">Optional initialization information.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.GenuineUdpChannel.StopListening(System.Object)">
            <summary>
            Instructs the current channel to stop listening for requests.
            </summary>
            <param name="data">Optional state information for the channel.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUdp.GenuineUdpChannel.UriPrefix">
            <summary>
            Gets the initial part of the URI prefix.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.GenuineUdpChannel.GetBroadcastUriPrefix(System.String)">
            <summary>
            Changes gXXX uri prefix to gbXXX.
            </summary>
            <param name="prefix">The prefix of an URI.</param>
            <returns>The changed prefix.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.GenuineUdpChannel.GetBroadcastSender(System.String)">
            <summary>
            Creates and answers with IP Multicast sender that multicast messages via IP multicasting
            to the specified court.
            </summary>
            <param name="court">Court name.</param>
            <returns>Returns sender for IP multicasting to the specified court.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineUdp.IPMulticastSender">
            <summary>
            Implements a multicast sender, which sends broadcast messages via IP multicasting.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.IPMulticastSender.#ctor(System.String,Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Initializes an instance of the IPMulticastSender class.
            </summary>
            <param name="court">The name of the destination court.</param>
            <param name="iTransportContext">The Transport Context.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.IPMulticastSender.SendMessage(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.BroadcastEngine.ResultCollector)">
            <summary>
            Sends a broadcast message thru IP multicasting.
            </summary>
            <param name="message">The message being sent.</param>
            <param name="resultCollector">The result collector that gathers results of the invocation.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineUdp.StreamAssembled">
            <summary>
            Represents a stream being assembled from UDP packets.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.#ctor(System.Net.IPEndPoint,System.Int32)">
            <summary>
            Constructs an instance of the StreamAssembled class.
            </summary>
            <param name="remoteIPEndPoint">The IPEndPoint of the sender.</param>
            <param name="headerSize">The size of the header.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineUdp.StreamAssembled._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.Started">
            <summary>
            The moment when the first chunk was received.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineUdp.StreamAssembled._chunks">
            <summary>
            The received content.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.RemoteIPEndPoint">
            <summary>
            The IPEndPoint of the remote host.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.IsProcessed">
            <summary>
            Gets or sets an indication whether the message has been already processed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineUdp.StreamAssembled._headerSize">
            <summary>
            The size of the header in the provided chunks.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineUdp.StreamAssembled._wasLastPacketReceived">
            <summary>
            True if the last packet was received.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineUdp.StreamAssembled._disposed">
            <summary>
            Local variable indicated whether stream has been disposed.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.BufferReceived(System.Int32,System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Puts the received buffer into the chunk store.
            </summary>
            <param name="chunkNumber">The sequence number of the current chunk.</param>
            <param name="buffer">The chunk.</param>
            <param name="size">The size of valid content.</param>
            <param name="isLast">Whether it is the last packet in the sequence.</param>
            <returns>True if the stream is gathered.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.Dispose">
            <summary>
            Closes the current stream and releases any resources associated with the current stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.Close">
            <summary>
            Closes the current stream and releases any resources associated with the current stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous read, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in buffer from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An IAsyncResult that represents the asynchronous write, which could still be pending.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams only return zero (0) at the end of the stream, otherwise, they should block until at least one byte is available.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.StreamAssembled.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager">
            <summary>
            Implements a Connection Manager servicing UDP connections.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the UdpConnectionManager class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager.InternalSend(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Sends the message to the remote host.
            </summary>
            <param name="message">The message to be sent.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager._iMessageRegistrator">
            <summary>
            The message registrator.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager._closeInvocationConnectionAfterInactivity">
            <summary>
            Specifies a value by which the remote host's information is extended after every received message.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager.DbgConnectionId">
            <summary>
            Gets the connection identifier.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager.HEADER_SIZE">
            <summary>
            (1)		Magic code
            (16)	The unique stream id
            (4)		The sequence number of the current chunk (negative if it's the last chunk).
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager.ReceiveSynchronously">
            <summary>
            Receives the content synchronously.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager.StartListening(System.Object)">
            <summary>
            Starts listening to the specified end point and accepting incoming connections.
            </summary>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager.StopListening(System.Object)">
            <summary>
            Stops listening to the specified end point. Does not close any connections.
            </summary>
            <param name="endPoint">The end point</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager.ReleaseConnections(Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.Exception)">
            <summary>
            Closes the specified connections to the remote host and releases acquired resources.
            </summary>
            <param name="hostInformation">Host information.</param>
            <param name="genuineConnectionType">What kind of connections will be affected by this operation.</param>
            <param name="reason">Reason of resource releasing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager.InternalDispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUdp.UdpConnectionManager.TimerCallback">
            <summary>
            Releases expired streams.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineUtility">
            <summary>
            Utility that incapsulates common operations for Genuine channel.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.Parse(System.String,System.String@)">
            <summary>
            Extracts the channel URI and the remote well-known object URI from the specified URL.
            </summary>
            <param name="url">The URL from which to extract the URI of the remote well known object.</param>
            <param name="objectURI">When this method returns, contains a String that holds the URI of the remote well known object. This parameter is passed uninitialized.</param>
            <returns>The URI of the current channel.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.ParseUrl(System.String,System.String@)">
            <summary>
            Extracts the destination URI from the specified URL.
            </summary>
            <param name="url">The URL from which to extract the URI of the remote well known object.</param>
            <param name="objectURI">When this method returns, contains a String that holds the URI of the remote well known object. This parameter is passed uninitialized.</param>
            <returns>The URI of the current channel.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.FetchChannelPrefix(System.String)">
            <summary>
            Returns channel prefix.
            </summary>
            <param name="url">Url to fetch prefix from.</param>
            <returns>The fetched prefix or a null reference.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.SplitToHostAndPort(System.String,System.Int32@)">
            <summary>
            Splits the given url to a host name and a port.
            </summary>
            <param name="url">The url to be splitted.</param>
            <param name="port">Out parameter. The fetched port.</param>
            <returns>The host name, or null if <paramref name="url"/> was null or could not parsed.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.SplitHttpLinkToHostAndPort(System.String,System.Int32@)">
            <summary>
            Splits the given url to a host name and a port.
            </summary>
            <param name="url">The url to be splitted.</param>
            <param name="port">The fetched port.</param>
            <returns>The uri.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.IsIPv4MappedToIPv6(System.Net.IPAddress)">
            <summary>
            Determines whether [is i PV4 mapped to i PV6] [the specified address].
            </summary>
            <param name="address">The address.</param>
            <returns><c>true</c> if [is i PV4 mapped to i PV6] [the specified address]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.MapToIPv6(System.Net.IPAddress)">
            <summary>
            Maps to an IPV6 address.
            </summary>
            <param name="address">The address.</param>
            <returns>IPAddress.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.LocalSystemSupportsIPv6">
            <summary>
            Gets a value indicating whether the local system supports IPV6.
            </summary>
            <value><c>true</c> if [local system supports i PV6]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.CheckUrlOnConnectivity(System.String)">
            <summary>
            Returns true if it is possible to connect to the given url.
            </summary>
            <param name="url">Url to check.</param>
            <returns>True if it is possible to connect to the given url.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.ConvertToMilliseconds(System.Object)">
            <summary>
            Converts the specified TimeSpan into its integer representation expressed in milliseconds.
            </summary>
            <param name="timeSpanAsObject">The TimeSpan value to be converted.</param>
            <returns>Integer representation of the TimeSpan expressed in milliseconds.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.SafeConvertToInt32(System.Object,System.Int32)">
            <summary>
            Tries to convert given parameter into Int32.
            Returns errorValue if it is not possible.
            </summary>
            <param name="str">The string to be converted.</param>
            <param name="errorValue">The integer value to be returned if a string can not be converted into integer value.</param>
            <returns>Integer representation of the string or given errorValue.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.SafeConvertToBool(System.Object,System.Boolean)">
            <summary>
            Tries to convert given parameter into boolean.
            Returns errorValue if it is not possible.
            </summary>
            <param name="str">The string to be converted.</param>
            <param name="errorValue">The bool value returned if the string can not be converted into bool value.</param>
            <returns>Bool representation of the string or errorValue.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.SafeConvertToInt32(System.Object)">
            <summary>
            Tries to convert given parameter into Int32 type.
            Returns a null reference if it's impossible.
            </summary>
            <param name="str">The string reperesented as the reference to an object.</param>
            <returns>Boxed Int32 value or a null reference.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.SafeConvertToBool(System.Object)">
            <summary>
            Tries to convert the given parameter into the boolean type.
            Returns a null reference if it is impossible.
            </summary>
            <param name="str">The string reperesented as the reference to an object.</param>
            <returns>Boxed boolean value or a null reference.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.SafeConvertToTimeSpan(System.Object)">
            <summary>
            Tries to convert given parameter into Int32 type and treats it as a TimeSpan value specified in milliseconds.
            Returns a null reference if it is impossible.
            </summary>
            <param name="str">The string reperesented as the reference to an object.</param>
            <returns>Boxed TimeSpan value or a null reference.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.FetchCurrentRemoteUri">
            <summary>
            Fetches the URI of the remote host that sent a request.
            </summary>
            <returns>The URI of the remote host or a null reference.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.CurrentRemoteUri">
            <summary>
            Fetches the URI of the remote host that sent a request.
            </summary>
            <returns>The URI of the remote host or a null reference.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.CurrentRemoteHost">
            <summary>
            Fetches HostInformation of the remote host that sent a request.
            </summary>
            <returns>HostInformation or a null reference.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.CurrentSession">
            <summary>
            Gets a session belonging to the current user.
            Throws an exception if there is no current user.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.CurrentMessage">
            <summary>
            Gets the object representing the message received from the remote host and initiated the current invocation.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.CurrentSocket">
            <summary>
            Gets the socket while a connection is being accepted or CLSS is being established.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.CurrentHttpContext">
            <summary>
            Gets the current HTTP Context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.CurrentInvocationSecuritySessionParameters">
            <summary>
            Gets the current Security Session being used on invocation level.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.CurrentConnectionSecuritySession">
            <summary>
            Gets the current Security Session being used on connection level.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.CurrentInvocationSecuritySession">
            <summary>
            Gets the current Security Session being used on connection level.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.HttpPrincipal">
            <summary>
            Gets the user credential provided during HTTP authorization (NTLM, digest or basic).
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.ReadDataFromStream(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies data from the stream to the buffer.
            If the stream does not contain specified number of bytes, an exception will be thrown.
            </summary>
            <param name="inputStream">The source stream to copy data from.</param>
            <param name="buffer">The buffer to copy data from.</param>
            <param name="offset">The zero-based byte offset in a buffer at which to begin storing the data read from the current stream.</param>
            <param name="sizeToRead">The size of the chunk being copied.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.TryToReadFromStream(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies data from the stream to the buffer.
            If the stream does not contain specified number of bytes, an exception will be thrown.
            </summary>
            <param name="inputStream">The source stream.</param>
            <param name="buffer">The buffer to copy to.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="sizeToRead">Size of chunk being copied.</param>
            <returns>Bytes read.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.CopyStreamToStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies data from one stream to another.
            </summary>
            <param name="inputStream">Stream to copy from.</param>
            <param name="outputStream">Stream to copy to.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.CopyStreamToStream(System.IO.Stream,System.IO.Stream,System.Byte[])">
            <summary>
            Copies data from the input stream to the output stream.
            WARNING: sometimes it does not actually copy the content of the input stream, it attaches it to the output stream.
            </summary>
            <param name="inputStream">The stream to copy from.</param>
            <param name="outputStream">The stream to copy to.</param>
            <param name="buffer">The intermediate buffer used during copying.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.CopyStreamToStreamWithMinimumOperations(System.IO.Stream,System.IO.Stream,System.Byte[])">
            <summary>
            Copies data from the input stream to the output stream.
            WARNING: sometimes it does not actually copy the content of the input stream, it attaches it to the output stream.
            </summary>
            <param name="inputStream">The stream to copy from.</param>
            <param name="outputStream">The stream to copy to.</param>
            <param name="buffer">The intermediate buffer used during copying.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.CopyStreamToStream(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Copies data from the input stream to output stream.
            </summary>
            <param name="inputStream">The stream to copy from.</param>
            <param name="outputStream">The stream to copy to.</param>
            <param name="size">The size to be copied.</param>
            <returns>Number of remained bytes.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.CopyStreamToStreamPhysically(System.IO.Stream,System.IO.Stream,System.Byte[])">
            <summary>
            Copies data from the input stream to the output stream.
            </summary>
            <param name="inputStream">The stream to copy from.</param>
            <param name="outputStream">The stream to copy to.</param>
            <param name="buffer">The intermediate buffer used during copying.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.CopyStreamToStreamExceptSign(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Copies the content of the input stream into the output stream without touching a part
            with the specified size in the end of the input stream.
            </summary>
            <param name="inputStream">The incoming data.</param>
            <param name="outputStream">The output data.</param>
            <param name="signSize">The size of the intact block.</param>
            <returns>The untouched block wrapped into a stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.FetchDotNetUriFromMbr(System.MarshalByRefObject)">
            <summary>
            Returns .NET Remoting URI of the given MarshalByRefObject instance.
            </summary>
            <param name="marshalByRefObject">MarshalByRefObject instance to fetch URI for.</param>
            <returns>.NET Remoting URI of the given MarshalByRefObject instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.FetchChannelUriFromMbr(System.MarshalByRefObject,System.String@,Belikov.GenuineChannels.TransportContext.ITransportContext@)">
            <summary>
            Answers Genuine Channels URI and Transport Context via which access to the remote
            MarshalByRefObject object is performed.
            </summary>
            <param name="marshalByRefObject">MarshalByRefObject instance to fetch the URI from.</param>
            <param name="uri">The uri.</param>
            <param name="iTransportContext">The transport context.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.FetchTransportContextFromMbr(System.MarshalByRefObject)">
            <summary>
            Gets a Transport Context servicing the specified transparent proxy.
            </summary>
            <param name="marshalByRefObject">The transparent proxy.</param>
            <returns>The Transport Context.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.FetchHostInformationFromMbr(System.MarshalByRefObject)">
            <summary>
            Gets a HostInformation representing the remote host where the specified marshalByRefObject resides.
            </summary>
            <param name="marshalByRefObject">The transparent proxy.</param>
            <returns>HostInformation representing the remote host where the specified marshalByRefObject resides.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.FetchMachineGuidFromUri(System.String)">
            <summary>
            Fetches machine's guid from Genuine Channels URI.
            </summary>
            <param name="uri">The URI to fetch machine's guid from.</param>
            <returns>Machine's guid.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.ResolveIPAddress(System.String,System.Boolean)">
            <summary>
            Resolves IP address. Throws the CanNotResolveHostName exception if resolving fails.
            </summary>
            <param name="url">Url to resolve.</param>
            <param name="allowIPv6">Allow IPv6 addresses.</param>
            <returns>Resolved IPAddress.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.GetDefaultServerSinkChain">
            <summary>
            Generates and answers a default server sink chain.
            </summary>
            <returns>The first sink provider in the chain.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.AreBuffersEquals(System.Byte[],System.Byte[])">
            <summary>
            Returns true if both buffers are equal.
            I can't believe that .NET framework doesn't have such means!
            </summary>
            <param name="first">First buffer to compare</param>
            <param name="second">Second buffer to compare</param>
            <returns>True if they equal</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.CutOutBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Cuts out the content of the buffer.
            </summary>
            <param name="source">The source buffer.</param>
            <param name="offset">The offset to start from.</param>
            <param name="count">The size of the cut fragment.</param>
            <returns></returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.WaitOne(System.Threading.WaitHandle,System.Int32)">
            <summary>
            Blocks the current thread until the event receives a signal.
            </summary>
            <param name="waitHandle">The event.</param>
            <param name="timeSpan">The time span specified in milliseconds.</param>
            <returns>True if the event receives a signal; otherwise, false.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.ReadException(System.IO.Stream)">
            <summary>
            Deserializes an exception from the stream and throws it.
            </summary>
            <param name="stream">The stream containing serialized exception.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.CompareTickCounts(System.Int32,System.Int32)">
            <summary>
            Compares two Environment.TickCount values as they were CLS-complaint.
            </summary>
            <param name="finish">The end of the period.</param>
            <param name="start">The start of the period.</param>
            <returns>The difference in milliseconds.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.IsTimeoutExpired(System.Int32,System.Int32)">
            <summary>
            Checks whether the specified timeout is expired.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="now">The current moment.</param>
            <returns>True if the specified timeout is expired.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.IsTimeoutExpired(System.Int32)">
            <summary>
            Checks whether the specified timeout is expired.
            </summary>
            <param name="timeout">The timeout.</param>
            <returns>True if the specified timeout is expired.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.TickCount">
            <summary>
            Gets the number of milliseconds elapsed since the system started.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.GetTimeout(System.Int32)">
            <summary>
            Answers a moment at which the specified time span expires.
            </summary>
            <param name="timespan">The time span in milliseconds.</param>
            <returns>A moment at which the specified time span expires.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.GetTimeout(System.TimeSpan)">
            <summary>
            Answers a moment at which the specified time span expires.
            </summary>
            <param name="timespan">The time span in milliseconds.</param>
            <returns>A moment at which the specified time span expires.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineUtility.GetMillisecondsLeft(System.Int32)">
            <summary>
            Answers a time span between the specified timeout and the current moment expressed in milliseconds.
            </summary>
            <param name="timeout">The timeout.</param>
            <returns>A time span between the specified timeout and the current moment expressed in milliseconds.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.FurthestFuture">
            <summary>
            Answers a moment specifying the maximum distant time moment from the current moment.
            </summary>
            <returns>A moment specifying the maximum distant time moment from the current moment.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.DefaultHostIdentifier">
            <summary>
            Gets the default identifier of the current host.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineUtility.CurrentThreadId">
            <summary>
            Gets the current thread identifier.
            </summary>
            <value>A 32-bit signed integer that is the identifier of the current thread.</value>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineXHttp.GenuineXHttpChannel">
            <summary>
            GenuineXHttpChannel implements a .NET Remoting channel wrapper over GXHTTP Transport Context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.GenuineXHttpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
            <summary>
            Constructs an instance of the GenuineTcpChannel class.
            </summary>
            <param name="properties">An IDictionary of the channel properties which hold the configuration information for the current channel.</param>
            <param name="iClientChannelSinkProvider">The IClientChannelSinkProvider that creates the client channel sinks for the underlying channel through which remoting messages flow through.</param>
            <param name="iServerChannelSinkProvider">The IServerChannelSinkProvider that creates server channel sinks for the underlying channel through which remoting messages flow through.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.GenuineXHttpChannel.GetUrlsForUri(System.String)">
            <summary>
            Returns an array of all the URLs for a URI.
            </summary>
            <param name="objectUri">The URI for which URLs are required.</param>
            <returns>An array of the URLs.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.GenuineXHttpChannel.StartListening(System.Object)">
            <summary>
            Instructs the current channel to start listening for requests.
            </summary>
            <param name="data">Optional initialization information.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.GenuineXHttpChannel.StopListening(System.Object)">
            <summary>
            Instructs the current channel to stop listening for requests.
            </summary>
            <param name="data">Optional state information for the channel.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineXHttp.GenuineXHttpChannel.UriPrefix">
            <summary>
            Gets the initial part of the URI prefix.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.GenuineXHttpChannel._localPort">
            <summary>
            The port number to bind to.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.GenuineXHttpChannel._localInterface">
            <summary>
            Interface.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineXHttp.GenuineXHttpChannel.ListeningEntry">
            <summary>
            The listening entry the channel binds listening socket to.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.GenuineXHttpChannel.ReadSettings(System.Collections.IDictionary)">
            <summary>
            Reads settings.
            </summary>
            <param name="properties">Settings container to read from.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineXHttp.GXHTTPHeaderParser">
            <summary>
            Parses HTTP headers.
            Recognizes the version of the HTTP protocol and Content-length and Expect fields.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.GXHTTPHeaderParser.#ctor(System.Boolean)">
            <summary>
            Constructs an instance of the HeaderParse class.
            </summary>
            <param name="client">Specifies the parsing logic. True, to parse an HTTP request; false, otherwise.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineXHttp.GXHTTPHeaderParser.HeaderFields">
            <summary>
            Defines types of HTTP header fields.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.GXHTTPHeaderParser._lineNumber">
            <summary>
            An integer that indicates the current line number.
            </summary>		
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.GXHTTPHeaderParser._client">
            <summary>
            True, if the object parses an HTTP response; false, otherwise.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineXHttp.GXHTTPHeaderParser.ContentLength">
            <summary>
            Gets the length of the HTTP content. Answers -1 if the field was not parsed.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineXHttp.GXHTTPHeaderParser.Http11_100Continue">
            <summary>
            Gets a boolean value indicating whether 100-continue HTTP mode is requested.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineXHttp.GXHTTPHeaderParser.IsHttp11">
            <summary>
            Gets a boolean value indicating the protocol version of the HTTP packet.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.GXHTTPHeaderParser.ParseHeader(System.String,System.Int32,System.Int32)">
            <summary>
            Parses the specified HTTP header line.
            </summary>
            <param name="line">The line of the HTTP header.</param>
            <param name="indexOfFirstDigit">The index of the first digit in the line.</param>
            <param name="indexOfLastDigit">The index of the last digit in the line.</param>
            <returns>The type of HTTP header field.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineXHttp.XHttpConnection">
            <summary>
            Represents a connection, which consists of listener and sender TCP connections.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnection.#ctor(Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager,System.Boolean,System.String)">
            <summary>
            Constructs an instance of the XHttpClientConnection class.
            </summary>
            <param name="xHttpConnectionManager">The parent connection manager.</param>
            <param name="isClient">Indicates the type of network logic.</param>
            <param name="connectionName">The name of the connection.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpConnection.UserAgent">
            <summary>
            The name of the User Agent.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpConnection.XHttpConnectionManager">
            <summary>
            The parent Connection Manager.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpConnection.HostId">
            <summary>
            The identifier of the host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpConnection.IsClient">
            <summary>
            The type of connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpConnection.ConnectionName">
            <summary>
            The name of the connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpConnection.DbgConnectionId">
            <summary>
            The unique connection identifier, which is used for debugging purposes only.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpConnection.Listener">
            <summary>
            The listening connection.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnection.InternalDispose(System.Exception)">
            <summary>
            Releases acquired resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager">
            <summary>
            Provides an implementation for a sender-receiver Connection Manager that uses the HTTP protocol to transmit messages
            via sockets.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the XHttpConnectionManager class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager._persistent">
            <summary>
            A collection of established persistent connections.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.InternalSend(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Sends the message to the remote host.
            Returns a response if corresponding Security Session is established and the initial message is not one-way.
            </summary>
            <param name="message">The message to be sent or a null reference (if there is a queued message).</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Pool_Client_ContinueHalfSyncReceiving(System.Object)">
            <summary>
            Continues receiving and processing of the message in half-sync mode.
            </summary>
            <param name="xHttpPhysicalConnectionAsObject">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Pool_Server_ContinueHalfSyncReceiving(System.Object)">
            <summary>
            Continues receiving and processing of the message in half-sync mode.
            </summary>
            <param name="socketAsObject">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Pool_Server_ProcessListenerRequest(Belikov.GenuineChannels.GenuineXHttp.XHttpConnection,Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection)">
            <summary>
            Processes the listening request on the server side.
            </summary>
            <param name="xHttpConnection">The connection.</param>
            <param name="xHttpPhysicalConnection">The physical connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Pool_Server_ProcessSenderRequest(Belikov.GenuineChannels.GenuineXHttp.XHttpConnection,Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection,System.IO.Stream)">
            <summary>
            Processes the sending request on the server side.
            </summary>
            <param name="xHttpConnection">The connection.</param>
            <param name="xHttpPhysicalConnection">The physical connection.</param>
            <param name="inputStream">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Pool_HandleClientConnection(Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection)">
            <summary>
            Sends a request to the server according to the type of the connection provided.
            Does not process exceptions.
            </summary>
            <param name="xHttpPhysicalConnection"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Pool_Sender_HandleClientConnection(Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection)">
            <summary>
            Starts sending a message if one is available. Marks the connection is available if there are no messages at the moment.
            Does not process exceptions.
            </summary>
            <param name="xHttpPhysicalConnection">The sending connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Pool_Listener_HandleClientConnection(Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection)">
            <summary>
            Starts sending a message if one is available. Marks the connection is available if there are no messages at the moment.
            Does not process exceptions.
            </summary>
            <param name="xHttpPhysicalConnection">The sending connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Pool_GetConnectionForSending(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Answers a connection fitting to the specified parameters or throws the corresponding exception
            when it's impossible.
            </summary>
            <param name="message">The message being sent.</param>
            <returns>The acquired connection.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.ReleaseConnections_InspectPersistentConnections(System.Object,System.Object)">
            <summary>
            Finds connections to be released.
            </summary>
            <param name="xHttpConnectionAsObject">The connection.</param>
            <param name="releaseConnections_ParametersAsObject">Stuff to make decisions and to save the results.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.ReleaseConnections(Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.Exception)">
            <summary>
            Closes the specified connections to the remote host and releases acquired resources.
            </summary>
            <param name="hostInformation">Host information.</param>
            <param name="genuineConnectionType">What kind of connections will be affected by this operation.</param>
            <param name="reason">Reason of resource releasing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.GetConnectionNames(System.String)">
            <summary>
            Returns names of connections opened to the specified destination.
            Not all Connection Manager support this member.
            </summary>
            <param name="uri">The URI or URL of the remote host.</param>
            <returns>Names of connections opened to the specified destination.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.ConnectionFailed(System.Exception,Belikov.GenuineChannels.GenuineXHttp.XHttpConnection,Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection)">
            <summary>
            Operates with failed sockets.
            </summary>
            <param name="exception">The source exception.</param>
            <param name="xHttpConnection">The failed logical connection.</param>
            <param name="xHttpPhysicalConnection">The failed physical connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.ReestablishConnection(System.Object)">
            <summary>
            Reestablishes the specified physical connection.
            </summary>
            <param name="xHttpPhysicalConnectionAsObject">The connection reestablished.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_Send100Continue(System.Net.Sockets.Socket)">
            <summary>
            Sends HTTP 1.1 100 Continue header back to the client.
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_SendHttpContent(System.Int32,Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.Messaging.GenuineChunkedStream,System.Exception,Belikov.GenuineChannels.Messaging.MessageContainer,Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection,Belikov.GenuineChannels.Connection.GenuineConnectionType,Belikov.GenuineChannels.GenuineHttp.HttpPacketType,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sends HTTP content to the remote host.
            Does not process exceptions.
            Automatically initiates asynchronous receiving.
            Automatically manages stream seqNo for clients' connections.
            </summary>
            <param name="timeout">Operation timeout.</param>
            <param name="message">The message.</param>
            <param name="content">The content sent instead of the message.</param>
            <param name="exceptionToBeSent">The exception being sent in the response.</param>
            <param name="messageContainer">The message container.</param>
            <param name="xHttpPhysicalConnection">The physical connection.</param>
            <param name="genuineConnectionType">The type of the connection.</param>
            <param name="httpPacketType">The type of the HTTP packet.</param>
            <param name="repeatSending">Whether the content was already packed.</param>
            <param name="synchronous">Whether to send content synchronously.</param>
            <param name="startAutomaticReceiving">Indicates whether to start automatic receiving of the response/request if the type of the sending is synchronous.</param>
            <param name="applyClss">A boolean value indicating whether the CLSS should be applied.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.PhysicalConnectionAndSocket">
            <summary>
            Is used to transfer connection and socket parameters to the working thread.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.PhysicalConnectionAndSocket.#ctor(Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection,System.Net.Sockets.Socket)">
            <summary>
            Constructs an instance of the PhysicalConnectionAndSocket class.
            </summary>
            <param name="xHttpPhysicalConnection">The connection.</param>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_SendServerError(System.Object)">
            <summary>
            Sends the error to the remote host.
            </summary>
            <param name="PhysicalConnectionAndSocketAsObject">The context.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_InitiateAsyncSending(Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection)">
            <summary>
            Initiates sending through the physical asynchronously.
            </summary>
            <param name="xHttpPhysicalConnection">The physical connection.</param>
            <returns>True if the sending was initiated. False if the specified physical connection contains no data to send.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_OnEndAsyncSending(System.IAsyncResult)">
            <summary>
            Completes async sending.
            </summary>
            <param name="ar">The result of the asynchronous call.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_ReadToUpperLine(System.IO.Stream,System.Int32@,System.Int32@)">
            <summary>
            Answers a line read from the specified stream and finished with CR LF byte sequence.
            </summary>
            <param name="stream">The source stream.</param>
            <param name="indexOfFirstDigit">The index of the first found digit in the line.</param>
            <param name="indexOfLastDigit">The index of the last found digit in the line.</param>
            <returns>A line read from the specified stream and finished with CR LF byte sequence.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_ParseHttpContent(System.Int32,System.Boolean,System.Net.Sockets.Socket,Belikov.GenuineChannels.Security.SecuritySession,System.Byte@,System.String@,System.Int32@,Belikov.GenuineChannels.Connection.GenuineConnectionType@,System.Guid@,Belikov.GenuineChannels.GenuineHttp.HttpPacketType@,System.String@,System.Int32@)">
            <summary>
            Parses HTTP request or response.
            </summary>
            <param name="timeout">The reading timeout.</param>
            <param name="client">Specifies the parsing logic.</param>
            <param name="socket">The connection.</param>
            <param name="connectionLevelSecurity">Connection-level Security Session.</param>
            <param name="protocolVersion">The version of the protocol.</param>
            <param name="uri">The URI of the remote host.</param>
            <param name="sequenceNo">The sequence no of the parsing packet.</param>
            <param name="genuineConnectionType">The type of the connection.</param>
            <param name="hostId">The identifier of the host.</param>
            <param name="httpPacketType">The type of the HTTP packet.</param>
            <param name="connectionName">The name of the connection.</param>
            <param name="remoteHostUniqueIdentifier">The unique identifier of the HostInformation used by the remote host.</param>
            <returns>A stream based on the specified socket.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_ParseLabelledStream(System.IO.Stream,Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection)">
            <summary>
            Reads messages from the stream and processes them.
            </summary>
            <param name="stream">The source stream.</param>
            <param name="xHttpPhysicalConnection">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_ParseException(System.IO.Stream)">
            <summary>
            Answers an exception deserialized.
            </summary>
            <param name="stream">The input stream.</param>
            <returns>The exception.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_HalfSync_Client_StartReceiving(Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection)">
            <summary>
            Initiates receiving of the message's header.
            </summary>
            <param name="xHttpPhysicalConnection">The physical connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_HalfSync_Client_EndReceiving(System.IAsyncResult)">
            <summary>
            Processes the received content.
            </summary>
            <param name="ar">The result of the asynchronous invocation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_HalfSync_Server_StartReceiving(System.Net.Sockets.Socket)">
            <summary>
            Initiates receiving of the message's header.
            </summary>
            <param name="socket">The connection.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LowLevel_HalfSync_Server_EndReceiving(System.IAsyncResult)">
            <summary>
            Processes the received content.
            </summary>
            <param name="ar">The result of the asynchronous invocation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Pool_CreateConnection(Belikov.GenuineChannels.TransportContext.HostInformation,System.String,System.Boolean,System.String)">
            <summary>
            Creates and registers a logical connection to the specified host.
            </summary>
            <param name="remote">The remote host.</param>
            <param name="primaryUri">The primary uri of the remote host.</param>
            <param name="isClient">The type of the behavior applying to the connection.</param>
            <param name="connectionName">Connection name.</param>
            <returns>The created connection.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Pool_EstablishPersistentConnection(Belikov.GenuineChannels.TransportContext.HostInformation,System.String)">
            <summary>
            Establishes a connection to the remote host.
            </summary>
            <param name="remote">The remote host.</param>
            <param name="connectionName">The name of the connection.</param>
            <returns>The established connection.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.InternalDispose(System.Exception)">
            <summary>
            Releases all resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.LocalPort">
            <summary>
            The local port being listened.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager._listeningSockets">
            <summary>
            Listening sockets. End Point => AcceptConnectionClosure.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.StartListening(System.Object)">
            <summary>
            Starts listening to the specified end point and accepting incoming connections.
            </summary>
            <param name="endPointAsObject">The end point.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.StopListening(System.Object)">
            <summary>
            Stops listening to the specified end point. Does not close any connections.
            </summary>
            <param name="endPointAsObject">The end point.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Belikov#GenuineChannels#GenuineTcp#IAcceptConnectionConsumer#AcceptConnection(System.Net.Sockets.Socket)">
            <summary>
            Accepts the connection.
            </summary>
            <param name="clientSocket">The socket.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.IsDisposed">
            <summary>
            Gets an indication whether the Connection Manager has been disposed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.TimerCallback">
            <summary>
            Closes expired connections and sends ping via inactive connections.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Internal_TimerCallback_InspectPersistentConnections(System.Object,System.Object)">
            <summary>
            Finds connections to be released.
            </summary>
            <param name="xHttpConnectionAsObject">The connection.</param>
            <param name="parametersAsObject">Stuff to make decisions and to save the results.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.Internal_TimerCallback(System.Object)">
            <summary>
            Closes expired connections and sends ping via inactive connections.
            </summary>
            <param name="ignored">Ignored.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpConnectionManager.SendPing(System.Object)">
            <summary>
            Sends a ping to the remote host.
            </summary>
            <param name="xHttpConnectionAsObject">The client or server connection.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection">
            <summary>
            Represents a connection based on Socket.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.#ctor(Belikov.GenuineChannels.GenuineXHttp.XHttpConnection,System.Boolean)">
            <summary>
            Constructs an instance of the XHttpPhysicalConnection class.
            </summary>
            <param name="xHttpConnection">The physical connection.</param>
            <param name="sender">The sender.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.Socket">
            <summary>
            The socket.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.EntryUri">
            <summary>
            The URI of the remote entry.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.Remote">
            <summary>
            The remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.XHttpConnection">
            <summary>
            The parent logical connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.IsSender">
            <summary>
            Gets an indication whether this inatance represents sender connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.SequenceNo">
            <summary>
            The current number of sequence.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.LocalEndPoint">
            <summary>
            Cached local end point of the client.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.MessagesBeingSent">
            <summary>
            Contains all messages currently being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.SentContent">
            <summary>
            The content being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.AsyncSendBuffer">
            <summary>
            The buffer for intermediate serialization.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.AsyncSendBufferSizeOfValidContent">
            <summary>
            Size of the valid content being contained in SendingBuffer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.AsyncSendBufferCurrentPosition">
            <summary>
            Current position in SendingBuffer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.AsyncSendStream">
            <summary>
            The stream containing the data being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.AsyncSendBufferIsLastPacket">
            <summary>
            An indication of the end of the current sequence.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.AsyncReceiveBuffer">
            <summary>
            The buffer for analyzing incoming content.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.CloseSocket">
            <summary>
            Closes the socket.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.CheckConnectionStatus">
            <summary>
            Opens the socket if it is not opened or not connected.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.GenuineXHttp.XHttpPhysicalConnection.InternalDispose(System.Exception)">
            <summary>
            Releases resources.
            </summary>
            <param name="reason">The reason of disposing.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.IGenuineExceptionLocalizer">
            <summary>
            Provides methods to localize the text of exceptions.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.IGenuineExceptionLocalizer.Localize(System.String,System.Object[])">
            <summary>
            Returns the localized error message corresponding to the specified error identifier or a null reference.
            </summary>
            <param name="errorId">The error identifier.</param>
            <param name="messageParameters">The message parameters.</param>
            <returns>A localized error message or a null reference to use the default error message.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Logbook.BinaryLogWriter">
            <summary>
            Writes down debug records into the provided stream writer.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.#ctor(System.IO.Stream)">
            <summary>
            Constructs an instance of the BinaryLogWriter class.
            </summary>
            <param name="stream">The destination stream.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.BinaryLogWriter.Stream">
            <summary>
            The target stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.BinaryLogWriter.Item(Belikov.GenuineChannels.Logbook.LogCategory)">
            <summary>
            Gets or sets a level of details of event representation.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.BinaryLogWriter.BinaryWriter">
            <summary>
            The binary writer created on the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.BinaryLogWriter._streamLock">
            <summary>
            The lock to the stream.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.BinaryLogWriter.StreamHeaderMagicCode">
            <summary>
            The header magic code: 0xAA, 0x4B, 0xE7, 0x78
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteString(System.String)">
            <summary>
            Puts down a string or an empty string if the specified value is null.
            </summary>
            <param name="str">The string or a null reference.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteStringWithParameters(System.String,System.Object[])">
            <summary>
            Puts down a string with parameters or an empty string if the specified value is null.
            </summary>
            <param name="str">The string or a null reference.</param>
            <param name="parameters">String parameters.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteObjectAsString(System.Object)">
            <summary>
            Puts down a string representation of the provided object or an empty string if the specified value is null.
            </summary>
            <param name="obj">The object or a null reference.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteException(System.Exception)">
            <summary>
            Puts down a record represending the specified exception and all inner exceptions.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteHostInformation(Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Puts down a structure describing the specified remote host.
            </summary>
            <param name="remote">The HostInformation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteHostInformationId(Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Puts down the ID of the remote host.
            </summary>
            <param name="remote">The remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteMessage(Belikov.GenuineChannels.Messaging.Message,System.Boolean,System.String,System.String)">
            <summary>
            Puts down a structure describing the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="isSent">Whether it will be executed on a remote host.</param>
            <param name="invocationTarget">The target of the invocation.</param>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteMessageSeqNo(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Puts down the message id.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteSecuritySessionParameters(Belikov.GenuineChannels.Security.SecuritySessionParameters)">
            <summary>
            Puts down Security Session Parameters.
            </summary>
            <param name="parameters">The Security Session Parameters.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteSecuritySessionId(Belikov.GenuineChannels.Security.SecuritySession)">
            <summary>
            Puts down the Security Session Identifier.
            </summary>
            <param name="securitySession">The Security Session.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteBinaryContent(System.IO.Stream)">
            <summary>
            Puts down a content of the stream.
            </summary>
            <param name="stream">The stream containing content.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.BinaryLogWriter.LifetimeId">
            <summary>
            The lifetime id of the current execution.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteRecordHeader(Belikov.GenuineChannels.Logbook.BinaryRecordVersion,Belikov.GenuineChannels.Logbook.LogCategory,Belikov.GenuineChannels.Logbook.LogMessageType,System.String)">
            <summary>
            Puts down a record header containing the magic code, type of the record, and current DateTime.
            </summary>
            <param name="binaryRecordVersion">The version of the record.</param>
            <param name="logCategory">The log category.</param>
            <param name="type">The type of the event.</param>
            <param name="author">The author.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteConnectionParameters(Belikov.GenuineChannels.Parameters.IParameterProvider)">
            <summary>
            Puts down all parameters from the specified parameter provider.
            </summary>
            <param name="iParameterProvider">The parameter provider.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteDispatcherSettings(System.Boolean,Belikov.GenuineChannels.BroadcastEngine.Dispatcher)">
            <summary>
            Puts down a record describing a broadcast dispatcher.
            </summary>
            <param name="writeDispatcherSettings">A value indicating whether it is necessary to put down dispatcher's settings.</param>
            <param name="dispatcher">The broadcast dispatcher.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteResultCollectorId(Belikov.GenuineChannels.BroadcastEngine.ResultCollector)">
            <summary>
            Puts down a record containing a reference to the specified ResultCollected.
            </summary>
            <param name="resultCollector">ResultCollector.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteReceiverInfo(System.Boolean,Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo)">
            <summary>
            Puts down a record containing information about the specified broadcast recipient.
            </summary>
            <param name="writeFullInformation">True if it is necessary to write all settings of the ReceiverInfo.</param>
            <param name="receiverInfo">The ReceiverInfo.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteImplementationWarningEvent(System.String,Belikov.GenuineChannels.Logbook.LogMessageType,System.Exception,System.Int32,System.String,System.String,System.Object[])">
            <summary>
            Puts down a record describing an implementation warning.
            </summary>
            <param name="author">The author.</param>
            <param name="type">The type of the event.</param>
            <param name="exception">The exception associated with the event.</param>
            <param name="sourceThreadId">The id of the thread.</param>
            <param name="sourceThreadName">The name of the thread.</param>
            <param name="description">The description of the event.</param>
            <param name="parameters">Parameters to the description.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteEvent(Belikov.GenuineChannels.Logbook.LogCategory,System.String,Belikov.GenuineChannels.Logbook.LogMessageType,System.Exception,Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.TransportContext.HostInformation,System.IO.Stream,System.Int32,System.String,Belikov.GenuineChannels.Security.SecuritySession,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Object[])">
            <summary>
            Puts down a record describing a general Genuine Channels event.
            </summary>
            <param name="logCategory">The category of the event.</param>
            <param name="author">The author.</param>
            <param name="type">The type of the event(Subcategory).</param>
            <param name="exception">The exception associated with the event.</param>
            <param name="message">The message associated with the event.</param>
            <param name="remote">The remote host participating in the event.</param>
            <param name="content">The content associated with the record.</param>
            <param name="sourceThreadId">The id of the thread where the invocation was made.</param>
            <param name="sourceThreadName">The name of the thread.</param>
            <param name="securitySession">The Security Session.</param>
            <param name="securitySessionName">The name of the Security Session</param>
            <param name="connectionId">The identifier of the connection.</param>
            <param name="number1">An additional integer parameter.</param>
            <param name="number2">An additional integer parameter.</param>
            <param name="number3">An additional integer parameter.</param>
            <param name="string1">The first string that elaborates the current event.</param>
            <param name="string2">The second string that elaborates the current event.</param>
            <param name="string3">The third string that elaborates the current event.</param>
            <param name="string4">The fourth string that elaborates the current event.</param>
            <param name="description">The description of the event.</param>
            <param name="parameters">Parameters to the description.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteMessageCreatedEvent(System.String,Belikov.GenuineChannels.Logbook.LogMessageType,System.Exception,Belikov.GenuineChannels.Messaging.Message,System.Boolean,Belikov.GenuineChannels.TransportContext.HostInformation,System.IO.Stream,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Object[])">
            <summary>
            Puts down a record representing an event describing a Message Processing event.
            </summary>
            <param name="author">The author.</param>
            <param name="type">The type of the event(Subcategory).</param>
            <param name="exception">The exception associated with the event.</param>
            <param name="message">The message associated with the event.</param>
            <param name="isSent">Whether the message is a request to the remote service (or a response from that service).</param>
            <param name="remote">The remote host participating in the event.</param>
            <param name="content">The content associated with the record.</param>
            <param name="invocationTarget">The target of the request (a null reference if it's a response).</param>
            <param name="methodName">The name of the method.</param>
            <param name="sourceThreadId">The id of the thread where the invocation was made.</param>
            <param name="sourceThreadName">The name of the thread.</param>
            <param name="transportName">The name of the transport.</param>
            <param name="connectionId">The identifier of the connection.</param>
            <param name="clssId">The identifier of the Security Session used on the connection level.</param>
            <param name="clssName">The name of the Security Session used on the connection level.</param>
            <param name="ilssId">The identifier of the Security Session used on the invocation level.</param>
            <param name="ilssName">The name of the Security Session used on the invocation level.</param>
            <param name="description">The description of the event.</param>
            <param name="parameters">Parameters to the description.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteSecuritySessionParametersEvent(System.String,Belikov.GenuineChannels.Logbook.LogMessageType,System.Exception,Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.TransportContext.HostInformation,System.Int32,System.String,Belikov.GenuineChannels.Security.SecuritySessionParameters,System.String,System.Object[])">
            <summary>
            Puts down a record representing an event connected with the specified Security Session Parameters.
            </summary>
            <param name="author">The author.</param>
            <param name="type">The type of the event(Subcategory).</param>
            <param name="exception">The exception associated with the event.</param>
            <param name="message">The message associated with the event.</param>
            <param name="remote">The remote host participating in the event.</param>
            <param name="sourceThreadId">The id of the thread where the invocation was made.</param>
            <param name="sourceThreadName">The name of the thread.</param>
            <param name="securitySessionParameters">The Security Session Parameters.</param>
            <param name="description">The description of the event.</param>
            <param name="parameters">Parameters to the description.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteHostInformationEvent(System.String,Belikov.GenuineChannels.Logbook.LogMessageType,System.Exception,Belikov.GenuineChannels.TransportContext.HostInformation,System.Int32,System.String,Belikov.GenuineChannels.Security.SecuritySession,System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Puts down detailed information about the specified instance of the HostInformation class.
            </summary>
            <param name="author">The author.</param>
            <param name="type">The type of the event(Subcategory).</param>
            <param name="exception">The exception associated with the event.</param>
            <param name="remote">The remote host participating in the event.</param>
            <param name="sourceThreadId">The id of the thread where the invocation was made.</param>
            <param name="sourceThreadName">The name of the thread.</param>
            <param name="securitySession">The Security Session.</param>
            <param name="securitySessionName">The name of the Security Session</param>
            <param name="connectionId">The connection identifier.</param>
            <param name="description">The description of the event.</param>
            <param name="parameters">Parameters to the description.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteConnectionParameterEvent(Belikov.GenuineChannels.Logbook.LogCategory,System.String,Belikov.GenuineChannels.Logbook.LogMessageType,System.Exception,Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Parameters.IParameterProvider,System.Int32,System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Puts down a record containing Connection Parameters.
            </summary>
            <param name="logCategory">The category of the event.</param>
            <param name="author">The author.</param>
            <param name="type">The type of the event(Subcategory).</param>
            <param name="exception">The exception associated with the event.</param>
            <param name="remote">The remote host participating in the event.</param>
            <param name="iParameterProvider">The connection parameters.</param>
            <param name="sourceThreadId">The id of the thread where the invocation was made.</param>
            <param name="sourceThreadName">The name of the thread.</param>
            <param name="connectionId">The identifier of the connection.</param>
            <param name="description">The description of the event.</param>
            <param name="parameters">Parameters to the description.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteTransportContentEvent(Belikov.GenuineChannels.Logbook.LogCategory,System.String,Belikov.GenuineChannels.Logbook.LogMessageType,System.Exception,Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.TransportContext.HostInformation,System.IO.Stream,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Object[])">
            <summary>
            Puts down a record describing the transport sending or receiving content actions.
            </summary>
            <param name="logCategory">The category of the event.</param>
            <param name="author">The author.</param>
            <param name="type">The type of the event(Subcategory).</param>
            <param name="exception">The exception associated with the event.</param>
            <param name="message">The message associated with the event.</param>
            <param name="remote">The remote host participating in the event.</param>
            <param name="content">The content associated with the record.</param>
            <param name="sourceThreadId">The id of the thread where the invocation was made.</param>
            <param name="sourceThreadName">The name of the thread.</param>
            <param name="connectionId">The identifier of the connection.</param>
            <param name="contentSize">The size of the content.</param>
            <param name="remoteHostAddress">The address of the remote host.</param>
            <param name="string1">The first string that elaborates the current event.</param>
            <param name="string2">The second string that elaborates the current event.</param>
            <param name="description">The description of the event.</param>
            <param name="parameters">Parameters to the description.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteBroadcastEngineEvent(Belikov.GenuineChannels.Logbook.LogCategory,System.String,Belikov.GenuineChannels.Logbook.LogMessageType,System.Exception,Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.TransportContext.HostInformation,System.IO.Stream,System.Int32,System.String,Belikov.GenuineChannels.Security.SecuritySession,System.String,System.Boolean,Belikov.GenuineChannels.BroadcastEngine.Dispatcher,Belikov.GenuineChannels.BroadcastEngine.ResultCollector,System.Boolean,Belikov.GenuineChannels.BroadcastEngine.ReceiverInfo,System.String,System.String,System.String,System.Object[])">
            <summary>
            Puts down a record describing a general Genuine Channels event.
            </summary>
            <param name="logCategory">The category of the event.</param>
            <param name="author">The author.</param>
            <param name="type">The type of the event(Subcategory).</param>
            <param name="exception">The exception associated with the event.</param>
            <param name="message">The message associated with the event.</param>
            <param name="remote">The remote host participating in the event.</param>
            <param name="content">The content associated with the record.</param>
            <param name="sourceThreadId">The id of the thread where the invocation was made.</param>
            <param name="sourceThreadName">The name of the thread.</param>
            <param name="securitySession">The Security Session.</param>
            <param name="securitySessionName">The name of the Security Session</param>
            <param name="writeDispatcherSettings">A value indicating whether it is necessary to put down broadcast dispatcher's settings.</param>
            <param name="dispatcher">The broadcast dispatcher.</param>
            <param name="resultCollector">The broadcast result collector.</param>
            <param name="writeReceiverInfoSettings">A value indicating whether it is necessary to put down information about the specified broadcast recipient.</param>
            <param name="receiverInfo">The broadcast recipient.</param>
            <param name="string1">The first string that elaborates the current event.</param>
            <param name="string2">The second string that elaborates the current event.</param>
            <param name="description">The description of the event.</param>
            <param name="parameters">Parameters to the description.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.WriteVersionInformationEvent">
            <summary>
            Puts down a record containing information about the current environment.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.BinaryLogWriter.ParseInvocationMethod(System.String,System.String)">
            <summary>
            Parses and returns the invocation target.
            </summary>
            <param name="methodName">The name of the method.</param>
            <param name="typeName">The name of the type.</param>
            <returns>The invocation target.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Logbook.BinaryRecordVersion">
            <summary>
            Enumerates all possible record versions.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.BinaryRecordVersion.GeneralRecord">
            <summary>
            General record.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.BinaryRecordVersion.ImplementationWarning">
            <summary>
            Indicates that the record contains only implementation warning fields.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.BinaryRecordVersion.MessageRecord">
            <summary>
            The record containing detailed message information.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.BinaryRecordVersion.SecuritySessionParameters">
            <summary>
            The record containing Security Session Parameters.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.BinaryRecordVersion.HostInformationInfo">
            <summary>
            The record containing Security Session Parameters.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.BinaryRecordVersion.ConnectionParametersRecord">
            <summary>
            The record containing Connection parameters.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.BinaryRecordVersion.TransportContentRecord">
            <summary>
            The record containing content sent or received.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.BinaryRecordVersion.TransportBroadcastEngineRecord">
            <summary>
            The record containing information about Broadcast Engine actions.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.BinaryRecordVersion.VersionRecord">
            <summary>
            Information about the current versions of Genuine Channels, .NET Framework, Operation System and so on.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Logbook.FileWritingStream">
            <summary>
            Implements a transactional writing to the file.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.#ctor(System.String,System.Boolean)">
            <summary>
            Constructs an instance of the FileWritingStream class.
            </summary>
            <param name="baseFileName">The base part of the file name.</param>
            <param name="addSuffixToBaseFileName">true to add suffix (date, time, and extension) to the file name.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.#ctor(System.String)">
            <summary>
            Constructs an instance of the FileWritingStream class.
            </summary>
            <param name="baseFileName">The base part of the file name.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.CheckThatCorrectFileIsOpened">
            <summary>
            Ensures that the file is opened. Opens the file if necessary.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="val">The byte to write to the stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.FileWritingStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.FileWritingStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.FileWritingStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.FileWritingStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.FileWritingStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.Close">
            <summary>
            Closes the stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.FileWritingStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Logbook.GenuineLoggingServices">
            <summary>
            Provides a set of methods allowing to set up logging objects.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.#ctor">
            <summary>
            It's a singleton.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.BinaryLogWriter">
            <summary>
            The binary log writer that puts down debug information.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to members of GenuineLoggicServices class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.GenuineLoggingServices._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.DefaultLoggingOptions">
            <summary>
            Gets a string specifying the logging options used by default.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.NameOfLoggingSES">
            <summary>
            Gets a string indicating the name of the SES Key Provider that is used for encrypting log records while
            sending them over a network.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.RemoteLogServiceObjectUri">
            <summary>
            The object URI of the service providing logging records remotely if MemoryWritingStream is used.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.LoggingSESSPName">
            <summary>
            The name of the Security Key Provider used to download log information.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.StopLogging">
            <summary>
            Stops putting down log records.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.RemoteLogService">
            <summary>
            Gets a service that provides the content of the log via .NET Remoting and DXM.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.SetUpLoggingToMemory(System.Int32,System.String)">
            <summary>
            Creates and starts a binary log writer putting records down to the memory stream, which can be obtained remotely.
            </summary>
            <param name="maximumMemorySize">The maximum possible size of memory space occupied by log records.</param>
            <param name="logOptions">The options specifying what information will be saved into the log.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.SetUpLoggingToFile(System.String,System.String)">
            <summary>
            Creates and starts a binary log writer putting records down to the specified file.
            </summary>
            <param name="baseFileName">The basic part of the file name.</param>
            <param name="logOptions">The options specifying what information will be saved into the log.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.SetUpLoggingToFile(System.String,System.String,System.Boolean)">
            <summary>
            Creates and starts a binary log writer putting records down to the specified file. The name 
            of the file will not be modified if addSuffixToBaseFileName is false.
            </summary>
            <param name="baseFileName">The basic part of the file name.</param>
            <param name="logOptions">The options specifying what information will be saved into the log.</param>
            <param name="addSuffixToBaseFileName">true to add suffix (date, time, and extension) to the file name.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.GenuineLoggingServices.SetUpLoggingOptionsFromString(Belikov.GenuineChannels.Logbook.BinaryLogWriter,System.String)">
            <summary>
            Initializes the specified BinaryLogWriter with the logging options from the specified string.
            </summary>
            <param name="binaryLogWriter">The BinaryLogWriter.</param>
            <param name="logOptions">The logging options.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Logbook.IEventLogger">
            <summary>
            The IEventLogger interface supports writing messages into event log.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.IEventLogger.BinaryLogWriter">
            <summary>
            Gets the log writer that can be used for writing debug messages.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Logbook.LogCategory">
            <summary>
            The category of the log record.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.Connection">
            <summary>
            Information about connections.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.ChannelEvent">
            <summary>
            Information about raised channel events.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.MessageProcessing">
            <summary>
            Message processing.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.ImplementationWarning">
            <summary>
            Implementation warning.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.Security">
            <summary>
            Security events.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.BroadcastEngine">
            <summary>
            A Broadcast Engine messages.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.Transport">
            <summary>
            Information which is sent by a specific transport.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.DXM">
            <summary>
            A DXM Usage message.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.HostInformation">
            <summary>
            HostInformation lifetime stages.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.AcceptingConnection">
            <summary>
            Connection accepting.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.Debugging">
            <summary>
            Debugging messages.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.Version">
            <summary>
            The version of Genuine Channels and environment.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.LowLevelTransport">
            <summary>
            The low-level transport notification.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.StatisticCounters">
            <summary>
            Represents records exposing buffer pool/thread pool usage information.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogCategory.TotalCategories">
            <summary>
            Indicates the total number of log categories.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Logbook.LogMessageType">
            <summary>
            Contains log message types (subcategories)
            that can be used to mark a similar messages generated by different entities.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.Warning">
            <summary>
            Is used to mark warnings.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.Error">
            <summary>
            Is used to mark errors.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.CriticalError">
            <summary>
            For critical errors.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ChannelEvent">
            <summary>
            The channels' event is raised.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageCreated">
            <summary>
            For messages being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageReceived">
            <summary>
            For received messages.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageRequestInvoking">
            <summary>
            The received request is being invoked.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageRequestInvoked">
            <summary>
            The invocation has been completed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SecuritySessionParametersAssembled">
            <summary>
            Assembled Security Session Parameters.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SecuritySessionApplied">
            <summary>
            For messages being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SecuritySessionHasNotBeenEstablishedYet">
            <summary>
            For messages being sent to the remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageIsSentSynchronously">
            <summary>
            The connection is available and the message is being sent.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageIsSentAsynchronously">
            <summary>
            The connection is available and the message is being sent.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageIsEnqueued">
            <summary>
            The connection is available and message is being sent.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageHasBeenDequeued">
            <summary>
            The message has been dequeued.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ExceptionDispatched">
            <summary>
            The exception is being dispatched to the caller context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageDispatched">
            <summary>
            The message is being dispatched to the caller context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.KeyProviderAssociated">
            <summary>
            A key provider has been associated with a particular name.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.KeyProviderDissociated">
            <summary>
            A key provider has been dissociated from a particular name.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SecuritySessionCreated">
            <summary>
            Security Session Created.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SecuritySessionInitiated">
            <summary>
            Security Session establishing initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SecuritySessionEstablishing">
            <summary>
            Security Session is being established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SecuritySessionKey">
            <summary>
            The security key of the Security Session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SecuritySessionEstablished">
            <summary>
            Security Session is established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SecuritySessionDestroyed">
            <summary>
            Security Session has been destroyed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.HostInformationCreated">
            <summary>
            The HostInformation has been created.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.HostInformationReleased">
            <summary>
            The HostInformation is released.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.HostInformationUriUpdated">
            <summary>
            The URI of the HostInformation is updated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.HostInformationReferencesDisassociated">
            <summary>
            The association between HostInformation and its URI and URL has been broken.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ListeningStarted">
            <summary>
            Listening a particular local end point has been started.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionAccepting">
            <summary>
            A connection is being accepted.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ListeningStopped">
            <summary>
            Listening has been stopped.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionParameters">
            <summary>
            The list of connection parameters.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionEstablishing">
            <summary>
            A connection is being established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionSecurityIsEstablished">
            <summary>
            The Connection Level Security Session is established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionEstablished">
            <summary>
            The connection has been established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionReestablishing">
            <summary>
            The connection is being reestablishing.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionReestablished">
            <summary>
            The connection is reestablished.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionStreamDesynchronization">
            <summary>
            Stream desynchronization occurred.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ReceivingStarted">
            <summary>
            Receiving has been initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ReceivingFinished">
            <summary>
            The message has been received.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.AsynchronousSendingStarted">
            <summary>
            Asynchronous sending has been started.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.AsynchronousSendingFinished">
            <summary>
            Asynchronous sending has been completed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageHasBeenSentAsynchronously">
            <summary>
            The message has been sent asynchronously.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SynchronousSendingStarted">
            <summary>
            Synchronous sending has been started.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.SynchronousSendingFinished">
            <summary>
            Synchronous sending has been finished.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.MessageHasBeenSentSynchronously">
            <summary>
            The message has been sent synchronously.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionPingSending">
            <summary>
            A ping sending has been initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionPingSent">
            <summary>
            The ping has been sent.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionPingReceived">
            <summary>
            The ping has been received.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ReleaseConnections">
            <summary>
            The connection is being released.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionShuttingDown">
            <summary>
            The connection is being shutting down.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionFailed">
            <summary>
            The connection is (being) closed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.BroadcastInvocationInitiated">
            <summary>
            The broadcast invocation has been initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.BroadcastFilterCalled">
            <summary>
            The broadcast filter is applied.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.BroadcastRecipientInvoked">
            <summary>
            The broadcast recipient is being invoked.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.BroadcastRecipientInvokedAfterTimeout">
            <summary>
            The broadcast recipient is being invoked on the second stage of broadcast.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.BroadcastResponseParsed">
            <summary>
            The response is being parsed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.BroadcastInvocationCompleted">
            <summary>
            The broadcast invocation has been finished.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.BroadcastRecipientAdded">
            <summary>
            The broadcast recipient is added.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.BroadcastRecipientRemoved">
            <summary>
            The broadcast recipient is deleted.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.DebuggingWarning">
            <summary>
            Warning about the current application state.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.DebuggingError">
            <summary>
            Error or a wrong state.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.DebuggingFailed">
            <summary>
            The try failed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.DebuggingSuccess">
            <summary>
            The try is successful.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_SyncSendingInitiating">
            <summary>
            Synchronous sending is being initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_SyncSendingInitiated">
            <summary>
            Synchronous sending has been initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_SyncSendingCompleted">
            <summary>
            Synchronous sending has been completed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_SyncReceivingInitiating">
            <summary>
            Synchronous receiving is being initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_SyncReceivingInitiated">
            <summary>
            Synchronous receiving has been initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_SyncReceivingCompleted">
            <summary>
            Synchronous receiving has been completed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_AsyncSendingInitiating">
            <summary>
            Asynchronous sending is being initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_AsyncSendingInitiated">
            <summary>
            Asynchronous sending has been initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_AsyncSendingCompleted">
            <summary>
            Asynchronous sending has been completed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_AsyncReceivingInitiating">
            <summary>
            Asynchronous receiving is being initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_AsyncReceivingInitiated">
            <summary>
            Asynchronous receiving has been initiated.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.LowLevelTransport_AsyncReceivingCompleted">
            <summary>
            Asynchronous receiving completed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ThreadPoolUsage">
            <summary>
            Statistics of the usage of the thread pool.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Logbook.LogMessageType.ConnectionSelected">
            <summary>
            The connection has been selected.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Logbook.MemoryWritingStream">
            <summary>
            Implements writing of log messages into a memory stream. The implementation will ignore all messages if the summary size of
            put messages exceed the specified boundary.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.#ctor(System.Int32)">
            <summary>
            Constructs an instance of the MemoryWritingStream class.
            </summary>
            <param name="maximumSize">The maximum size of space allocated for debugging messages.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.MemoryWritingStream.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to this instance.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.MemoryWritingStream.Enabled">
            <summary>
            Gets or sets an indication of whether the log records can be written into this instance.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.StopLogging">
            <summary>
            Stops logging and releases all memory chunks.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.CheckIfAllowedSizeExceeded">
            <summary>
            Checks whether the current record must be ignored.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="val">The byte to write to the stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.MemoryWritingStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.MemoryWritingStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.MemoryWritingStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.MemoryWritingStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.MemoryWritingStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.Close">
            <summary>
            Closes the stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.MemoryWritingStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Logbook.RemoteLogService">
            <summary>
            Implements a log service allowing to enable and disable logging and download the log records.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.RemoteLogService.#ctor(Belikov.GenuineChannels.Logbook.MemoryWritingStream)">
            <summary>
            Constructs an instance of the LogService class.
            </summary>
            <param name="memoryWritingStream">The stream containing log records.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.RemoteLogService.StopLogging">
            <summary>
            Release the currently accumulated content.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.RemoteLogService.HandleMessage(System.IO.Stream,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Sends the content of the log to the remote host.
            </summary>
            <param name="stream">The stream containing a request or a response.</param>
            <param name="sender">The remote host that sent this request.</param>
            <returns>The response.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.Logbook.RemoteLogService.Enabled">
            <summary>
            Gets or sets an indication of whether the log records can be written into this instance.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Logbook.RemoteLogService.InitializeLifetimeService">
            <summary>
            This is to insure that when created as a Singleton, the first instance never dies,
            regardless of the expired time.
            </summary>
            <returns>A null reference.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Messaging.DelimiterStream">
            <summary>
            DelimiterStream applies length constraint to the underlying stream.
            The chunk with the specified size is automatically read up to the end after this stream is closed.
            DelimiterStream does not close the underlying stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.DelimiterStream.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            Constructs an instance of the DelimiterStream class.
            </summary>
            <param name="underlyingStream">The underlying stream.</param>
            <param name="assumedLength">The size allowed to be read.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.DelimiterStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.DelimiterStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.DelimiterStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.DelimiterStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.DelimiterStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.DelimiterStream.Dispose">
            <summary>
            Completes reading from the underlying stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.DelimiterStream.Close">
            <summary>
            Closes the current stream and releases any resources associated with the current stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.DelimiterStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.DelimiterStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.DelimiterStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.DelimiterStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.DelimiterStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.DelimiterStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.DelimiterStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="val">The byte to write to the stream.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Messaging.GenuineChunkedStream">
            <summary>
            GenuineChunkedStream uses chunks from Buffer Pool and allows adding chunks and streams
            directly, without additional copying.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.#ctor">
            <summary>
            Constructs an instance of the GenuineChunkedStream class.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.#ctor(System.Boolean)">
            <summary>
            Constructs an instance of the GenuineChunkedStream class.
            </summary>
            <param name="releaseOnReadMode">Enables release-on-read mode.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.ReleaseOnReadMode">
            <summary>
            Gets or sets an indications of whether the release-on-read mode is enabled.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.Finalize">
            <summary>
            Destructor returns all allocated buffers back to the buffer pool.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineChunkedStream._disposed">
            <summary>
            Represents a value indicating whether the stream has been disposed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineChunkedStream._cloned">
            <summary>
            Represents a value indicating whether the array of chunks is shared and buffers may not be returned to Buffer Pool.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineChunkedStream._chunksAndStreams">
            <summary>
            Contains chunks/used size and streams/null in linear sequence.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineChunkedStream._length">
            <summary>
            The total size of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.Close">
            <summary>
            Closes the current stream and releases any resources associated with the current stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.AdvanceReadPointer">
            <summary>
            Advances the read pointer.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.WriteTo(System.IO.Stream)">
            <summary>
            Copies the entire content of this instance to the stream specified directly.
            Pretty fast implementation.
            </summary>
            <param name="outputStream">Stream to write content to.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.ObtainNextBuffer">
            <summary>
            Obtaines and attaches the next buffer from the buffer pool.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="val">The byte to write to the stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.WriteStream(System.IO.Stream)">
            <summary>
            Adds a stream to the current stream without copying source stream content.
            Added stream must support Length property.
            Does not add streams with zero size.
            WARNING: if a sending is failed, then stream pointer is being resetted to the very beginning of
            the stream. So the provided stream ought to be resettable.
            </summary>
            <param name="stream">Stream being attached.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.WriteBuffer(System.Byte[],System.Int32)">
            <summary>
            Adds a buffer to this stream without copying buffer content.
            </summary>
            <param name="buffer">Buffer being added.</param>
            <param name="validContentSize">The size of the valid content in the buffer or -1.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.WriteInt32AndRememberItsLocation(System.Int32,System.Byte[]@,System.Int32@)">
            <summary>
            Writes an Int32 value type content and returns its location for possible further update.
            </summary>
            <param name="number">Int32 value to write.</param>
            <param name="chunk">Chunk the value was stored at.</param>
            <param name="position">Chunk location where the value was saved.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.Dispose">
            <summary>
            Returns all chunks back to the buffer pool.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStream.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Messaging.GenuineChunkedStreamSizeLabel">
            <summary>
            Writes the difference of the length property into the provided stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStreamSizeLabel.#ctor(Belikov.GenuineChannels.Messaging.GenuineChunkedStream)">
            <summary>
            Constructs an instance of the GenuineChunkedStreamSizeLabel class.
            </summary>
            <param name="outputStream"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.GenuineChunkedStreamSizeLabel.Dispose">
            <summary>
            Updates the difference of the length property.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Messaging.GenuineMessageType">
            <summary>
            Enumerates types of messages being used by Genuine Channels solution.
            WARNING: Serialized as a byte.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineMessageType.Unknown">
            <summary>
            Unknown message types usually means incorrect incoming content.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineMessageType.Ordinary">
            <summary>
            An ordinary transport user.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineMessageType.TrueBroadcast">
            <summary>
            A message received by "true" multicast channel.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineMessageType.BroadcastEngine">
            <summary>
            Broadcast engine invocation directed to specific object.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineMessageType.RedirectLogicalChannel">
            <summary>
            Stream content should be redirected by logical channel to another remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineMessageType.ExternalStreamConsumer">
            <summary>
            Stream content will be consumed by external stream consumer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.GenuineMessageType.Custom">
            <summary>
            Don't know whether someone will need it.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Messaging.LabelledStream">
            <summary>
            Implements a stream reading labelled content from the specified source.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,System.IO.Stream,System.Byte[])">
            <summary>
            Constructs the instance of the LabelledStream class.
            </summary>
            <param name="iTransportContext">The transport context.</param>
            <param name="underlyingStream">The source stream containing labelled content.</param>
            <param name="intermediateBuffer">The intermediate buffer.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.LabelledStream.ITransportContext">
            <summary>
            The transport context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.ReadNextPortion">
            <summary>
            Synchronously reads the next network packet if it is available.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.Close">
            <summary>
            Closes the current stream and releases any resources associated with the current stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.LabelledStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.LabelledStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.LabelledStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.LabelledStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.LabelledStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="val">The byte to write to the stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.LabelledStream.Dispose">
            <summary>
            Releases acquired resources.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Messaging.Message">
            <summary>
            Represents a message being sent by Connection Manager.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.Message.#ctor">
            <summary>
            Constructs a blank instance of the Message class.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.Message.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,Belikov.GenuineChannels.TransportContext.HostInformation,System.Int32,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
            <summary>
            Constructs an instance of the Message class.
            </summary>
            <param name="iTransportContext">The Transport Context.</param>
            <param name="recipient">Recipient.</param>
            <param name="replyToId">Source id or zero.</param>
            <param name="iTransportHeaders">Transport headers.</param>
            <param name="stream">Message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.Message.#ctor(Belikov.GenuineChannels.Messaging.Message,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
            <summary>
            Constructs the response to the specified message.
            </summary>
            <param name="sourceMessage">The source message.</param>
            <param name="iTransportHeaders">The transport headers.</param>
            <param name="stream">The message content.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.TransportHeadersSenderEntryName">
            <summary>
            The name of the entry in Transport Headers that contains sender URI (channel URI).
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.TransportHeadersMbrUriName">
            <summary>
            The name of the entry in Transport Headers that contains MBR URI (receiver URI).
            Uris of the same MBR object may be different, because 
            the client can marshal already marshalled object to another URI. So 
            the server has to specify the uri it wants to receive back in the 
            response.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.TransportHeadersBroadcastSendGuid">
            <summary>
            The name of the entry in Transport Headers that contains GUID (string) 
            which is unique for each broadcast call.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.TransportHeadersBroadcastObjRefOrCourt">
            <summary>
            The name of the entry in Transport Headers that contains serialized ObjRef
            or court name.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.TransportHeadersSerializedException">
            <summary>
            The name of the entry in Transport Headers that contains serialized ObjRef
            or court name.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.TransportHeadersGenuineMessageType">
            <summary>
            The name of the entry in Transport Headers that contains the type of the message.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.TransportHeadersInvocationTarget">
            <summary>
            The name of the entry in Transport Headers that contains the target of invocation.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.TransportHeadersMethodName">
            <summary>
            The name of the entry in Transport Headers that contains the name of method being invoked.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.Message.ContainsSerializedException">
            <summary>
            Gets or sets a value indicating whether the message stream contains a serialized 
            exception to be dispatched to the sender.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.TransportHeaderName_RemoteObjectUri">
            <summary>
            The name of the header containing destination object uri.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.GenuineMessageType">
            <summary>
            The type of the message.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.MessageId">
            <summary>
            Each message has unique positive 32-bit number.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.IsOneWay">
            <summary>
            True if this message is one-way.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.ReplyToId">
            <summary>
            The message id this message replies to.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.ITransportHeaders">
            <summary>
            Message transport headers.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.Stream">
            <summary>
            The content of the message.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.EffectiveMessageSize">
            <summary>
            The effective size of the message in bytes.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.SerializedContent">
            <summary>
            Final content that will be sent by the transport.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.ConnectionLevelSecuritySession">
            <summary>
            Connection Level Security Session Parameters.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.SecuritySessionParameters">
            <summary>
            The Security Session being used on the Invocation Level.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.DestinationMarshalByRef">
            <summary>
            The target object for broadcast sending.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.Tag">
            <summary>
            The object that contains information about this message.
            Is used by Direct Exchange Manager only.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.ConnectionInfo">
            <summary>
            The connection associated with this message.
            Is used by Shared Memory and GXHTTP Connection Managers.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.IMessage">
            <summary>
            Source IMessage object.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.HttpServerRequestResult">
            <summary>
            The HTTP request the message was received through.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.HasBeenAsnwered">
            <summary>
            A boolean value indicating whether this request has been answered.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.ITransportContext">
            <summary>
            Transport Context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.Sender">
            <summary>
            Information about message sender.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.Recipient">
            <summary>
            Wellknown object or channel GUID which is supposed to receive the message.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.Message.FinishTime">
            <summary>
            Specifies the moment when the request times out.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.Message.FinishTime_Initialized">
            <summary>
            Indicates whether the FinishTime instance field was initialized.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.ConnectionName">
            <summary>
            The connection name. Is used to direct the message to a particular connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.IsSynchronous">
            <summary>
            True if the sending is synchronous.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.IsResendAfterFail">
            <summary>
            Whether to re-send the message again if a connection was broken.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.ConnectionAvailable">
            <summary>
            Is set when a connection is available.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.CancelSending">
            <summary>
            Indicates whether the seding should be cancelled and the specified exception
            should be dispatched instead.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.SyncWaitException">
            <summary>
            Contains an exception if connection is not available.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.Message.IsValid">
            <summary>
            Indicates whether the thread still awaits for the connection.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.Message.SeqNo">
            <summary>
            The sequence unique number of the current instance. Is used in debugging and diagnostic purposes only.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.Message.CreateOutcomingMessage(Belikov.GenuineChannels.TransportContext.ITransportContext,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Boolean)">
            <summary>
            Makes message up from the IMessage.
            </summary>
            <param name="iTransportContext">The Transport Context.</param>
            <param name="iMessage">IMessage to make the message up from.</param>
            <param name="iTransportHeaders">Trasport headers.</param>
            <param name="stream">Message body.</param>
            <param name="isSynchronous">True if the invocation is synchronous.</param>
            <returns>An instance of the Message class.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.Message.Dispose">
            <summary>
            Releases all memory resources.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.Message.ToString">
            <summary>
            Returns a string that represents the current Object.
            </summary>
            <returns>A string that represents the current Object.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Messaging.MessageCoder">
            <summary>
            Utility class that contains several packing algorithms.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageCoder.#ctor">
            <summary>
            Prevents from creating instances of this class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageCoder.COMMAND_MAGIC_CODE">
            <summary>
            Magic code to check remote channel.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageCoder.Serialize(Belikov.GenuineChannels.Messaging.GenuineChunkedStream,Belikov.GenuineChannels.Messaging.Message,System.Boolean)">
            <summary>
            Serializes a message to the GenuineChunkedStream stream.
            </summary>
            <param name="stream">Stream to serialize the message to.</param>
            <param name="message">The message being serialized.</param>
            <param name="compress">Indicates whether content should be compressed.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageCoder.Deserialize(System.IO.Stream,System.String)">
            <summary>
            Deserializes the message from the stream.
            Automatically decompress a message if it was compressed.
            </summary>
            <param name="stream">The source stream.</param>
            <param name="securitySessionName">The name of the Security Session.</param>
            <returns>Deserialized message.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageCoder.ReadInt32(System.Byte[],System.Int32)">
            <summary>
            This operation helps fetching Int32 value without constructing BinaryReader object.
            </summary>
            <param name="content">Buffer to fetch Int32 from.</param>
            <param name="position">Position.</param>
            <returns>Fetched value.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageCoder.WriteInt32(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes Int32 value to the buffer.
            </summary>
            <param name="content">Buffer to write Int32 to.</param>
            <param name="position">Position.</param>
            <param name="val">Value to save.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageCoder.PROTOCOL_VERSION">
            <summary>
            Protocol version for the release 2.5.0.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageCoder.SerializeConnectionHeader(System.Byte,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.String)">
            <summary>
            Returns a stream containing version of the using protocol and type of the connection being established.
            </summary>
            <param name="protocolVersion">The version of the protocol.</param>
            <param name="genuineConnectionType">Type of the connection.</param>
            <param name="connectionId">The identifier of the connection.</param>
            <returns>BinaryWriter containing a stream with serialized data.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageCoder.DeserializeConnectionHeader(System.IO.BinaryReader,System.Byte@,Belikov.GenuineChannels.Connection.GenuineConnectionType@,System.String@)">
            <summary>
            Analyzes the version of the requested protocol and reads type of the connection.
            Throws OperationException on any errors.
            </summary>
            <param name="binaryReader">BinaryReader created on the stream with data.</param>
            <param name="protocolVersion">The version of the protocol.</param>
            <param name="genuineConnectionType">Read type of the connection.</param>
            <param name="connectionId">The connection identifier.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageCoder.LABEL_HEADER_SIZE">
            <summary>
            The size of the label in the labelled stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageCoder.WriteLabelledStream(System.IO.Stream,Belikov.GenuineChannels.Messaging.GenuineChunkedStream,System.IO.BinaryWriter,System.Byte[])">
            <summary>
            Copies the input stream to the output stream with intermediate size labels.
            </summary>
            <param name="inputStream">The source stream.</param>
            <param name="outputStream">The destination stream.</param>
            <param name="writer">The writer created on destination stream.</param>
            <param name="intermediateBuffer">The intermediate buffer.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageCoder.FillInLabelledStream(Belikov.GenuineChannels.Messaging.Message,Belikov.GenuineChannels.Messaging.MessageContainer,System.Collections.ArrayList,Belikov.GenuineChannels.Messaging.GenuineChunkedStream,System.Byte[],System.Int32)">
            <summary>
            Fills in the provided stream with the specified messages that the total size as close to the recommended size as possible.
            </summary>
            <param name="message">The message.</param>
            <param name="messageContainer">Accumulated messages or a null reference.</param>
            <param name="packedMessages">This instance will contain all packed messages after this function completes.</param>
            <param name="resultContent">The filled stream.</param>
            <param name="intermediateBuffer">The intermediate buffer.</param>
            <param name="recommendedSize">The recommended size.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Messaging.MessageContainer">
            <summary>
            MessageContainer manages the set of the messages.
            WARNING: it doesn't dispose any messages automatically!
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageContainer.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the MessageContainer class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageContainer._queue">
            <summary>
            The queue containing messages being sent.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.MessageContainer.IsMessageAvailable">
            <summary>
            Gets an indication whether a message is available for sending.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageContainer._iTransportContext">
            <summary>
            The Transport Context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageContainer._currentTotalSize">
            <summary>
            The total size of all messages in bytes.
            Does not include messages from _queueWithFailedMessages queue.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageContainer._currentTotalMessages">
            <summary>
            The total number of registered messages (including synchronous messages).
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageContainer._maxContentSize">
            <summary>
            The maximum allowable size of a message.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageContainer._maxQueuedItems">
            <summary>
            The maximum number of items in the queue.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageContainer._maxTotalSize">
            <summary>
            The maximum summary size of all messages in the queue.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Messaging.MessageContainer._noSizeChecking">
            <summary>
            Represents a value indicating whether to cancel message size checking.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageContainer.UnregisterSyncMessage(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Decreases all queue counters according to the provided message.
            WARNING: Releases all message resoruces.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageContainer.AddMessage(Belikov.GenuineChannels.Messaging.Message,System.Boolean)">
            <summary>
            Increases all queue counters according to the provided message and 
            puts a message into the queue.
            </summary>
            <param name="message">The message being put into the queue.</param>
            <param name="onlyCheckIn">Check the message in without adding it to any queues.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageContainer.GetMessage">
            <summary>
            Exludes the message from the queue.
            </summary>
            <returns>The message or a null reference.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageContainer.Dispose(System.Exception)">
            <summary>
            Releases all messages.
            </summary>
            <param name="reason">Exception that causes disposing.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Messaging.MessageList">
            <summary>
            Manages a FIFO list of messages with the specified size.
            Is used by GTCP channel for sending synchronous messages with guaranteed delivery.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageList.#ctor(System.Int32)">
            <summary>
            Constructs an instance of the MessageList class.
            </summary>
            <param name="size">The size of the list.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageList.PutMessage(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Puts the message into the message list.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageList.MoveMessages(Belikov.GenuineChannels.Messaging.MessageContainer)">
            <summary>
            Transfers registered messages to the message container.
            </summary>
            <param name="messageContainer">The Message Containter.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.MessageList.ReleaseAllMessages">
            <summary>
            Releases all messages.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Messaging.NonClosableStream">
            <summary>
            Prevents the underlying stream from closing.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.NonClosableStream.#ctor(System.IO.Stream)">
            <summary>
            Constructs an instance of the NonClosableStream class.
            </summary>
            <param name="underlyingStream">The underlying stream.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.NonClosableStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.NonClosableStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.NonClosableStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.NonClosableStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Messaging.NonClosableStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.NonClosableStream.Close">
            <summary>
            Does not close the underlying stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.NonClosableStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.NonClosableStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.NonClosableStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.NonClosableStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.NonClosableStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.NonClosableStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Messaging.NonClosableStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="val">The byte to write to the stream.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.OperationErrorMessage">
            <summary>
            OperationErrorMessage represents an error fired by Genuine Channels solution.
            It contains a user friendly error string and an error identifier.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.OperationErrorMessage.#ctor">
            <summary>
            For XML serialization.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.OperationErrorMessage.#ctor(System.String,System.String)">
            <summary>
            The server-side constructor.
            </summary>
            <param name="errorIdentifier"></param>
            <param name="userFriendlyMessage"></param>
        </member>
        <member name="F:Belikov.GenuineChannels.OperationErrorMessage.ErrorIdentifier">
            <summary>
            Provides error identifier that can be used to recognize standard or predefined errors on
            the client side and output the message in regard to circumstances.
            It should look like: AssemblyFullPath.BusinessObject.Action.Error.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.OperationErrorMessage.UserFriendlyMessage">
            <summary>
            The error string that can be shown to a user to explain the failure.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.OperationException">
            <summary>
            OperationException is an exception that contains OperationErrorMessage.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.OperationException.OperationErrorMessage">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.OperationException.#ctor(Belikov.GenuineChannels.OperationErrorMessage)">
            <summary>
            Contructs an instance of the OperationException.
            </summary>
            <param name="operationErrorMessage">The error message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.OperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the OperationException class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.OperationException.WrapException(System.Exception)">
            <summary>
            Builds an instance of the OperationException class over the provided exception.
            </summary>
            <param name="exception">The source exception.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.OperationException.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.OperationException.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructs a new instance of the OperationException class.
            </summary>
            <param name="objToFetchTypeFrom">If object is Type, then its FullName will be taken as an errorIdentifier start substring. Otherwise GetType() operation will be executed first to fetch Type object.</param>
            <param name="errorSubIdentifier">ErrorSubIdentifier being added to the end of the object's type FullName.</param>
            <param name="userFriendlyMessage">User friendly message that can be shown to an end-user.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.OperationException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.OperationException.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.OperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo with information about the exception.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Parameters.DefaultParameterProvider">
            <summary>
            Provides a parameter provider with default values of the parameters.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Parameters.DefaultParameterProvider.#ctor">
            <summary>
            Initializes parameter array with default values.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.DefaultParameterProvider._readParameters">
            <summary>
            Read parameters.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Parameters.DefaultParameterProvider.Item(Belikov.GenuineChannels.Parameters.GenuineParameter)">
            <summary>
            Gets a parameter's value.
            </summary>
            <param name="genuineParameter">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Parameters.GenuineParameter">
            <summary>
            Enumerates all parameters used in Genuine Channel solution.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.MaxContentSize">
            <summary>
            [INT] The maximum size of the content being sent at once.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.MaxQueuedItems">
            <summary>
            [INT] The maximum number of items stored in a queue.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.MaxTotalSize">
            <summary>
            [INT] The maximum summary size of all messages stored in a queue.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.NoSizeChecking">
            <summary>
            [BOOL] Cancels message size checking. As a result, Genuine Channels message engine does
            not check the size of the stream and this increases performance for messages containing
            streams without Stream.Length property support (no exceptions are thrown and caught).
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.Compression">
            <summary>
            [BOOL] Whether to enable a Security Session with compression at the channel level.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.InvocationTimeout">
            <summary>
            [TimeSpan] The message timeout. An exception will be dispatched to the invocation context
            if a response to the message is not received within time period specified by this value.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.SyncResponses">
            <summary>
            [BOOL] Indicates whether to force synchronous mode for delivering all responses.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.ConnectTimeout">
            <summary>
            [TimeSpan] The maximum time span to establish or accept a connection.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.SecuritySessionForPersistentConnections">
            <summary>
            [STR] The name of the key provider to create a Security Session used at the connection level.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.SecuritySessionForNamedConnections">
            <summary>
            [STR] The name of the key provider to create a Security Session used at the connection level.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.SecuritySessionForInvocationConnections">
            <summary>
            [STR] The name of the key provider to create a Security Session used at the connection level.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.ClosePersistentConnectionAfterInactivity">
            <summary>
            [TimeSpan] The time span value to close opened or accepted persistent connections after this period of inactivity.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.CloseNamedConnectionAfterInactivity">
            <summary>
            [TimeSpan] The time span value to close opened or accepted named connections after this period of inactivity. TimeSpan.Zero value means immediate connection closing after receiving a response.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.CloseInvocationConnectionAfterInactivity">
            <summary>
            [TimeSpan] The time span value to close opened or accepted invocation connections after this period of inactivity. TimeSpan.Zero value means immediate connection closing after receiving a response.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.CloseOneWayConnectionAfterInactivity">
            <summary>
            [TimeSpan] The time span value to close opened or accepted one-way connection after, doesn't matter whether something is being sent or received through it.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.PersistentConnectionSendPingAfterInactivity">
            <summary>
            [TimeSpan] An empty message (6 byte) is sent to the remote host if there were no messages sent to the remote host within this time span.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.MaxTimeSpanToReconnect">
            <summary>
            [TimeSpan] The time span before considering the persistent connection to be broken if it wasn't reestablished.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.ReconnectionTries">
            <summary>
            [INT] The maximum number of reconnection tries before declaring a connection to be closed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.SleepBetweenReconnections">
            <summary>
            [TimeSpan] Time span to sleep for after each reconnection failure.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.TcpMaxSendSize">
            <summary>
            [INT] The maximum size of packet being sent at once.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.TcpReadRequestBeforeProcessing">
            <summary>
            [BOOL] Indicates whether a connection manager should read the entire incoming request 
            into an intermediate storage before processing. This leads to increased memory 
            comsuption and reduced performance.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.TcpDoNotResendMessages">
            <summary>
            [BOOL] Represents a value indicating whether the synchronous message is to be resent if a connection
            is reestablished.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.TcpDisableNagling">
            <summary>
            [BOOL] Represents a value indicating whether the GTCP Connection Manager must disable naggling for opened and accepted connections.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.TcpPreventDelayedAck">
            <summary>
            [BOOL] Represents a value indicating whether the GTCP Connection Manager must send short messages to the server in order to prevent delayed acknowledgement.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.TcpReceiveBufferSize">
            <summary>
            [INT] Specifies the size of the receive buffer of the TCP socket.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.TcpSendBufferSize">
            <summary>
            [INT] Specifies the size of the send buffer of the TCP socket.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.TcpReuseAddressPort">
            <summary>
            [BOOL] Indicates whether to use TCP port sharing. If set the listener port will be shared (other apps can use the same one).
            In this case the socket option <seealso cref="F:System.Net.Sockets.SocketOptionName.ReuseAddress"/> will be applied.
            Default value is false.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.TcpDualSocketMode">
            <summary>
            [BOOL] The TCP dual socket mode will enable both IPv4 and IPv6 for the socket listener (Vista and Longhorn above only).
            This will be true by default. If you like to force IPv4 or IPv6 listening only, set this option to false.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.SMShareSize">
            <summary>
            [INT] Size of the share in bytes.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.SMSendTimeout">
            <summary>
            [TimeSpan] The maximum time span within which the message must be completely received by a remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.SMSessionLocal">
            <summary>
            [BOOL] Represents a value indicating whether the GShMem channel must use session-local objects.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.UdpJoinTo">
            <summary>
            [String] The address to join the multicast socket to. For example, 227.37.37.37.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.UdpTtl">
            <summary>
            [INT] TTL of IP packets.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.UdpReceiveBuffer">
            <summary>
            [INT] Socket's low water mark specifying the size of the receive buffer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.UdpPacketSize">
            <summary>
            [INT] The maximum size of a packet.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.UdpMtu">
            <summary>
            [INT] The maximum possible size of the packet.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.UdpMulticastTo">
            <summary>
            [String] The network to direct the IGMP packets to. For example, gbudp://227.37.37.37:11000.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.UdpAssembleTimeSpan">
            <summary>
            [TimeSpan] The time period to accumulate the incoming stream. If all packets aren't received within this time span, the message is lost.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpProxyUri">
            <summary>
            [String] The uri of the proxy.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpWebUserAgent">
            <summary>
            [String] The name of the web user agent.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpAuthUserName">
            <summary>
            [String] The user name associated with the credentials.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpAuthPassword">
            <summary>
            [String] The password for the user associated with the credentials.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpAuthDomain">
            <summary>
            [String] The domain associated with the credentials.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpAuthCredential">
            <summary>
            [NetworkCredential] The network credential provided for HTTP authentication.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpUseGlobalProxy">
            <summary>
            [BOOL] Indicates whether to use proxy server specified by GlobalProxySelection.Select property value.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpBypassOnLocal">
            <summary>
            [BOOL] Indicates the state of the WebProxy.BypassProxyOnLocal property.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpUseDefaultCredentials">
            <summary>
            [BOOL] Indicates if it is necessary to use the default credential.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpAllowWriteStreamBuffering">
            <summary>
            [BOOL] Indicates if it is necessary to enable the write stream buffering.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpUnsafeConnectionSharing">
            <summary>
            [BOOL] Framework 1.1 only option allowing to enable high-speed NTLM-authenticated connection sharing.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpRecommendedPacketSize">
            <summary>
            [INT] The size of the recommended HTTP request sent to the server at a time. Http client connection manager stops adding messages to the request as soon as its size exceeds this value.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpKeepAlive">
            <summary>
            [BOOL] Enables or disables HTTP keep-alive connection mode (HTTP 1.1 only). It is highly recommended to specify the true value always.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpAuthentication">
            <summary>
            [BOOL] Enables or disables security context impersonation if HTTP Basic or Integrated Windows authentication is used.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpStoreAndProvideHttpContext">
            <summary>
            [BOOL] Enables or disables the storing and providing HttpContext during invocations processed by GHTTP server channel hosted inside IIS.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpWebRequestInitiationTimeout">
            <summary>
            [TimeSpan] Defines the maximum time period of WebRequest initialization.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpAsynchronousRequestTimeout">
            <summary>
            [TimeSpan] Defines the maximum period of time taken by an asynchronous I/O operation.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HttpMimeMediaType">
            <summary>
            [String] The MIME Media type of the request.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.XHttpReadHttpMessageTimeout">
            <summary>
            [TimeSpan] Specifies the maximum period of time within which an entire HTTP message must be processed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.HoldThreadDuringSecuritySessionEstablishing">
            <summary>
            [BOOL] If true, Connection Manager will hold on a separate thread for establishing
            Security Session by means of synchronous messages.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.EnableGlobalLoggingToMemory">
            <summary>
            [INT] Creates and starts a log record writer that writes records into MemoryWritingStream.
            The value of this parameter determines the maximum possible amount of memory occupied by log records.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.EnableGlobalLoggingToFile">
            <summary>
            [STR] Creates and starts a log writer that writes log records into the specified file.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.LoggingParameters">
            <summary>
            [STR] Specifies what logging records will be written.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.CompatibilityLevel">
            <summary>
            [INT] The level of compatibility determines what features will be used.
            0 means that 2.4.x clients are supported.
            1 means that only 2.5.x clients are supported.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.GenuineParameter.LastParameter">
            <summary>
            Indicates number of parameters.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Parameters.IParameterProvider">
            <summary>
            Represents a way to get specific channel's or transport's parameter value quickly.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Parameters.IParameterProvider.Item(Belikov.GenuineChannels.Parameters.GenuineParameter)">
            <summary>
            Gets a parameter's value.
            </summary>
            <param name="genuineParameter">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Parameters.ReadingCascadeParameterProvider">
            <summary>
            Provides a set of parameters read from the dictionary.
            Missing parameters are got from the underlying IParameterProvider provider.
            Does not cache missing parameters.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Parameters.ReadingCascadeParameterProvider.#ctor(System.Collections.IDictionary,Belikov.GenuineChannels.Parameters.IParameterProvider)">
            <summary>
            Initializes parameters from the provided dictionary.
            </summary>
            <param name="parameters">A dictionary containing parameters to be read.</param>
            <param name="underlyingProvider">Underlying parameter provider.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Parameters.ReadingCascadeParameterProvider.UnderlyingProvider">
            <summary>
            Underlying transport parameters.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Parameters.ReadingCascadeParameterProvider._readParameters">
            <summary>
            Read parameters.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Parameters.ReadingCascadeParameterProvider.Item(Belikov.GenuineChannels.Parameters.GenuineParameter)">
            <summary>
            Gets a parameter's value.
            </summary>
            <param name="genuineParameter">The name of the parameter.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler">
            <summary>
            Manages a number of message handlers processing incoming messages:
            wait cells, multiple response catchers, custom stream handlers,
            broadcast court interceptors, IClientChannelSinks and
            sync response catchers.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext,Belikov.GenuineChannels.Receiving.ITransportUser)">
            <summary>
            Constructs an instance of the GenuineReceivingHandler class.
            </summary>
            <param name="iTransportContext">Transport context.</param>
            <param name="defaultTransportUser">Default transport user.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler._waitCallback_InternalExecuteMessagewaitCallback">
            <summary>
            Callback invoking InternalExecuteMessage method.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.ITransportContext">
            <summary>
            Transport Context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.DefaultTransportUser">
            <summary>
            The default transport user.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.PING_MESSAGE_REPLYID">
            <summary>
            All messages with such reply id will be ignored.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.HandleMessage(System.IO.Stream,Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.String,System.Int32,System.Boolean,Belikov.GenuineChannels.Receiving.IMessageRegistrator,Belikov.GenuineChannels.Security.SecuritySession,Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult)">
            <summary>
            Processes incoming requests and responses.
            </summary>
            <param name="stream">The stream containing a request or a response.</param>
            <param name="remote">The remote host.</param>
            <param name="genuineConnectionType">The type of the connection.</param>
            <param name="connectionName">Connection id to send a response through.</param>
            <param name="dbgConnectionId">The identifier of the connection, which is used for debugging purposes only.</param>
            <param name="useThisThread">True to invoke the target in the current thread.</param>
            <param name="iMessageRegistrator">The message registrator.</param>
            <param name="connectionLevelSecuritySession">Connection Level Security Session.</param>
            <param name="httpServerRequestResult">The HTTP request through which the message was received.</param>
            <returns>True if it's a one-way message.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.InternalExecuteMessage(System.Object)">
            <summary>
            Processes the message.
            </summary>
            <param name="messageAsObject">An instance of the Message class.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.HandleMessage_AfterCLSS(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Processes the message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.HandleMessage_Final(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Invokes the target or dispatches the response according to message content.
            Throws the exception on any errors.
            </summary>
            <param name="message">The message being processed.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.PutDownRecordAboutResponseCreation(Belikov.GenuineChannels.Logbook.BinaryLogWriter,Belikov.GenuineChannels.Messaging.Message,System.Runtime.Remoting.Messaging.IMessage,System.String,System.Object[])">
            <summary>
            Puts down a record describing the creation of the response message.
            </summary>
            <param name="binaryLogWriter">The binary log writer.</param>
            <param name="reply">The response message.</param>
            <param name="ret">The response.</param>
            <param name="message">The text of the message.</param>
            <param name="parameters">Parameters to the message text.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.CreateResponseToBroadcastMessage(Belikov.GenuineChannels.Messaging.Message,System.Object,System.Runtime.Serialization.Formatters.Binary.BinaryFormatter)">
            <summary>
            Packs and returns a message that contains back response to the broadcast message.
            </summary>
            <param name="message">The source message.</param>
            <param name="returnMessage">IMethodReturnMessage response.</param>
            <param name="binaryFormatter">Just to prevent creating addition instance.</param>
            <returns>The reply message.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler._responseHandlers">
            <summary>
            Contains a set of response handlers awaiting for the messages with the specific
            reply id.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.RegisterResponseProcessor(System.Int32,Belikov.GenuineChannels.Receiving.IResponseProcessor)">
            <summary>
            Registers a response processor that waits for messages containing a response to the
            message with the specified identifier.
            </summary>
            <param name="replyId">ID of the source message.</param>
            <param name="iResponseProcessor">A response processor instance.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.IsHandlerAlive(System.Int32)">
            <summary>
            True if there is a handler awaiting for the response to the message with the specified id.
            </summary>
            <param name="replyId">The id of the source message.</param>
            <returns>True if there is a handler awaiting for the response to the message with the specified id.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler._transportUsers">
            <summary>
            Keeps a set of associative links between strings and transport users.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.RegisterTransportUser(System.String,Belikov.GenuineChannels.Receiving.ITransportUser)">
            <summary>
            Associates the specified transport user with the specified name.
            </summary>
            <param name="name">The name to associate the transport user with.</param>
            <param name="transportUser">The transport user.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.DispatchException(Belikov.GenuineChannels.TransportContext.HostInformation,System.Exception)">
            <summary>
            Dispatches the exception to all response processors awaiting something from the specific remote host.
            </summary>
            <param name="hostInformation">The remote host.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.DispatchException(Belikov.GenuineChannels.Messaging.Message,System.Exception)">
            <summary>
            Dispatches the exception to the response processor specified by the replyId value.
            </summary>
            <param name="sourceMessage">The source message.</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.GenuineReceivingHandler.TimerCallback">
            <summary>
            Invokes ScanForExpiredHandlers method in the separate thread.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Receiving.IIncomingStreamHandler">
            <summary>
            Provides means to read incoming requests and responses and informs the consumer about
            transport and security problems and timeouts.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IIncomingStreamHandler.HandleMessage(System.IO.Stream,Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.String,System.Int32,System.Boolean,Belikov.GenuineChannels.Receiving.IMessageRegistrator,Belikov.GenuineChannels.Security.SecuritySession,Belikov.GenuineChannels.GenuineHttp.HttpServerRequestResult)">
            <summary>
            Processes incoming requests and responses.
            Automatically closes the provided stream after using.
            </summary>
            <param name="stream">The stream containing a request or a response.</param>
            <param name="remote">The remote host.</param>
            <param name="genuineConnectionType">Type of the connection.</param>
            <param name="connectionName">Connection id to send a response through.</param>
            <param name="dbgConnectionId">The identifier of the connection, which is used for debugging purposes only.</param>
            <param name="useThisThread">True to invoke the target in the current thread.</param>
            <param name="iMessageRegistrator">The message registrator.</param>
            <param name="connectionLevelSecuritySession">Connection Level Security Session.</param>
            <param name="httpServerRequestResult">The HTTP request through which the message was received.</param>
            <returns>True if it was a one-way message.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IIncomingStreamHandler.HandleMessage_AfterCLSS(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Invokes the target or dispatches the response according to message content.
            Throws exception on any errors.
            </summary>
            <param name="message">The message being processed.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IIncomingStreamHandler.HandleMessage_Final(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Invokes the target or dispatches the response according to message content.
            Throws exception on any errors.
            </summary>
            <param name="message">The message being processed.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IIncomingStreamHandler.DispatchException(Belikov.GenuineChannels.TransportContext.HostInformation,System.Exception)">
            <summary>
            Dispatches the exception to all response processors awaiting something from the specific remote host.
            </summary>
            <param name="hostInformation">The remote host.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IIncomingStreamHandler.DispatchException(Belikov.GenuineChannels.Messaging.Message,System.Exception)">
            <summary>
            Dispatches the exception to a response processor specified by the replyId value.
            </summary>
            <param name="sourceMessage">The source message id.</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IIncomingStreamHandler.RegisterResponseProcessor(System.Int32,Belikov.GenuineChannels.Receiving.IResponseProcessor)">
            <summary>
            Registers a response processor that waits for messages containing a response to the 
            message with the specified identifier.
            </summary>
            <param name="replyId">ID of the source message.</param>
            <param name="iResponseProcessor">A response processor instance.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IIncomingStreamHandler.IsHandlerAlive(System.Int32)">
            <summary>
            True if there is a handler awaiting for the response to the message with the specified id.
            </summary>
            <param name="replyId">The id of the source message.</param>
            <returns>True if there is a handler awaiting for the response to the message with the specified id.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IIncomingStreamHandler.RegisterTransportUser(System.String,Belikov.GenuineChannels.Receiving.ITransportUser)">
            <summary>
            Associates the specified transport user with the specified name.
            </summary>
            <param name="name">The name to associate the transport user with.</param>
            <param name="transportUser">The transport user.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Receiving.IMessageRegistrator">
            <summary>
            Provides a method to keep track of already processed messages.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IMessageRegistrator.WasRegistered(System.String,System.Int32,System.Int32)">
            <summary>
            Checks whether this message was processed before.
            </summary>
            <param name="uri">The uri of the remote host.</param>
            <param name="messageId">The message identifier.</param>
            <param name="replyId">The identifier of the response.</param>
            <returns>True if the message was processed before.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Receiving.IResponseProcessor">
            <summary>
            Describes a role of a message processor that processes incoming messages.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IResponseProcessor.ProcessRespose(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Directs the message to the message receiver.
            </summary>
            <param name="message">The response.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IResponseProcessor.DispatchException(System.Object)">
            <summary>
            An exception occurred during processing.
            </summary>
            <param name="exceptionAsObject">Error reason.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.IResponseProcessor.IsExpired(System.Int32)">
            <summary>
            Indicates whether this message processor still waits for the response/responses.
            </summary>
            <param name="now">The current time elapsed since the system started.</param>
            <returns>True if the message processor still waits for the response.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.Receiving.IResponseProcessor.Remote">
            <summary>
            Gets the uri of the remote host expected to send a response.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Receiving.IResponseProcessor.IsShortInProcessing">
            <summary>
            Gets an indication whether the response processor does not require a separate thread for processing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Receiving.IResponseProcessor.Message">
            <summary>
            Gets the initial message for which the response is expected. Is used only for debugging purposes to track down
            the source message.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Receiving.ITransportUser">
            <summary>
            Represents the entity consuming transport's services.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.ITransportUser.HandleMessage(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Handles an incoming message delivered by the transport.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Receiving.MessageRegistratorWithLimitedQuantity">
            <summary>
            Implements a message registrator which remembers several last messages.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.MessageRegistratorWithLimitedQuantity.#ctor(System.Int32)">
            <summary>
            Constructs an instance of the MessageRegistratorWithLimitedQuantity class.
            </summary>
            <param name="capacity">The number of elements that this instance is capable of storing.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.MessageRegistratorWithLimitedQuantity.WasRegistered(System.String,System.Int32,System.Int32)">
            <summary>
            Checks whether this message was processed before.
            </summary>
            <param name="uri">The uri of the remote host.</param>
            <param name="messageId">The message identifier.</param>
            <param name="replyId">The identifier of the response.</param>
            <returns>True if message was processed before.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Receiving.MessageRegistratorWithLimitedTime">
            <summary>
            Implements a message registrator which remembers all messages during specified period of time.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.MessageRegistratorWithLimitedTime.#ctor">
            <summary>
            Constructs an instance of the MessageRegistratorWithLimitedTime class.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Receiving.MessageRegistratorWithLimitedTime.WasRegistered(System.String,System.Int32,System.Int32)">
            <summary>
            Checks whether this message was processed before.
            </summary>
            <param name="uri">The uri of the remote host.</param>
            <param name="messageId">The message identifier.</param>
            <param name="replyId">The identifier of the response.</param>
            <returns>True if message was processed before.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.FinishReadingStream">
            <summary>
            Automatically finishes reading the specified chunk of data.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.FinishReadingStream.#ctor(System.IO.Stream)">
            <summary>
            Constructs an instance of the FinishReadingStream class.
            </summary>
            <param name="underlyingStream">The underlying stream.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.FinishReadingStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.FinishReadingStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.FinishReadingStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.FinishReadingStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.FinishReadingStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.FinishReadingStream.Close">
            <summary>
            Does not close the underlying stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.FinishReadingStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.FinishReadingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.FinishReadingStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.FinishReadingStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.FinishReadingStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.FinishReadingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.FinishReadingStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="val">The byte to write to the stream.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.IKeyProvider">
            <summary>
            Abstract factory that spawns security contexts.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.IKeyProvider.CreateSecuritySession(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Creates a Security Session.
            </summary>
            <param name="name">The name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <returns>Created Security Session.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.IKeyStore">
            <summary>
            Manages a set of key providers creating Security Sessions.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.IKeyStore.GetKey(System.String)">
            <summary>
            Gets a key provider.
            </summary>
            <param name="name">The name of key provider.</param>
            <returns>Created key provider.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.IKeyStore.SetKey(System.String,Belikov.GenuineChannels.Security.IKeyProvider)">
            <summary>
            Assign a key provider for the specific Security Session name.
            </summary>
            <param name="name">The name of Security Context.</param>
            <param name="iKeyProvider">The key provider.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ISetSecuritySession">
            <summary>
            An interface allowing to specify the name of default Security Session in the specific context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ISetSecuritySession.SecuritySessionParameters">
            <summary>
            Gets or sets the Security Session used in this context.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.KeyProvider_Basic">
            <summary>
            Establishes a simple connection without security context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyProvider_Basic.#ctor">
            <summary>
            Constructs an instance of the KeyProvider_Basic class.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyProvider_Basic.CreateSecuritySession(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Creates SecuritySession which will perform all traffic processing in
            specific security context.
            </summary>
            <param name="name">Name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <returns>SecuritySession that will perform all traffic processing that is performed in specific security context.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyProvider_Basic.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.KeyProvider_KnownSymmetric">
            <summary>
            KeyProvider_KnownSymmetric spawns security contexts that use given symmetric
            cryptographic algorithm for traffic encryption.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyProvider_KnownSymmetric.#ctor(System.Security.Cryptography.SymmetricAlgorithm)">
            <summary>
            Initializes an instance of the KeyProvider_KnownSymmetric class.
            </summary>
            <param name="symmetricAlgorithm">SymmetricAlgorithm to be used.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.KeyProvider_KnownSymmetric.SymmetricAlgorithm">
            <summary>
            SymmetricAlgorithm that will be used during traffic encryption.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyProvider_KnownSymmetric.CreateSecuritySession(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Creates SecuritySession which will perform all traffic processing in
            the specific security context.
            </summary>
            <param name="name">The name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <returns>SecuritySession that will perform all traffic processing that is performed in specific security context.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyProvider_KnownSymmetric.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A String that represents the current instance.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.KeyProvider_SelfEstablishingSymmetric">
            <summary>
            Represents a Key Provider, which spawns SecuritySession_SelfEstablishingSymmetric Security Sessions.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyProvider_SelfEstablishingSymmetric.#ctor">
            <summary>
            Constructs an instance of the KeyProvider_SelfEstablishingSymmetric class.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyProvider_SelfEstablishingSymmetric.CreateSecuritySession(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Creates SecuritySession which will perform all traffic processing in
            specific security context.
            </summary>
            <param name="name">The name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <returns>SecuritySession that will perform all traffic processing that is performed in specific security context.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyProvider_SelfEstablishingSymmetric.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A String that represents the current instance.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.KeyStore">
            <summary>
            Implements the key store functionality.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyStore.#ctor">
            <summary>
            Constructs an instance of the KeyStore class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.KeyStore._keys">
            <summary>
            Contains security session factories [name] => [IKeyProvider].
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyStore.GetKey(System.String)">
            <summary>
            Gets a local or global key provider associated with the specified name.
            If there is no local key provider associated with the specified name, this method returns the corresponding Key Provider
            from the global Security Session Key Providers collection.
            </summary>
            <param name="name">The name of key provider.</param>
            <returns>Created key provider.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.KeyStore.SetKey(System.String,Belikov.GenuineChannels.Security.IKeyProvider)">
            <summary>
            Associates the provided key provider with the specified Security Session name.
            Removes the record if iKeyProvider is a null reference.
            </summary>
            <param name="name">The name of Security Context.</param>
            <param name="iKeyProvider">The key provider or a null reference.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ResettableCryptoStream">
            <summary>
            Implements a resettable stream re-creating an underlying stream for the message
            re-sending.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ResettableCryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform)">
            <summary>
            Constructs an instance of the ResettableCryptoStream class.
            </summary>
            <param name="underlyingStream">The source stream.</param>
            <param name="encryptor">The encryptor.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ResettableCryptoStream._underlyingStream">
            <summary>
            The underlying stream.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ResettableCryptoStream._encryptor">
            <summary>
            The cryptographic encryptor.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ResettableCryptoStream._currentStream">
            <summary>
            The current encryptor.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ResettableCryptoStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ResettableCryptoStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ResettableCryptoStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ResettableCryptoStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ResettableCryptoStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            Always fires NotSupportedException exception.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ResettableCryptoStream.Close">
            <summary>
            Closes the current stream and releases any resources associated with the current stream.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ResettableCryptoStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ResettableCryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ResettableCryptoStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ResettableCryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ResettableCryptoStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="val">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ResettableCryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ResettableCryptoStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="val">The byte to write to the stream.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.RSAUtility">
            <summary>
            Provides all the necessary functionality to implement RSA encryption.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.RSAUtility.HKeyField">
            <summary>
            A small trick, never never do so.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.RSAUtility.Encrypt(System.Security.Cryptography.RSACryptoServiceProvider,System.Byte[])">
            <summary>
            Encrypts content using provided RSA key.
            </summary>
            <param name="rsa">The RSA key to be used.</param>
            <param name="source">Source sequence of bytes.</param>
            <returns>Encrypted content.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.RSAUtility.Decrypt(System.Security.Cryptography.RSACryptoServiceProvider,System.Byte[])">
            <summary>
            Decrypts the content using the provided RSA key.
            </summary>
            <param name="rsa">The RSA key to be used.</param>
            <param name="source">The encrypted envelope.</param>
            <returns>Decrypted content.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SecurityContextKeeper">
            <summary>
            SecurityContextKeeper forces the specified security context to be used during all calls in
            the current thread. SecurityContextKeeper automatically restores the previous security 
            context when the Disposed method is called.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecurityContextKeeper.#ctor(Belikov.GenuineChannels.Security.SecuritySessionParameters)">
            <summary>
            Forces the specified security context to be used in all calls in
            the current thread until Dispose method is called.
            </summary>
            <param name="securitySessionParameters">Security Session parameters.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecurityContextKeeper.Dispose">
            <summary>
            Restores security context.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SecuritySession">
            <summary>
            Represents a security context servicing one connection or a set of invocations being made 
            in the context requiring this Security Session.
            In general, it can provide cryptographic, impersonation, authentication security capabilities.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.#ctor(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Initializes an instance of the SecuritySession class.
            </summary>
            <param name="name">The name of the Security Session.</param>
            <param name="remote">Information about remote host.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession.Remote">
            <summary>
            Contains information about the remote host.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.SecuritySession.Name">
            <summary>
            Gets the name of this Security Session.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.SecuritySession.SecuritySessionId">
            <summary>
            The identifier of the current session. Is used only for debugging purposes and outputting diagnostic messages.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.SecuritySession.IsEstablished">
            <summary>
            Gets an indication whether this Security Session is established.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.SecuritySession.Failed">
            <summary>
            Gets an indication whether the Security Session fails during establishing.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.SecuritySession.ReasonOfFailure">
            <summary>
            Gets or sets the reason of failure.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.SecuritySession.IsEstablishedEvent">
            <summary>
            Is set if security session is established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession._isEstablished">
            <summary>
            Is set if security session is established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession._establishingSecuritySessionParameters">
            <summary>
            The Security Session parameters being forced for the messages containing internal 
            Security Session data.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.SessionEstablished">
            <summary>
            Informs all dependent entities that the Security Session has been established.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.EstablishSession(System.IO.Stream,System.Boolean)">
            <summary>
            Initiates or continues establishing of the Security Session.
            </summary>
            <param name="input">A null reference or an incoming stream.</param>
            <param name="connectionLevel">Indicates whether the Security Session operates on connection level.</param>
            <returns>A stream containing data for sending to the remote host or a null reference if Security Session is established.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.InitiateEstablishingSecuritySession(Belikov.GenuineChannels.Security.SecuritySessionParameters)">
            <summary>
            Initiates establishing Security Session with specific remote host via specified IConnectionManager.
            </summary>
            <param name="securitySessionParameters">Security Session parameters.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.Internal_InitiateEstablishingSecuritySession(System.Object)">
            <summary>
            Processes incoming Security Session Establishing message and sent a response if it's available.
            </summary>
            <param name="ignored">Ignored.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.SendMessage(System.Object)">
            <summary>
            Wraps the specified stream into a message and sends it to the remote host.
            </summary>
            <param name="streamAsObject">The stream to be sent to the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.SendMessageAsync(System.Object)">
            <summary>
            Wraps the specified stream into a message and sends it to the remote host.
            This is called on a threadpool thread.
            </summary>
            <param name="streamAsObject">The stream to be sent to the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.Encrypt(System.IO.Stream,Belikov.GenuineChannels.Messaging.GenuineChunkedStream)">
            <summary>
            Encrypts the message data and put a result into the specified output stream.
            </summary>
            <param name="input">The stream containing the serialized message.</param>
            <param name="output">The result stream with the data being sent to the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.Decrypt(System.IO.Stream)">
            <summary>
            Creates and returns a stream containing decrypted data.
            </summary>
            <param name="input">A stream containing encrypted data.</param>
            <returns>A stream with decrypted data.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.Invoke(Belikov.GenuineChannels.Messaging.Message,System.Boolean)">
            <summary>
            Sets up correct security context and invokes a target.
            This method may not throw any exceptions.
            </summary>
            <param name="message">The message to be performed.</param>
            <param name="connectionLevel">Indicates whether Security Session is used on the connection level.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.CreateOutputStream">
            <summary>
            Creates and initializes GenuineChunkedStream with the header containing Processor's
            data and the security context name.
            </summary>
            <returns>Created and initialized GenuineChunkedStream.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession._awaitingMessages">
            <summary>
            An array of messages waiting while Security Session is established.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.PutMessageToAwaitingQueue(Belikov.GenuineChannels.Messaging.Message)">
            <summary>
            Queues the message to wait until its Security Session will be established.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.SendAssociatedMessages">
            <summary>
            Sends all messages requring the established Security Session.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession.DispatchException(System.Exception)">
            <summary>
            Dispatches the specified exception to all callers dependent on this Security Session.
            </summary>
            <param name="exception">The exception to be dispatched.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SecuritySession_Basic">
            <summary>
            Represents a Security Session, which does not provide any security capabilities. 
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_Basic.#ctor(System.String)">
            <summary>
            Constructs an instance of the SecuritySession_Basic class.
            </summary>
            <param name="name">The name of the security context.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_Basic.EstablishSession(System.IO.Stream,System.Boolean)">
            <summary>
            Initiates or continues establishing of the Security Session.
            Is used to establish a connection on the connection level.
            </summary>
            <param name="input">A null reference or an incoming stream.</param>
            <param name="connectionLevel">Indicates whether it's a connection-level Security Session.</param>
            <returns>A stream containing data for sending to the remote host or a null reference if Security Session is established.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_Basic.Encrypt(System.IO.Stream,Belikov.GenuineChannels.Messaging.GenuineChunkedStream)">
            <summary>
            Encrypts the message data and put a result into the specified output stream.
            </summary>
            <param name="input">The stream containing the serialized message.</param>
            <param name="output">The result stream with the data being sent to the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_Basic.Decrypt(System.IO.Stream)">
            <summary>
            Creates and returns a stream containing decrypted data.
            </summary>
            <param name="input">The stream containing encrypted data.</param>
            <returns>The stream with decrypted data.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SecuritySession_KnownSymmetric">
            <summary>
            SecuritySession_KnownSymmetric uses the provided symmetric cryptography algorithm 
            to encrypt or decrypt traffic being sent in this security context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_KnownSymmetric.#ctor(System.Security.Cryptography.SymmetricAlgorithm,System.String)">
            <summary>
            Initializes an instance of the SecuritySession_KnownSymmetric class.
            </summary>
            <param name="symmetricAlgorithm">The symmetricAlgorithm to be used.</param>
            <param name="name">The name of the security context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession_KnownSymmetric._encryptor">
            <summary>
            Cryptographic encryptor.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession_KnownSymmetric._decryptor">
            <summary>
            Cryptographic decryptor.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession_KnownSymmetric.SymmetricAlgorithm">
            <summary>
            The used symmetric algorithm.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_KnownSymmetric.EstablishSession(System.IO.Stream,System.Boolean)">
            <summary>
            Initiates or continues establishing of the Security Session.
            Is used to establish a connection on the connection level.
            </summary>
            <param name="input">A null reference or an incoming stream.</param>
            <param name="connectionLevel">Indicates whether it's a connection-level Security Session.</param>
            <returns>A stream containing data for sending to the remote host or a null reference if Security Session is established.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_KnownSymmetric.Encrypt(System.IO.Stream,Belikov.GenuineChannels.Messaging.GenuineChunkedStream)">
            <summary>
            Encrypts the message data and put a result into the specified output stream.
            </summary>
            <param name="input">The stream containing the serialized message.</param>
            <param name="output">The result stream with the data being sent to the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_KnownSymmetric.Decrypt(System.IO.Stream)">
            <summary>
            Creates and returns a stream containing decrypted data.
            </summary>
            <param name="input">A stream containing encrypted data.</param>
            <returns>A stream with decrypted data.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric">
            <summary>
            SecuritySession_EstablishingSymmetric creates a RSA key and sends public key
            to the remote host. Then receives encrypted 256-bit Rijndael key that will be used for
            further encryption.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric.#ctor(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Constructs an instance of the SecuritySession_SelfEstablishingSymmetric class.
            </summary>
            <param name="name">Name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric.KeyProvider_SelfEstablishingSymmetric">
            <summary>
            The parent factory.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric._rsaCryptoServiceProviderDecryptor">
            <summary>
            The RSA decryptor.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric.RijndaelKey">
            <summary>
            Sent or received Rijndael Key.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric._localInstanceGuid">
            <summary>
            An identifier of the local Security Session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric._remoteInstanceGuid">
            <summary>
            An identifier of the remote Security Session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric._encryptor">
            <summary>
            Cryptographic encryptor.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric._decryptor">
            <summary>
            Cryptographic decryptor.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric.EstablishSession(System.IO.Stream,System.Boolean)">
            <summary>
            Initiates or continues establishing of the Security Session.
            </summary>
            <param name="input">A null reference or an incoming stream.</param>
            <param name="connectionLevel">Indicates whether the Security Session operates on connection level.</param>
            <returns>A stream containing data for sending to the remote host or a null reference if Security Session is established.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric.Encrypt(System.IO.Stream,Belikov.GenuineChannels.Messaging.GenuineChunkedStream)">
            <summary>
            Encrypts the message data and put a result into the specified output stream.
            </summary>
            <param name="input">The stream containing the serialized message.</param>
            <param name="output">The result stream with the data being sent to the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric.Decrypt(System.IO.Stream)">
            <summary>
            Creates and returns a stream containing decrypted data.
            </summary>
            <param name="input">A stream containing encrypted data.</param>
            <returns>A stream with decrypted data.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySession_SelfEstablishingSymmetric.SessionEstablished">
            <summary>
            Initializes encryptor and decryptor.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SecuritySessionAttributes">
            <summary>
            Enumerates Security Session attributes. These flags specify run-time behavior, 
            serialization/deserialization, security context switching and connection management.
            WARNING: Serialized as a word (16-bit) value.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionAttributes.None">
            <summary>
            No parameters requested.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionAttributes.EnableCompression">
            <summary>
            Forces content compression.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionAttributes.ForceAsync">
            <summary>
            Forces asynchonous sending of the message.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionAttributes.ForceSync">
            <summary>
            Forces synchonous sending of the message.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionAttributes.UseExistentConnection">
            <summary>
            Invocation must be sent through the established named connection.
            An exception is thrown if there is no such connection, or it was closed.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SecuritySessionParameters">
            <summary>
            Contains read-only Security Session name and read-only run-time parameters.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySessionParameters.#ctor(System.String)">
            <summary>
            Constructs an instance of the SecuritySessionParameters class.
            </summary>
            <param name="securitySessionName">The name of the Security Session.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySessionParameters.#ctor(System.String,Belikov.GenuineChannels.Security.SecuritySessionAttributes,System.TimeSpan)">
            <summary>
            Constructs an instance of the SecuritySessionParameters class.
            </summary>
            <param name="securitySessionName">The name of the Security Session.</param>
            <param name="securitySessionAttributes">Security Session parameters.</param>
            <param name="timeout">The invocation timeout or the TimeSpan.MinValue value to inherit the timeout from channel or Transport Context settings.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySessionParameters.#ctor(System.String,Belikov.GenuineChannels.Security.SecuritySessionAttributes,System.TimeSpan,System.String)">
            <summary>
            Constructs an instance of the SecuritySessionParameters class.
            </summary>
            <param name="securitySessionName">The name of the Security Session.</param>
            <param name="securitySessionAttributes">Security Session parameters.</param>
            <param name="timeout">The invocation timeout or the TimeSpan.MinValue value to inherit the timeout from channel or Transport Context settings.</param>
            <param name="remoteTransportUser">For load balancing or dispatching the invocation to the specific known appdomain.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySessionParameters.#ctor(System.String,Belikov.GenuineChannels.Security.SecuritySessionAttributes,System.TimeSpan,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.String,System.TimeSpan)">
            <summary>
            Constructs an instance of the SecuritySessionParameters class.
            </summary>
            <param name="securitySessionName">The name of the Security Session.</param>
            <param name="securitySessionAttributes">Security Session parameters.</param>
            <param name="timeout">The invocation timeout or the TimeSpan.MinValue value to inherit the timeout from channel or Transport Context settings.</param>
            <param name="genuineConnectionType">Type of the connection being used. The connection type must be support by the corresponding connection manager.</param>
            <param name="connecitonName">The name of the connection if named connection type is specified.</param>
            <param name="closeAfterInactivity">The time of inactivity to close a connection or TimeSpan.MinValue to inherit this value from channel or Transport Context parameters.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySessionParameters.#ctor(System.String,Belikov.GenuineChannels.Security.SecuritySessionAttributes,System.TimeSpan,Belikov.GenuineChannels.Connection.GenuineConnectionType,System.String,System.TimeSpan,System.String)">
            <summary>
            Constructs an instance of the SecuritySessionParameters class.
            </summary>
            <param name="securitySessionName">The name of the Security Session.</param>
            <param name="securitySessionAttributes">Security Session parameters.</param>
            <param name="timeout">The invocation timeout or the TimeSpan.MinValue value to inherit the timeout from channel or Transport Context settings.</param>
            <param name="genuineConnectionType">Type of the connection being used. The connection type must be support by the corresponding connection manager.</param>
            <param name="connecitonName">The name of the connection if named connection type is specified.</param>
            <param name="closeAfterInactivity">The time of inactivity to close a connection or TimeSpan.MinValue to inherit this value from channel or Transport Context parameters.</param>
            <param name="remoteTransportUser">For load balancing or dispatching the invocation to the specific known appdomain.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionParameters.Name">
            <summary>
            The name of the Security Session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionParameters.Attributes">
            <summary>
            Security Session attributes.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.SecuritySessionParameters.GenuineConnectionType">
            <summary>
            Type of the used connection.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.SecuritySessionParameters.ConnectionName">
            <summary>
            Defines a connection to be used.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionParameters.RemoteTransportUser">
            <summary>
            For load balancing or dispatching the invocation to the specific known appdomain.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionParameters.Timeout">
            <summary>
            Time span to wait for a response. If the response is not received for this time,
            OperationException with "GenuineChannels.Exception.Send.ServerDidNotReply" identifier
            is thrown. The TimeSpan.MinValue value indicating that the value will be inherited from the
            Transport Context parameters.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionParameters.CloseAfterInactivity">
            <summary>
            Opened separate connection will not be closed and can be reused for this time span.
            The TimeSpan.MinValue value indicating that the value will be inherited from the
            Transport Context parameters.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionParameters.MaxContentSize">
            <summary>
            Specify the maximum allowed size of the content. The zero value indicating that 
            the value will be inherited from Transport Context parameters.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySessionParameters.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SecuritySessionServices">
            <summary>
            Provides several methods and properties for using Security Sessions.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionServices.DefaultContext">
            <summary>
            Defines the basic Security Session sending plain content.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionServices.DefaultContextWithCompression">
            <summary>
            Defines the basic Security Session with enabled compression.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.SecuritySessionServices.DefaultSecuritySession">
            <summary>
            The name of the default security-less Key Provider.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySessionServices.SetCurrentSecurityContext(Belikov.GenuineChannels.Security.SecuritySessionParameters)">
            <summary>
            Specifies the security context used for all invocations made in the current thread.
            </summary>
            <param name="securitySessionParameters">Security Session parameters.</param>
            <returns>The name of the previous security context or null.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySessionServices.GetCurrentSecurityContext">
            <summary>
            Gets the security session being used in the current thread context.
            </summary>
            <returns>The name of the current security context.</returns>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SecuritySessionServices._globalKeys">
            <summary>
            Contains security session factories [name] => [IKeyProvider].
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySessionServices.GetGlobalKey(System.String)">
            <summary>
            Gets a key provider.
            </summary>
            <param name="name">The name of key provider.</param>
            <returns>Created key provider.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SecuritySessionServices.SetGlobalKey(System.String,Belikov.GenuineChannels.Security.IKeyProvider)">
            <summary>
            Associates the provided key provider with the specified Security Session name.
            Removes the record if iKeyProvider is a null reference.
            </summary>
            <param name="name">The name of Security Context.</param>
            <param name="iKeyProvider">The key provider or a null reference.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient">
            <summary>
            Spawns SecuritySession_SspiClient sessions that use
            SSPI API to provide authentication, encryption, content integrity checking and other security features.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient.#ctor(Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags,Belikov.GenuineChannels.Security.SSPI.SupportedSspiPackages,System.Net.NetworkCredential,System.String)">
            <summary>
            Constructs an instance of the KeyProvider_SspiClient class.
            </summary>
            <param name="requiredFeatures">SSPI features that will be provided by the security session.</param>
            <param name="packageName">The name of the used SSPI package.</param>
            <param name="authIdentity">The authentication identity used during authentication.</param>
            <param name="targetName">The name of the server which will be the target of the context. See description of the InitializeSecurityContext function in Platform SDK Security.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient.#ctor(Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags,Belikov.GenuineChannels.Security.SSPI.SupportedSspiPackages,System.Net.NetworkCredential,System.String,Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer)">
            <summary>
            Constructs an instance of the KeyProvider_SspiClient class.
            </summary>
            <param name="requiredFeatures">SSPI features that will be provided by the security session.</param>
            <param name="packageName">The name of the used SSPI package.</param>
            <param name="authIdentity">The authentication identity used during authentication.</param>
            <param name="targetName">The name of the server which will be the target of the context. See description of the InitializeSecurityContext function in Platform SDK Security.</param>
            <param name="delegatedContext">The context being delegated to the destination host.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient.RequiredFeatures">
            <summary>
            SSPI features that will be provided by the security session.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient.PackageName">
            <summary>
            The name of the used SSPI package.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient.AuthIdentity">
            <summary>
            The authentication identity used during authentication.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient.ServerName">
            <summary>
            Name of the server which will be the target of the context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient.DelegatedContext">
            <summary>
            The security context being delegated to the remote host.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient.CreateSecuritySession(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Creates a Security Session.
            </summary>
            <param name="name">Name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <returns>Created Security Session.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A String that represents the current instance.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiServer">
            <summary>
            Spawns SecuritySession_SspiServer sessions that use
            SSPI API to provide authentication, encryption, content signing and other security features.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiServer.#ctor(Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags,Belikov.GenuineChannels.Security.SSPI.SupportedSspiPackages)">
            <summary>
            Constructs an instance of the KeyProvider_SspiServer class.
            </summary>
            <param name="requiredFeatures">SSPI features that will be provided by Security Sessions.</param>
            <param name="packageName">The name of the used SSPI package.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiServer.RequiredFeatures">
            <summary>
            SSPI features provided by Security Sessions.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiServer.PackageName">
            <summary>
            The name of the used SSPI package.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiServer.CreateSecuritySession(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Creates a Security Session.
            </summary>
            <param name="name">The name of the created SecuritySession.</param>
            <param name="remote">The remote host.</param>
            <returns>Created Security Session.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiClient">
            <summary>
            Implements client-side SSPI Security Session that
            establishes SSPI security context and can encrypt and/or sign content.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiClient.#ctor(System.String,Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient)">
            <summary>
            Constructs an instance of the SecuritySession_SspiClient class.
            </summary>
            <param name="name">The name of the Security Session.</param>
            <param name="remote">The remote host.</param>
            <param name="keyProvider_SspiClient">Parent KeyProvider_SspiClient instance to get settings from.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiClient.KeyProvider_SspiClient">
            <summary>
            Parent KeyProvider_SspiClient instance to get settings from.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiClient.SspiSecurityContext">
            <summary>
            SSPI security context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiClient.MaxSpanToPerformAuthentication">
            <summary>
            Initialization process will be restarted if authentication was not finished within this
            time span.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiClient.EstablishSession(System.IO.Stream,System.Boolean)">
            <summary>
            Initiates or continues establishing of the Security Session.
            Implementation notes: receiving of exceptions no more breaks up the connection like
            it was in the previous versions.
            </summary>
            <param name="input">A null reference or an incoming stream.</param>
            <param name="connectionLevel">Indicates whether the Security Session operates on connection level.</param>
            <returns>A stream containing data for sending to the remote host or a null reference if Security Session is established.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiClient.Encrypt(System.IO.Stream,Belikov.GenuineChannels.Messaging.GenuineChunkedStream)">
            <summary>
            Encrypts the message data and put a result into the specified output stream.
            </summary>
            <param name="input">The stream containing the serialized message.</param>
            <param name="output">The result stream with the data being sent to the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiClient.Decrypt(System.IO.Stream)">
            <summary>
            Creates and returns a stream containing decrypted data.
            </summary>
            <param name="input">A stream containing encrypted data.</param>
            <returns>A stream with decrypted data.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer">
            <summary>
            Implements server-side SSPI security session that provides
            authentication, encryption and impersonation security features.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer.#ctor(System.String,Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiServer)">
            <summary>
            Constructs an instance of the SecuritySession_SspiClient class.
            </summary>
            <param name="name">Name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <param name="keyProvider_SspiServer">Parent KeyProvider_SspiServer instance to get settings from.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer.KeyProvider_SspiServer">
            <summary>
            The parent KeyProvider_SspiClient instance to get settings from.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer.SspiSecurityContext">
            <summary>
            SSPI security context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer.WindowsIdentity">
            <summary>
            Gets a value representing WindowsIdentity corresponding to the established security context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer.EstablishSession(System.IO.Stream,System.Boolean)">
            <summary>
            Initiates or continues establishing of the Security Session.
            Implementation notes: receiving of exceptions no more breaks up the connection like
            it was in the previous versions.
            </summary>
            <param name="input">A null reference or an incoming stream.</param>
            <param name="connectionLevel">Indicates whether the Security Session operates on connection level.</param>
            <returns>A stream containing data for sending to the remote host or a null reference if Security Session is established.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer.ReadException(System.IO.Stream)">
            <summary>
            Deserializes an exception from the stream and throws it.
            </summary>
            <param name="stream">Stream containing serialized exception.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer._Debugging_SspiServer_SecurityAlgorithm">
            <summary>
            Is used to serialize all security algorithms into a single stream.
            Only for debug purposes.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer._Debugging_SspiServer_SecurityAlgorithm.AuthenticationType">
            <summary>
            The type of authentication used to identify the user.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer._Debugging_SspiServer_SecurityAlgorithm.IsAnonymous">
            <summary>
            A value indicating whether the user account is identified as an anonymous account by the system.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer._Debugging_SspiServer_SecurityAlgorithm.IsAuthenticated">
            <summary>
            A value indicating whether the user has been authenticated by Windows.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer._Debugging_SspiServer_SecurityAlgorithm.IsGuest">
            <summary>
            A value indicating whether the user account is identified as a Guest account by the system.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer._Debugging_SspiServer_SecurityAlgorithm.IsSystem">
            <summary>
            A value indicating whether the user account is identified as a System account by the system.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer._Debugging_SspiServer_SecurityAlgorithm.Name">
            <summary>
            The user's Windows logon name.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer.SessionEstablished">
            <summary>
            Informs all dependent entities that the Security Session has been established.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer.Encrypt(System.IO.Stream,Belikov.GenuineChannels.Messaging.GenuineChunkedStream)">
            <summary>
            Encrypts the message data and put a result into the specified output stream.
            </summary>
            <param name="input">The stream containing the serialized message.</param>
            <param name="output">The result stream with the data being sent to the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer.Decrypt(System.IO.Stream)">
            <summary>
            Creates and returns a stream containing decrypted data.
            </summary>
            <param name="input">A stream containing encrypted data.</param>
            <returns>A stream with decrypted data.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SecuritySession_SspiServer.Invoke(Belikov.GenuineChannels.Messaging.Message,System.Boolean)">
            <summary>
            Sets up correct security context and invokes a target.
            This method may not throw any exceptions.
            </summary>
            <param name="message">The message to be performed.</param>
            <param name="connectionLevel">Indicates whether Security Session is used on the connection level.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SspiApi">
            <summary>
            Utility class that contains SSPI API (Secur32.lib).
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.#ctor">
            <summary>
            To prevent creating an instance of this class.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle">
            <summary>
            Exposes SSPI SecHandle structure.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle.dwLower">
            <summary>
            See SSPI API.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle.dwUpper">
            <summary>
            See SSPI API.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SECPKG_CRED_INBOUND">
            <summary>
            See SSPI API.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SECPKG_CRED_OUTBOUND">
            <summary>
            See SSPI API.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SECPKG_CRED_BOTH">
            <summary>
            See SSPI API.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SEC_WINNT_AUTH_IDENTITY.User">
            <summary>
            User name.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SEC_WINNT_AUTH_IDENTITY.UserLength">
            <summary>
            Length of the User field.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SEC_WINNT_AUTH_IDENTITY.Domain">
            <summary>
            Domain name.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SEC_WINNT_AUTH_IDENTITY.DomainLength">
            <summary>
            Length of the Domain field.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SEC_WINNT_AUTH_IDENTITY.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SEC_WINNT_AUTH_IDENTITY.PasswordLength">
            <summary>
            Length of the Password field.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SEC_WINNT_AUTH_IDENTITY.Flags">
            <summary>
            Text encoding.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecBufferDescNative.ulVersion">
            <summary>
            Version number.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecBufferDescNative.cBuffers">
            <summary>
            Number of buffers.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecBufferDescNative.pBuffers">
            <summary>
            Pointer to array of buffers.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecPkgContext_Sizes">
            <summary>
            Exposes SSPI SecPkgContext_Sizes structure.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecPkgContext_Sizes.cbMaxToken">
            <summary>
            See SSPI API.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecPkgContext_Sizes.cbMaxSignature">
            <summary>
            See SSPI API.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecPkgContext_Sizes.cbBlockSize">
            <summary>
            See SSPI API.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiApi.SecPkgContext_Sizes.cbSecurityTrailer">
            <summary>
            See SSPI API.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.GetUserNameEx">
            <summary>
            Calls GetUserNameEx Security API function.
            Throws an exception if the call fails.
            </summary>
            <returns>The name of the user or other security principal associated with the calling thread.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.AcquireCredentialsHandle(System.Net.NetworkCredential,System.String,System.Int32,Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,System.Int64@)">
            <summary>
            Calls AcquireCredentialsHandle SSPI API function.
            Throws an exception if the call fails.
            </summary>
            <param name="authIdentity">User credential.</param>
            <param name="packageName">Package name.</param>
            <param name="fCredentialUse">Exchange direction.</param>
            <param name="credHandle">Where to store credential handle.</param>
            <param name="ptsExpiry">Lifetime span.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.InitializeSecurityContext(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,System.String,Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags,System.Int64@,System.IO.Stream,System.IO.Stream)">
            <summary>
            Calls InitializeSecurityContext SSPI API function.
            Throws an exception if the call fails.
            receivedData parameter must be null for the first call.
            </summary>
            <param name="credHandle">Credential handle.</param>
            <param name="inputPhContext">Source security context.</param>
            <param name="outputPhContext">Created security context.</param>
            <param name="targetName">Target name.</param>
            <param name="requiredFeatures">Requested features.</param>
            <param name="ptsExpiry">Expiry.</param>
            <param name="receivedData">Input data.</param>
            <param name="outputStream">Output data.</param>
            <returns>True if security context has been succesfully built up.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.AcceptSecurityContext(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags,System.Int64@,System.IO.Stream,System.IO.Stream,System.Boolean)">
            <summary>
            Calls AcceptSecurityContext SSPI API function.
            Throws an exception if the call fails.
            </summary>
            <param name="credHandle">Credential handle.</param>
            <param name="phContext">Security context.</param>
            <param name="requiredFeatures">Requested features.</param>
            <param name="ptsExpiry">Expiry.</param>
            <param name="receivedData">Input data.</param>
            <param name="outputStream">Output data.</param>
            <param name="firstCall">Whether phContext parameter has been initialized by previous AcceptSecurityContext call.</param>
            <returns>True if security context has been succesfully built up.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.DeleteSecurityContext(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle)">
            <summary>
            Calls DeleteSecurityContext SSPI API function.
            Ignores all possible returned errors.
            </summary>
            <param name="phContext">Security context being deleted.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.FreeCredentialsHandle(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle)">
            <summary>
            Calls FreeCredentialsHandle SSPI API function.
            Ignores all possible returned errors.
            </summary>
            <param name="credHandle">Credential handle being freed.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.FreeContextBuffer(System.IntPtr)">
            <summary>
            Calls FreeContextBuffer SSPI API function.
            Ignores all possible returned errors.
            </summary>
            <param name="pvContextBuffer">Context buffer being released.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.QueryContextSizes(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,Belikov.GenuineChannels.Security.SSPI.SspiApi.SecPkgContext_Sizes@)">
            <summary>
            Gets SecPkgContext_Sizes via QueryContextAttributes call.
            Throws an exception if the call fails.
            </summary>
            <param name="phContext">Security context.</param>
            <param name="secPkgContext_Sizes">Reference to SecPkgContext_Sizes instance.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.QuerySecurityContextToken(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle)">
            <summary>
            Calls QuerySecurityContextToken SSPI API function.
            Throws an exception if the call fails.
            </summary>
            <param name="phContext">Security context handle.</param>
            <returns>WindowsIdentity representing the user account.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.CloneSecurityToken(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,System.Int32)">
            <summary>
            Duplicates a security token for another process.
            </summary>
            <param name="phContext">Security context handle.</param>
            <param name="remoteProcessId">The identifier of the remote process.</param>
            <returns>The handle of security token for another process.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.CloneSecurityToken(System.IntPtr,System.Int32)">
            <summary>
            Duplicates a security token for another process.
            </summary>
            <param name="phToken">The security token to be duplicated.</param>
            <param name="remoteProcessId">The identifier of another process located within the same host.</param>
            <returns>The handle of security token for another process.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.CloseClonedSecurityToken(System.IntPtr)">
            <summary>
            Releases the security token.
            </summary>
            <param name="phToken">The security token passed to another process.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.ImpersonateSecurityContext(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle)">
            <summary>
            Calls ImpersonateSecurityContext SSPI API function.
            Throws an exception if the call fails.
            </summary>
            <param name="phContext">Security context handle.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.RevertSecurityContext(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle)">
            <summary>
            Calls RevertSecurityContext_NT SSPI API function.
            Throws an exception if the call fails.
            </summary>
            <param name="phContext">Security context handle.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.MakeSignature(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,System.Byte[],System.IO.BinaryWriter,Belikov.GenuineChannels.Security.SSPI.SspiApi.SecPkgContext_Sizes@)">
            <summary>
            Calls MakeSignature SSPI API function and saves obtained signature to 
            outputSignature parameter.
            Throws an exception if the call fails.
            </summary>
            <param name="phContext">Established security context handle.</param>
            <param name="contentBuffer">Content to make signature for.</param>
            <param name="outputSignature">Output stream to write signature to.</param>
            <param name="secPkgContext_Sizes">Security context size constants.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.VerifySignature(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,System.Byte[],System.Byte[])">
            <summary>
            Calls VerifySignature SSPI API function to ensure that given signature 
            is correct.
            Throws an exception if the call fails.
            </summary>
            <param name="phContext">Established security context handle.</param>
            <param name="contentBuffer">Content to check the signature for.</param>
            <param name="signature">Stream containing the signature.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.EncryptMessage(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,System.IO.Stream,System.IO.BinaryWriter,Belikov.GenuineChannels.Security.SSPI.SspiApi.SecPkgContext_Sizes@)">
            <summary>
            Calls EncryptMessage SSPI API function.
            Throws an exception if the call fails.
            </summary>
            <param name="phContext">Established security context handle.</param>
            <param name="sourceContent">Source data.</param>
            <param name="outputContent">Writer to write encrypted data to.</param>
            <param name="secPkgContext_Sizes">Current package's sizes.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiApi.DecryptMessage(Belikov.GenuineChannels.Security.SSPI.SspiApi.SecHandle,System.IO.BinaryReader)">
            <summary>
            Calls DecryptMessage SSPI API function.
            Throws an exception if the call fails.
            </summary>
            <param name="phContext">Established security context handle.</param>
            <param name="sourceContent">Stream containing encrypted data.</param>
            <returns>Stream containing decrypted data.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SspiClientSecurityContext">
            <summary>
            Represents a client's SSPI security context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiClientSecurityContext.#ctor(Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiClient)">
            <summary>
            Constructs an instance of the SspiClientSecurityContext class.
            </summary>
            <param name="keyProvider_SspiClient">Parent factory to get settings from.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiClientSecurityContext.KeyProvider_SspiClient">
            <summary>
            Parent factory to get settings from.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiClientSecurityContext.ContinueProcessing">
            <summary>
            Indicates whether security context has been built up.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiClientSecurityContext.BuildUpSecurityContext(System.IO.Stream,System.IO.Stream)">
            <summary>
            Builds up a security context between the client application and a remote peer.
            Should be called until continueProcessing is false.
            </summary>
            <param name="receivedData">Data received from the remote host.</param>
            <param name="outputStream">Stream to write the data being sent into.</param>
            <returns>True if security context has been succesfully built up.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags">
            <summary>
            Enumerates all supported SSPI features.
            DEVELOPER WARNING: Serialized as a byte.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags.None">
            <summary>
            Simple authentication.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags.Encryption">
            <summary>
            Forces content encryption (and content integrity as well).
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags.Signing">
            <summary>
            Forces checking content integrity.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags.Impersonation">
            <summary>
            Forces execution impersonation on the server side.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags.Delegation">
            <summary>
            Forces delegation on the server side. Valid only if Kerberos package is used.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SspiPacketStatusFlags">
            <summary>
            Enumerates SSPI session commands.
            WARNING: serialized as a byte value.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiPacketStatusFlags.InitializeFromScratch">
            <summary>
            New security context should be created.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiPacketStatusFlags.ContinueAuthentication">
            <summary>
            Building up of the current security context is in progress.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiPacketStatusFlags.ForceInitialization">
            <summary>
            The server's command being sent to the client to force building up the 
            security context when the server has a message to be sent under this context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiPacketStatusFlags.SessionEstablished">
            <summary>
            Security context has been created and security session was established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiPacketStatusFlags.ExceptionThrown">
            <summary>
            Exception thrown while establishing security context.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SspiSecurityContext">
            <summary>
            SspiSecurityContext.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiSecurityContext.#ctor">
            <summary>
            Constructs an instance of the SspiSecurityContext class.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiSecurityContext.Finalize">
            <summary>
            Releases resources.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiSecurityContext._credHandle">
            <summary>
            Credential handle obtained via AcquireCredentialsHandle call.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiSecurityContext._ptsExpiry">
            <summary>
            Security context lifetime span.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiSecurityContext._phContext">
            <summary>
            Established security context handle.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiSecurityContext.Dispose">
            <summary>
            Releases all acquired SSPI resources.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiSecurityContext._secPkgContext_Sizes">
            <summary>
            SSPI package size informations.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiSecurityContext.EncryptMessage(System.IO.Stream,Belikov.GenuineChannels.Messaging.GenuineChunkedStream,Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags)">
            <summary>
            Encrypts the stream under current security conditions.
            </summary>
            <param name="messageStream">Data to be encrypted.</param>
            <param name="outputStream">Stream to write encrypted content to.</param>
            <param name="sspiFeatureFlags">Requested features.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiSecurityContext.DecryptMessage(System.IO.Stream,Belikov.GenuineChannels.Security.SSPI.SspiFeatureFlags)">
            <summary>
            Decrypts the data.
            </summary>
            <param name="sourceStream">Stream containing encrypted data.</param>
            <param name="sspiFeatureFlags">Requested SSPI features.</param>
            <returns>Stream containing decrypted data.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SspiServerSecurityContext">
            <summary>
            Represents a server's SSPI security context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiServerSecurityContext.#ctor(Belikov.GenuineChannels.Security.SSPI.KeyProvider_SspiServer)">
            <summary>
            Constructs an instance of the SspiServerSecurityContext class.
            </summary>
            <param name="keyProvider_SspiServer">Parent KeyProvider_SspiServer factory.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiServerSecurityContext.KeyProvider_SspiServer">
            <summary>
            Parent session factory to get settings from.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiServerSecurityContext.ContinueProcessing">
            <summary>
            Indicates whether security context has been established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SspiServerSecurityContext.firstCall">
            <summary>
            Indicates whether AcceptSecurityContext has initialized this._phContext member.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.SSPI.SspiServerSecurityContext.BuildUpSecurityContext(System.IO.Stream,System.IO.Stream)">
            <summary>
            Builds up a security context between the client application and a remote peer.
            Should be called until continueProcessing is false.
            </summary>
            <param name="receivedData">Data received from the remote host.</param>
            <param name="outputStream">Stream to write the data being sent into.</param>
            <returns>True if security context has been succesfully built up.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.SSPI.SupportedSspiPackages">
            <summary>
            Enumerates all SSPI packages supported by Genuine Channels.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SupportedSspiPackages.Negotiate">
            <summary>
            If the application specifies Negotiate, Negotiate analyzes the request and picks 
            the best SSP to handle the request based on customer-configured security policy.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SupportedSspiPackages.NTLM">
            <summary>
            Windows NT Challenge/Response (NTLM) is the authentication protocol used on
            networks that include systems running the Windows NT operating system and on
            stand-alone systems.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.SSPI.SupportedSspiPackages.Kerberos">
            <summary>
            The Kerberos protocol defines how clients interact with a network authentication
            service. Clients obtain tickets from the Kerberos Key Distribution Center (KDC), 
            and they present these tickets to servers when connections are established. 
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ZeroProofAuthorization.IAuthorizationManager">
            <summary>
            Represents the account manager.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.IAuthorizationManager.GetPassword(System.Object)">
            <summary>
            Gets a password for the account represented by the specified login object.
            Should fire a serializable exception if the provided login is incorrect.
            </summary>
            <param name="providedLogin">The login.</param>
            <returns>The password.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaClient">
            <summary>
            Implements a Key Provider containing all the necessary information for establishing
            SecuritySession_ZpaClient Security Session.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaClient.#ctor(Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaFeatureFlags,System.Object,System.String)">
            <summary>
            Constructs an instance of the KeyProvider_ZpaClient class.
            </summary>
            <param name="zpaFeatureFlags">The requested security options.</param>
            <param name="login">The login.</param>
            <param name="password">The password.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaClient._accessToLocalMembers">
            <summary>
            To synchronize access to the local members.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaClient.ZpaFeatureFlags">
            <summary>
            The requested security options.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaClient.Login">
            <summary>
            The login.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaClient.Password">
            <summary>
            The password.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaClient.CreateSecuritySession(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Creates a Security Session.
            </summary>
            <param name="name">Name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <returns>Created Security Session.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaClient.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A String that represents the current instance.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaServer">
            <summary>
            Implements a server-side Zero Proof Authorization Key Provider.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaServer.#ctor(Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaFeatureFlags,Belikov.GenuineChannels.Security.ZeroProofAuthorization.IAuthorizationManager)">
            <summary>
            Constructs an instance of the KeyProvider_ZpaServer class.
            </summary>
            <param name="zpaFeatureFlags">The requested security options.</param>
            <param name="iAuthorizationManager">The password provider.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaServer._accessToLocalMembers">
            <summary>
            To synchronize access to the local members.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaServer.ZpaFeatureFlags">
            <summary>
            The requested security options.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaServer.IAuthorizationManager">
            <summary>
            The password provider.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaServer.CreateSecuritySession(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Creates a Security Session.
            </summary>
            <param name="name">Name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <returns>Created Security Session.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaServer.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A String that represents the current instance.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession">
            <summary>
            Implements basic functionality for Zero Proof Authorization Security Sessions.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession.#ctor(System.String,Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaFeatureFlags)">
            <summary>
            Constructs an instance of the SecuritySession_BaseZpaSession class.
            </summary>
            <param name="name">Name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <param name="zpaFeatureFlags">The requested features.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession.SymmetricAlgorithm">
            <summary>
            The symmetric algorithm being used for encryption.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession._encryptor">
            <summary>
            Cryptographic encryptor.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession._decryptor">
            <summary>
            Cryptographic decryptor.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession.KeyedHashAlgorithm">
            <summary>
            The hash algorithm.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession.Salt">
            <summary>
            The salt.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession.ZpaFeatureFlags">
            <summary>
            The requested security options.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession.Encrypt(System.IO.Stream,Belikov.GenuineChannels.Messaging.GenuineChunkedStream)">
            <summary>
            Encrypts the message data and put a result into the specified output stream.
            </summary>
            <param name="input">The stream containing the serialized message.</param>
            <param name="output">The result stream with the data being sent to the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession.Decrypt(System.IO.Stream)">
            <summary>
            Creates and returns a stream containing decrypted data.
            </summary>
            <param name="input">A stream containing encrypted data.</param>
            <returns>A stream with decrypted data.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_BaseZpaSession.SetupSecurityAlgorithms(System.String)">
            <summary>
            Sets up all security stuff for encrypting content and checking integrity.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_ZpaClient">
            <summary>
            Implements Zero Proof Authorization Client Security Session.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_ZpaClient.#ctor(System.String,Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaClient)">
            <summary>
            Constructs an instance of the SecuritySession_ZpaClient class.
            </summary>
            <param name="name">Name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <param name="keyProvider_ZpaClient">The ZPA Client Key Provider containing a login and password.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_ZpaClient.KeyProvider_ZpaClient">
            <summary>
            The ZPA Client Key Provider containing login and password.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_ZpaClient.EstablishSession(System.IO.Stream,System.Boolean)">
            <summary>
            Initiates or continues establishing of the Security Session.
            </summary>
            <param name="input">A null reference or an incoming stream.</param>
            <param name="connectionLevel">Indicates whether the Security Session operates on connection level.</param>
            <returns>A stream containing data for sending to the remote host or a null reference if Security Session is established.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_ZpaClient.SessionEstablished">
            <summary>
            Initializes encryptor and decryptor.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_ZpaServer">
            <summary>
            Implements Zero Proof Authorization Server Security Session.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_ZpaServer.#ctor(System.String,Belikov.GenuineChannels.TransportContext.HostInformation,Belikov.GenuineChannels.Security.ZeroProofAuthorization.KeyProvider_ZpaServer)">
            <summary>
            Constructs an instance of the SecuritySession_ZpaServer class.
            </summary>
            <param name="name">Name of the SecuritySession being created.</param>
            <param name="remote">The remote host.</param>
            <param name="keyProvider_ZpaServer">The server key provider.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_ZpaServer.KeyProvider_ZpaServer">
            <summary>
            The key provider.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_ZpaServer.Login">
            <summary>
            The login provided by the client host.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.SecuritySession_ZpaServer.EstablishSession(System.IO.Stream,System.Boolean)">
            <summary>
            Initiates or continues establishing of the Security Session.
            </summary>
            <param name="input">A null reference or an incoming stream.</param>
            <param name="connectionLevel">Indicates whether the Security Session operates on connection level.</param>
            <returns>A stream containing data for sending to the remote host or a null reference if Security Session is established.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZeroProofAuthorizationUtility">
            <summary>
            Provides a set of functions simplifying implementation of the Zero Proof Authorization.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZeroProofAuthorizationUtility.#ctor">
            <summary>
            Prevents the constructing an instance of the ZeroProofAuthorizationUtility class.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZeroProofAuthorizationUtility.GenerateArbitrarySequence(System.Int32)">
            <summary>
            Generates a random byte sequence with the specified size.
            </summary>
            <param name="size">The number of bytes in the sequence.</param>
            <returns>The generated sequence.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZeroProofAuthorizationUtility.GeneratePasswordBasedSequence(System.String,System.Byte[],System.Int32)">
            <summary>
            Generates a sequence based on specified string password and salt.
            </summary>
            <param name="password">The string password.</param>
            <param name="salt">The salt.</param>
            <param name="size">The size of the result sequence.</param>
            <returns>The generated sequence.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZeroProofAuthorizationUtility.CalculateDefaultKeyedHash(System.String,System.Byte[])">
            <summary>
            Calculates a Hash-based Message Authentication Code of the password using the specified salt.
            </summary>
            <param name="password">The password.</param>
            <param name="salt">The salt.</param>
            <returns>The hash.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZeroProofAuthorizationUtility.CompareBuffers(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Checks two buffers on identity.
            </summary>
            <param name="first">The first buffer.</param>
            <param name="second">The second buffer.</param>
            <param name="size">The size.</param>
            <returns>True if buffers contains equal content.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaFeatureFlags">
            <summary>
            Enumerates features provided by Zero Proof Authorization Security Provider.
            WARNING: serialized as a byte.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaFeatureFlags.None">
            <summary>
            Simple authentication without content encryption.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaFeatureFlags.ElectronicCodebookEncryption">
            <summary>
            Enables Rijndael 256-bit encryption in the electronic codebook (ECB, no chaining
            between blocks) mode.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaFeatureFlags.CipherBlockChainingEncryption">
            <summary>
            Enables Rijndael 256-bit encryption with the chaining mode of operation of the cipher.
            This is the strongest generally available mode of operation.
            Unless you explicitly have a reason to choose another chaining mode, 
            you probably want to use this type of cipher block chaining.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaFeatureFlags.Mac3DesCbcSigning">
            <summary>
            Enables the packet integrity checking based on MAC-3DES-CBC (64-bit) keyed hash algorithm.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaFeatureFlags.HmacSha1Signing">
            <summary>
            Enables the packet integrity checking based on HMAC-SHA1 (160-bit) keyed hash algorithm.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaPacketStatusFlag">
            <summary>
            Enumerates the states of the Zero Proof Authorization Security Session FA.
            Warning: serialized as a byte.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaPacketStatusFlag.ForceInitialization">
            <summary>
            The client's command being sent to the server to force building up the 
            security context.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaPacketStatusFlag.Salt">
            <summary>
            The first stage of the initialization.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaPacketStatusFlag.HashedPassword">
            <summary>
            The second stage of the initialization.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaPacketStatusFlag.SessionEstablished">
            <summary>
            Security context has been created and security session was established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Security.ZeroProofAuthorization.ZpaPacketStatusFlag.ExceptionThrown">
            <summary>
            Exception thrown while establishing security context.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.GenuineEventProvider">
            <summary>
            GenuineEventProvider is a simple implementation of IGenuineEventProvider interface
            meant for local process use.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.GenuineEventProvider.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the GenuineEventProvider class.
            </summary>
            <param name="iTransportContext">The Transport Context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.GenuineEventProvider.ITransportContext">
            <summary>
            The parent Transport Context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.GenuineEventProvider.Register(Belikov.GenuineChannels.TransportContext.IGenuineEventHandler)">
            <summary>
            Registers the event consumer.
            </summary>
            <param name="iGenuineEventHandler">The event handler to be registered.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.GenuineEventProvider.Unregister(Belikov.GenuineChannels.TransportContext.IGenuineEventHandler)">
            <summary>
            Unregisters the event consumer.
            </summary>
            <param name="iGenuineEventHandler">The event handler to be registered.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.GenuineEventProvider._handlers">
            <summary>
            A set of event handlers.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.GenuineEventProvider._handlersLock">
            <summary>
            Event handlers lock.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.GenuineEventProvider.Fire(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs)">
            <summary>
            Fires the event.
            </summary>
            <param name="genuineEventArgs">The event parameters.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.GenuineEventProvider.FireGlobalEvent(System.Object)">
            <summary>
            Fires the event.
            </summary>
            <param name="genuineEventArgsAsObject">Event parameters.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.HostInformation">
            <summary>
            Keeps information regarding the specific host (not necessarily remote) and provides all the
            necessary means for releasing this information after a connection to this host
            is closed.
            All properties and methods are thread-safe.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.HostInformation.#ctor(System.String,Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the HostInformation class.
            Instances of the class HostInformation must be constructed only by objects implementing 
            the IKnownHosts interface.
            </summary>
            <param name="uriOrUrl">Uri or Url of the remote host.</param>
            <param name="iTransportContext">Transport Context.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.HostInformation._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.ITransportContext">
            <summary>
            Transport Context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.Uri">
            <summary>
            Host's identifier.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.PhysicalAddress">
            <summary>
            The physical address of the remote host.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.QueueLength">
            <summary>
            Gets or sets an integer value that reflects the number of messages in the connection queue.
            Please note that if you have several persistent and/or named connections leading to the same host, this 
            value will reflect the queue length of the last used connection.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.ProtocolVersion">
            <summary>
            Gets or sets a byte value indicating the protocol version supported by the remote host.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.LocalPhysicalAddress">
            <summary>
            The local end point being used to connect to the remote host.
            Is set only by GTCP Connection Manager.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.HostInformation.UpdateUri(System.String,System.Int32)">
            <summary>
            Updates the value of the Uri member.
            </summary>
            <param name="uri">The uri of this host.</param>
            <param name="remoteHostUniqueIdentifier">The unique identifier of the HostInformation used by the remote host.</param>
            <returns>The exception explaining why the remote host has lost its state.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.HostInformation.UpdateUri(System.String,System.Int32,System.Boolean)">
            <summary>
            Updates the value of the Uri member.
            </summary>
            <param name="uri">The uri of this host.</param>
            <param name="remoteHostUniqueIdentifier">The unique identifier of the HostInformation used by the remote host.</param>
            <param name="checkHostInfoVersion">The boolean value that determines whether the host version should be checked.</param>
            <returns>The exception explaining why the remote host has lost its state.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.Url">
            <summary>
            Physical address of the remote host for establishing a network connection.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.HostInformation.UpdateUrl(System.String)">
            <summary>
            Updates the value of the url member.
            </summary>
            <param name="url">URL of the remote host.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.PrimaryUri">
            <summary>
            Gets the URL if the remote host is a server or the URI if it is a client.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.ExpireTime">
            <summary>
            Gets the time when all information regarding the remote host 
            becomes invalid and is a subject for disposing.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.HostInformation.Renew(System.Int32,System.Boolean)">
            <summary>
            Renews the Security Session life time.
            The first call of this method is always reset the lifetime value to the specified value.
            </summary>
            <param name="timeSpan">A time period to renew all host-related information.</param>
            <param name="canMakeShorter">Indicates whether this call may reduce the host expiration time.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.HostInformation.GetSecuritySession(System.String,Belikov.GenuineChannels.Security.IKeyStore)">
            <summary>
            Gets a Security Session.
            </summary>
            <param name="securitySessionName">The name of the Security Session.</param>
            <param name="keyStore">The store of all keys.</param>
            <returns>An object implementing ISecuritySession interface.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.HostInformation.DestroySecuritySession(System.String)">
            <summary>
            Destroys the Security Session with the specified name. 
            Releases all Security Session resources.
            </summary>
            <param name="securitySessionName">The name of the Security Session.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.Item(System.Object)">
            <summary>
            This indexer provides the ability to access a specific element in the collection of key-and-value pairs (Client Session).
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.GenuinePersistentConnectionState">
            <summary>
            Indicates the algorithm used for servicing persistent connection to this remote host.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.HostInformation.PersistentConnectionEstablishingLock">
            <summary>
            Connection manager locks this member while opening persistent connection to the remote host.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.RemoteHostUniqueIdentifier">
            <summary>
            Gets a value indicating the unique sequence number of this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.LocalHostUniqueIdentifier">
            <summary>
            Gets a value indicating the unique sequence number of this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.IsDisposed">
            <summary>
            Indicates whether this object was disposed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.HostInformation.DisposeLock">
            <summary>
            Dispose lock.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.DisposeReason">
            <summary>
            The reason of the disposing.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.HostInformation.Dispose(System.Exception)">
            <summary>
            Releases all acquired resources.
            Warning: must be called only by the instance of the KnownHosts class.
            </summary>
            <param name="reason">The reason of resource releasing.</param>
            <returns>False if host resources have already been released before this call.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.HostInformation.SecuritySessionParameters">
            <summary>
            Gets or sets the Security Session used in this context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.HostInformation.ToString">
            <summary>
            Returns a string that represents the current Object.
            </summary>
            <returns>A string that represents the current Object.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.IGenuineEventHandler">
            <summary>
            IGenuineEventHandler interface describes a method associated with the event.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.IGenuineEventHandler.OnGenuineEvent(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs)">
            <summary>
            Handles the event. Fires an exception if it doesn't want to receive events anymore.
            </summary>
            <param name="genuineEventArgs">The event information.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.IGenuineEventProvider">
            <summary>
            Genuine Channel Event Provider being used in the specific Transport Context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.IGenuineEventProvider.Register(Belikov.GenuineChannels.TransportContext.IGenuineEventHandler)">
            <summary>
            Registers the event consumer.
            </summary>
            <param name="iGenuineEventHandler">The event handler to be registered.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.IGenuineEventProvider.Unregister(Belikov.GenuineChannels.TransportContext.IGenuineEventHandler)">
            <summary>
            Unregisters the event consumer.
            </summary>
            <param name="iGenuineEventHandler">The event handler to be unregistered.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.IGenuineEventProvider.Fire(Belikov.GenuineChannels.DotNetRemotingLayer.GenuineEventArgs)">
            <summary>
            Fires the event.
            </summary>
            <param name="genuineEventArgs">The event parameters.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.ITransportContext">
            <summary>
            Represents a remoting context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.IKeyStore">
            <summary>
            A set of key providers valid in this Transport Context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.ConnectionManager">
            <summary>
            The connection manager providing transport services.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.IIncomingStreamHandler">
            <summary>
            The message processor that handles incoming messages.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.DirectExchangeManager">
            <summary>
            The Direct Exchange Manager (DXM).
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.KnownHosts">
            <summary>
            Host-specific information including URI, URL, Security Sessions and Client Sessions.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.HostIdentifier">
            <summary>
            The identifier of the current Transport Context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.BinaryHostIdentifier">
            <summary>
            The identifier of the current Transport Context represented as a sequence of bytes.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.IParameterProvider">
            <summary>
            Transport parameters that overrides default values.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.IGenuineEventProvider">
            <summary>
            Gets the event provider in the Transport Context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.BinaryLogWriter">
            <summary>
            Gets the logger which writes down all notices, warnings, errors and debug messages 
            generated by Genuine Channels.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.ProhibitedSecuritySessionAttributes">
            <summary>
            Security Session parameters that will be always ignored in this Transport Context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContext.ForcedSecuritySessionAttributes">
            <summary>
            Security Session parameters that will be forced for all invocations sent in this 
            Transport Context if they're not prohibited by ProhibitedSecuritySessionParameters member.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.ITransportContext.FixSecuritySessionParameters(Belikov.GenuineChannels.Security.SecuritySessionParameters)">
            <summary>
            Returns an instance of the SecuritySessionParameters class brought to conformity with Transport Context settings.
            </summary>
            <param name="securitySessionParameters">Source parameters.</param>
            <returns>Fixed parameters.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.ITransportContextProvider">
            <summary>
            Contains a property to fetch the used ITransportContext from the target.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.ITransportContextProvider.ITransportContext">
            <summary>
            Gets the underlying transport context.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.KnownHosts">
            <summary>
            Manages a collection of hosts.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.#ctor(Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Constructs an instance of the KnownHosts class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.KnownHosts.ITransportContext">
            <summary>
            Transport Context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.Get(System.String)">
            <summary>
            Gets HostInformation associated with the specified URI.
            </summary>
            <param name="uri">The URI of the remote host.</param>
            <returns>The HostInformation associated with the specified URI or a null reference.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.KnownHosts.Item(System.String)">
            <summary>
            Gets information about the remote host.
            Automatically creates and initializes a new instance of the HostInformation class when
            it is necessary.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.UpdateHost(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Updates a reference to the host.
            </summary>
            <param name="uriOrUrl">The reference.</param>
            <param name="hostInformation">The host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.Renew(System.String,System.Int32,System.Boolean)">
            <summary>
            Renews the host information.
            </summary>
            <param name="uriOrUrl">Uri or Url of the remote host.</param>
            <param name="timeSpan">The time period specified in milliseconds to renew host-related information.</param>
            <param name="canMakeShorter">Indicates whether this call may reduce the host expiration time.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.TimerCallback">
            <summary>
            Releases expired host structures.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.GetKnownHosts">
            <summary>
            Returns a collection containing all registered hosts.
            </summary>
            <returns>A collection containing all registered hosts.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.KnownHosts.TotalHosts">
            <summary>
            Gets an integer indicating the total number of hosts registered in the current Transport Context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.ReleaseHostResources(Belikov.GenuineChannels.TransportContext.HostInformation,System.Exception)">
            <summary>
            Releases resources belonging to the remote host.
            </summary>
            <param name="hostInformation">The remote host.</param>
            <param name="reason">The exception.</param>
            <returns>True if host resources have been released by this call. False if host resources have been already released.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.KnownHosts.HostInformationAndReason">
            <summary>
            Is used to deliver the reason of disposing to a working thread.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.HostInformationAndReason.#ctor(Belikov.GenuineChannels.TransportContext.HostInformation,System.Exception)">
            <summary>
            Constructs an instance of the HostInformationAndReason class.
            </summary>
            <param name="hostInformation">The remote host.</param>
            <param name="reason">The exception.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.KnownHosts.HostInformationAndReason.Reason">
            <summary>
            The reason of the disposing.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.KnownHosts.HostInformationAndReason.HostInformation">
            <summary>
            The exception causes disposing.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.ReleaseHostResources(System.Object)">
            <summary>
            Executes the ReleaseHostResources method in the ThreadPool's thread.
            </summary>
            <param name="hostInformationAndReasonAsObject"></param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.SetHostInformation(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Adds an element to the collection associated with the specified key.
            Ensures that there is the only instance of the element in the collection.
            </summary>
            <param name="key">The key.</param>
            <param name="hostInformation">The element being stored.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.GetHostInformation(System.String)">
            <summary>
            Retrieves the first entry from the collection associated with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The first entry from the collection associated with the specified key.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.RemoveHostInformation(System.String,Belikov.GenuineChannels.TransportContext.HostInformation)">
            <summary>
            Removes the specified element from the collection associated with the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="hostInformation">The element being removed.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.KnownHosts.CollectExpiredHostInformation(System.Collections.ArrayList,System.Int32)">
            <summary>
            Collects expired elements.
            </summary>
            <param name="collectedHosts">The collected items.</param>
            <param name="now">The current moment.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.KnownHosts.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to this instance.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.TransportContext">
            <summary>
            Implements a transport context interface.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.TransportContext.#ctor">
            <summary>
            To prevent creating Transport Contexts.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.TransportContext._accessToLocalMembers">
            <summary>
            To guarantee atomic access to local members.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.IKeyStore">
            <summary>
            A set of key providers valid in this transport context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.ConnectionManager">
            <summary>
            A set of message senders providing a transport services for delivering messages
            to the remote host.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.IIncomingStreamHandler">
            <summary>
            The message processor that handles incoming messages.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.DirectExchangeManager">
            <summary>
            Direct Exchange Manager (DXM).
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.KnownHosts">
            <summary>
            Host-specific information including URI, URL, Security Sessions and Client Sessions.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.HostIdentifier">
            <summary>
            The identifier of this host to build a channel URI.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.BinaryHostIdentifier">
            <summary>
            The identifier of this Transport Context represented by sequence of bytes.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.IParameterProvider">
            <summary>
            Transport parameters overriding default parameters but are overriden by channel parameters.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.IGenuineEventProvider">
            <summary>
            Gets the event provider in the Transport Context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.BinaryLogWriter">
            <summary>
            Gets the logger which writes down all notices, warnings, errors and debug messages 
            generated by Genuine Channels.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.SecuritySessionParameters">
            <summary>
            Gets or Sets the current security context being used on the channel level.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.ProhibitedSecuritySessionAttributes">
            <summary>
            Security Session parameters that will be always ignored in this Transport Context.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.TransportContext.TransportContext.ForcedSecuritySessionAttributes">
            <summary>
            Security Session parameters that will be forced for all invocations sent via this 
            channel if they're not prohibited by ProhibitedSecuritySessionParameters member.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.TransportContext.FixSecuritySessionParameters(Belikov.GenuineChannels.Security.SecuritySessionParameters)">
            <summary>
            Returns an instance of the SecuritySessionParameters class brought to conformity with channels' settings.
            </summary>
            <param name="securitySessionParameters">Source parameters.</param>
            <returns>Fixed parameters.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.TransportContextServices">
            <summary>
            Provides a set of static methods to aid with Transport Context.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.TransportContextServices.CreateDefaultTcpContext(System.Collections.IDictionary,Belikov.GenuineChannels.Receiving.ITransportUser)">
            <summary>
            Creates TransportContext with the default settings.
            </summary>
            <param name="properties">Channel's parameters.</param>
            <param name="defaultTransportUser">Default Transport User.</param>
            <returns>The transport context with default transport capabilities.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.TransportContextServices.CreateDefaultSharedMemoryContext(System.Collections.IDictionary,Belikov.GenuineChannels.Receiving.ITransportUser)">
            <summary>
            Creates TransportContext with the default settings.
            </summary>
            <param name="properties">Channel's parameters.</param>
            <param name="defaultTransportUser">Default Transport User.</param>
            <returns>The transport context with default transport capabilities.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.TransportContextServices.CreateDefaultUdpContext(System.Collections.IDictionary,Belikov.GenuineChannels.Receiving.ITransportUser)">
            <summary>
            Creates TransportContext with the default settings.
            </summary>
            <param name="properties">Channel's parameters.</param>
            <param name="defaultTransportUser">Default Transport User.</param>
            <returns>The transport context with default transport capabilities.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.TransportContextServices.CreateDefaultClientHttpContext(System.Collections.IDictionary,Belikov.GenuineChannels.Receiving.ITransportUser)">
            <summary>
            Creates TransportContext with the default settings.
            </summary>
            <param name="properties">Channel's parameters.</param>
            <param name="defaultTransportUser">Default Transport User.</param>
            <returns>The transport context with default transport capabilities.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.TransportContextServices.CreateDefaultServerHttpContext(System.Collections.IDictionary,Belikov.GenuineChannels.Receiving.ITransportUser)">
            <summary>
            Creates TransportContext with the default settings.
            </summary>
            <param name="properties">Channel's parameters.</param>
            <param name="defaultTransportUser">Default Transport User.</param>
            <returns>The transport context with default transport capabilities.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.TransportContextServices.CreateDefaultXHttpContext(System.Collections.IDictionary,Belikov.GenuineChannels.Receiving.ITransportUser)">
            <summary>
            Creates TransportContext with the default settings.
            </summary>
            <param name="properties">Channel's parameters.</param>
            <param name="defaultTransportUser">Default Transport User.</param>
            <returns>The transport context with default transport capabilities.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.TransportContext.UriStorage">
            <summary>
            Thread-safe collections of references associating URIs with appropriate Transport Contexts.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.UriStorage.#ctor">
            <summary>
            Constructs an instance of the UriStorage class.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.UriStorage._sigleton">
            <summary>
            To collect unavailable Transport Contexts.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.TransportContext.UriStorage._knownUris">
            <summary>
            Thread-safe collections of weak references associating URIs with appropriate Transport Contexts.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.UriStorage.GetTransportContext(System.String)">
            <summary>
            Gets a Transport Context responsible for the connection to the specified remoteUri.
            </summary>
            <param name="remoteUri">The uri of the remote host.</param>
            <returns>Transport Context or a null reference.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.UriStorage.RegisterConnection(System.String,Belikov.GenuineChannels.TransportContext.ITransportContext)">
            <summary>
            Registers message handler.
            Overrides old message handlers with the same names.
            </summary>
            <param name="remoteUri">The URI of the remote host.</param>
            <param name="iTransportContext">Transport Context servicing a connection to the remote host.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.UriStorage.UnregisterUnavailableTransportContexts">
            <summary>
            Unregisters unavailable Transport Contexts.
            Does not throw any exceptions.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.TransportContext.UriStorage.TimerCallback">
            <summary>
            Is called at specified intervals.
            The procedure being called must not do any long-duration perfomance during this call.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.AsyncThreadStarter">
            <summary>
            Starts socket's asynchronous operation in the thread that never exit.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.AsyncThreadStarter.QueueTask(Belikov.GenuineChannels.Utilities.IAsyncWorkItem)">
            <summary>
            Queues the asynchronous operation.
            </summary>
            <param name="iAsyncWorkItem">The asynchronous operation.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.AsyncThreadStarter.ServiceWorkItems">
            <summary>
            Services the work items.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.CollectionUtility">
            <summary>
            Provides a set of methods operating on collections.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.CollectionUtility.#ctor">
            <summary>
            To prevent creating instances of this class.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.CollectionUtility.ObtainObjectFromArrayListByKey(System.Collections.Hashtable,System.Object)">
            <summary>
            Thread-safe way to obtain an element from an ArrayList collection kept in the hashtable
            under the specified key.
            </summary>
            <param name="hashtable">The hashtable.</param>
            <param name="key">The key.</param>
            <returns>The obtained element.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.CollectionUtility.InsertObjectToArrayListByKey(System.Collections.Hashtable,System.Object,System.Object)">
            <summary>
            Thread-safe way to insert an object to an ArrayList collection kept in the hashtable
            under the specified key.
            </summary>
            <param name="hashtable">The hashtable.</param>
            <param name="key">The key.</param>
            <param name="obj">The object being inserted.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.CustomThreadInfo">
            <summary>
            Contains information on the working thread.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.CustomThreadInfo.#ctor(System.Object)">
            <summary>
            Initializes an instance of the CustomThreadInfo class.
            </summary>
            <param name="commonThreadInfoLock">The common lock.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.CustomThreadInfo._threadOrderNumber">
            <summary>
            Is used to provide unique thread numbers for debugging purposes.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.CustomThreadInfo.Thread">
            <summary>
            The thread.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.CustomThreadInfo.ManualResetEvent">
            <summary>
            Is set when it is necessary to perform a task.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.CustomThreadInfo.IsIdle">
            <summary>
            Indicates whether the thread performs a request.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.CustomThreadInfo.IsAlive">
            <summary>
            Indicates whether this thread is alive.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.CustomThreadInfo.WorkCallback">
            <summary>
            A WaitCallback representing the method to be executed.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.CustomThreadInfo.CallbackState">
            <summary>
            Parameter for the worker callback.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.CustomThreadInfo.CommonThreadInfoLock">
            <summary>
            Common lock for all CustomThreadInfo cells.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.CustomThreadInfo.ThreadEntry">
            <summary>
            Implements a GenuineThreadPool's thread logic.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.EventPool">
            <summary>
            A storage containing instances of the ManualResetEvent class.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.EventPool.ObtainEvent">
            <summary>
            Gets an instance of the ManualResetEvent class, which initial state is false.
            </summary>
            <returns>The obtained buffer.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.EventPool.RecycleEvent(System.Threading.ManualResetEvent)">
            <summary>
            Returns the buffer back to Buffer Pool for the following reusing.
            </summary>
            <param name="manualResetEvent">The event.</param>
        </member>
        <member name="P:Belikov.GenuineChannels.Utilities.EventPool.GlobalStubEvent">
            <summary>
            Gets an instance of the ManualResetEvent class that can be used as a stub.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.EventPool._maxPooledObjects">
            <summary>
            The maximum number of objects kept in the pool.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.GenuineThreadPool">
            <summary>
            Implements a custom thread pool logic.
            All methods and properties are thread-safe.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.GenuineThreadPool.#ctor">
            <summary>
            To prevent creating instances of the GenuineThreadPool class.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Utilities.GenuineThreadPool.ThreadPoolAvailableThreads">
            <summary>
            Gets or sets the minimum number of threads in the ThreadPool since that
            GenuineThreadPool will create threads.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Utilities.GenuineThreadPool.MaximumThreads">
            <summary>
            The maximum number of allowed threads held by GenuineThreadPool.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Utilities.GenuineThreadPool.CloseAfterInactivity">
            <summary>
            Working threads will be terminated after this time of inactiviy.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Utilities.GenuineThreadPool.UnsafeQueuing">
            <summary>
            Gets or sets an indication of whether GenuineThreadPool will use ThreadPool.UnsafeQueueUserWorkItem 
            while working with the native ThreadPool.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Utilities.GenuineThreadPool.MaximumRequestsQueued">
            <summary>
            Represents an integer value indicating the maximum allowed number of queued requests if the number of the Genuine Thread 
            Pool's threads has exceeded GenuineThreadPool.MaximumThreads.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Utilities.GenuineThreadPool.AllowRequestQueuing">
            <summary>
            Represents a boolean value indicating whether requests may be queued when the number of the Genuine Thread 
            Pool's threads is close to GenuineThreadPool.MaximumThreads.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.GenuineThreadPool._requestsQueued">
            <summary>
            Queued requests.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.GenuineThreadPool._threads">
            <summary>
            Work threads.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.GenuineThreadPool._threadsLock">
            <summary>
            A lock for accessing the thread array and each thread structure.
            </summary>
        </member>
        <member name="P:Belikov.GenuineChannels.Utilities.GenuineThreadPool.GenuineThreadPoolStrategy">
            <summary>
            Specifies the Thread Pool Strategy used by Genuine Channels solution.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.GenuineThreadPool._QueueUserWorkItem_OperationNumber">
            <summary>
            This variable contains the total number of attempts to queue a task through GenuineThreadPool.
            It is used to monitor the number of threads to the log file.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.GenuineThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object,System.Boolean)">
            <summary>
            Queues a user work item to the thread pool.
            </summary>
            <param name="callback">A WaitCallback representing the method to execute.</param>
            <param name="state">An object containing data to be used by the method.</param>
            <param name="longDuration">Indicates whether the item depends on other working threads or can take a long period to finish.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.GenuineThreadPool.GetQueuedRequestIfPossible">
            <summary>
            Gets a request from the queue or a null reference if the queue is empty.
            </summary>
            <returns>The request or a null reference.</returns>
        </member>
        <member name="P:Belikov.GenuineChannels.Utilities.GenuineThreadPool.ThreadStatisticFrequency">
            <summary>
            Gets or sets an integer value that determines how often Genuine Thread Pool will write log records describing the
            current state and tasks performed. 1 means that each GenuineThreadPool.QueueUserWorkItem will be saved in the log.
            10 means that every 10th request will be indicated in the log file.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.GenuineThreadPool.TakeSnapshot">
            <summary>
            Returns a string containing the list of active threads and their tasks.
            It is not recommended to invoke this method very often.
            </summary>
            <returns>A string containing the list of active threads and their tasks.</returns>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.GenuineThreadPool.CalculateOccupiedThreads">
            <summary>
            Calculates and returns the number of occupied threads.
            It is not recommended to invoke this method very often.
            </summary>
            <returns>The number of occupied threads.</returns>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.GenuineThreadPoolStrategy">
            <summary>
            Enumerates all strategies that can be used by Genuine Thread Pool.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.GenuineThreadPoolStrategy.AlwaysNative">
            <summary>
            Always to use Native Thread Pool's working threads.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.GenuineThreadPoolStrategy.OnlyLongDuration">
            <summary>
            Use Native Thread Pool's working threads for the processing.
            Use Genuine Thread Pool's threads only for long-duration processes.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.GenuineThreadPoolStrategy.SwitchAfterExhaustion">
            <summary>
            Use Native Thread Pool's working threads right up to the specified limit.
            Use Genuine Thread Pool's threads only for long-duration processes.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.GenuineThreadPoolStrategy.AlwaysThreads">
            <summary>
            Always use Genuine Thread Pool's threads.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.GenuineThreadPoolWorkItem">
            <summary>
            Represents a queued work item.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.GenuineThreadPoolWorkItem.#ctor(System.Threading.WaitCallback,System.Object)">
            <summary>
            Constructs an instance of the GenuineThreadPoolWorkItem class.
            </summary>
            <param name="workCallback">A WaitCallback to be invoked in the working thread.</param>
            <param name="callbackState">An object containing data to be used by the working method.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.GenuineThreadPoolWorkItem.WorkCallback">
            <summary>
            A WaitCallback to be invoked in the working thread.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.GenuineThreadPoolWorkItem.CallbackState">
            <summary>
            An object containing data to be used by the working method.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.IAsyncWorkItem">
            <summary>
            Represents a working item that starts asynchronous operation.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.IAsyncWorkItem.StartAsynchronousOperation">
            <summary>
            Initiates an asynchronous operation.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.ITimerConsumer">
            <summary>
            ITimerConsumer provides an interface for consumers of TimerProvider service.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.ITimerConsumer.TimerCallback">
            <summary>
            Is called at specified intervals.
            The procedure being called must not do any long-duration perfomance during this call.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.OccupiedThreadSlots">
            <summary>
            Enumerates names of the used thread slots.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.OccupiedThreadSlots.CurrentMessage">
            <summary>
            The current message being executed.
            It contains GC uris, Security Session parameters and the transport shell.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.OccupiedThreadSlots.SocketDuringEstablishing">
            <summary>
            Specifies the name of the thread slot where the socket will be kept while connection is being established.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.OccupiedThreadSlots.CurrentSecuritySessionParameters">
            <summary>
            The Security Session parameters being used in the current thread.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.OccupiedThreadSlots.DispatcherFilterUsed">
            <summary>
            Current Dispatcher filter being used.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.SocketUtility">
            <summary>
            Contains a set of methods useful while winsocks are used.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.SocketUtility.#ctor">
            <summary>
            Singleton with static methods.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.SocketUtility.CloseSocket(System.Object)">
            <summary>
            Closes the socket.
            </summary>
            <param name="socketAsObject">The socket.</param>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.ThreadDataSlotKeeper">
            <summary>
            ThreadDataSlotKeeper initializes thread slot with the specified values and
            release a value on disposing.
            Does not restore previous slot value, always delete slot value.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.ThreadDataSlotKeeper.#ctor(System.String,System.Object)">
            <summary>
            Initializes the thread slot with the specified value.
            </summary>
            <param name="slotName">The name of the slot.</param>
            <param name="val">The value to be stored in the slot.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.ThreadDataSlotKeeper.Dispose">
            <summary>
            Releases the set object.
            </summary>
        </member>
        <member name="T:Belikov.GenuineChannels.Utilities.TimerProvider">
            <summary>
            Contains a list of clients and provides a mechanism for executing client's method at specified intervals.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.TimerProvider.#cctor">
            <summary>
            Runs system timer.
            </summary>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.TimerProvider.CallFrequencyInSeconds">
            <summary>
            Timer interval.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.TimerProvider.TimerCallback(System.Object)">
            <summary>
            Is executed every 10 seconds.
            </summary>
            <param name="state">Useless parameter.</param>
        </member>
        <member name="F:Belikov.GenuineChannels.Utilities.TimerProvider._clients">
            <summary>
            List of clients.
            </summary>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.TimerProvider.Attach(Belikov.GenuineChannels.Utilities.ITimerConsumer)">
            <summary>
            Attaches timer consumer.
            </summary>
            <param name="iTimerConsumer">Timer consumer to attach.</param>
        </member>
        <member name="M:Belikov.GenuineChannels.Utilities.TimerProvider.Detach(Belikov.GenuineChannels.Utilities.ITimerConsumer)">
            <summary>
            Detaches timer consumer.
            </summary>
            <param name="iTimerConsumer">Timer consumer to attach.</param>
        </member>
        <member name="T:Belikov.Common.ThreadProcessing.ReaderAutoLocker">
            <summary>
            ReaderAutoLocker tries to obtain read access in the constructor within 30 secs.
            If it can not obtain it, ApplicationException is thrown.
            The resource is automatically released when dispose method is called.
            </summary>
        </member>
        <member name="M:Belikov.Common.ThreadProcessing.ReaderAutoLocker.#ctor(System.Threading.ReaderWriterLock)">
            <summary>
            Obtain read access for the given object.
            Throws ApplicationException if access has not been acquired within 30 secs.
            </summary>
            <param name="locker">Locker to acquire rights.</param>
        </member>
        <member name="M:Belikov.Common.ThreadProcessing.ReaderAutoLocker.Dispose">
            <summary>
            Disposes all acquired resources.
            </summary>
        </member>
        <member name="T:Belikov.Common.ThreadProcessing.WriterAutoLocker">
            <summary>
            WriterAutoLocker tries to obtain write access in the constructor within 30 secs.
            If it can not obtain it, ApplicationException is thrown.
            The resource is automatically released when the Dispose method is called.
            </summary>
        </member>
        <member name="M:Belikov.Common.ThreadProcessing.WriterAutoLocker.#ctor(System.Threading.ReaderWriterLock)">
            <summary>
            Acquires write access or throws ApplicationException.
            </summary>
            <param name="locker">ReaderWriterLock being locked.</param>
        </member>
        <member name="M:Belikov.Common.ThreadProcessing.WriterAutoLocker.Dispose">
            <summary>
            Disposes all acquired resources.
            </summary>
        </member>
    </members>
</doc>
