; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
;!define PRODUCT_VERSION "1.25.0"
;!define PRODUCT_FILE_VERSION "1.25.0.0"
;!define DO_UNINSTALLER_SIGNING use this to generate and use a signed uninstaller. This also requires SIGN_TOOL, SIGN_CERT, SIGN_PASS and optional SIGN_TIMESTAMP_URL
;!define UNINSTALLER_ONLY use this to generate the uninstaller

!ifndef PRODUCT_VERSION
!define PRODUCT_VERSION "2.3.0"
!define PRODUCT_FILE_VERSION "2.3.0.0"
!endif

!define PRODUCT_KEYWORDS "ibaDatCoordinator, data post processing"


!ifdef DO_UNINSTALLER_SIGNING
;Section to generate uninstaller and sign it.
;This actually calls the same script again with the UNINSTALLER_ONLY define set.
;After the special installer is created it is run and the uninstaller is signed

!verbose push
!verbose 4

!echo "Creating installer with unsigned uninstaller"
!system '"${NSISDIR}\makensis" /V2 /DUNINSTALLER_ONLY /D"PRODUCT_VERSION=${PRODUCT_VERSION}" /D"PRODUCT_FILE_VERSION=${PRODUCT_FILE_VERSION}" ${__FILE__}' = 0

!echo "Executing installer with unsigned uninstaller"
!system "..\InstallFiles\uninstaller_only.exe" = 2
!delfile /nonfatal "..\InstallFiles\uninstaller_only.exe"

!echo "Signing uninstaller"
!ifdef SIGN_TIMESTAMP_URL
!system '"${SIGN_TOOL}" sign /f "${SIGN_CERT}" /p ${SIGN_PASS} /t ${SIGN_TIMESTAMP_URL} ..\InstallFiles\uninst.exe' = 0
!else
!system '"${SIGN_TOOL}" sign /f "${SIGN_CERT}" /p ${SIGN_PASS} ..\InstallFiles\uninst.exe' = 0
!endif

!verbose pop

!endif
!define PRODUCT_NAME "ibaDatCoordinator"
!define PRODUCT_PUBLISHER "iba AG"
!define PRODUCT_WEB_SITE "http://www.iba-ag.com"
;!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\ibaPda.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

; .NET Framework
; English
!define BASE_URL http://download.microsoft.com/download
!define URL_DOTNET "${BASE_URL}/5/6/7/567758a3-759e-473e-bf8f-52154438565a/dotnetfx.exe"

!include "MUI.nsh"
!include "WinMessages.nsh"
;!define LOGICLIB_STRCMP
!include "LogicLib.nsh"
!include "sections.nsh"
!include "StrFunc.nsh"
!include "x64.nsh"
!include "Include\InstallHistory.nsh"

!include WordFunc.nsh
!insertmacro VersionCompare

!include FileFunc.nsh
!insertmacro GetParameters
!insertmacro GetOptions

!addplugindir .

!ifdef UNINSTALLER_ONLY
SetCompress off
!else
SetCompressor /SOLID lzma
!endif

;--------------------------------
;General Interface settings

!define MUI_ICON    "Graphics\ibaInstall.ico"
!define MUI_UNICON  "Graphics\ibaUnInstall.ico"

;--------------------------------
;Interface settings

!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_BITMAP "Graphics\MUIInstallLogo.bmp"
!define MUI_HEADERIMAGE_RIGHT
!define MUI_WELCOMEFINISHPAGE_BITMAP "Graphics\ibaWizard.bmp"
!define MUI_UNWELCOMEFINISHPAGE_BITMAP "Graphics\ibaWizard.bmp"
!define MUI_ABORTWARNING
!define MUI_COMPONENTSPAGE_NODESC
!define MUI_WELCOMEFINISHPAGE_INI "welcome.ini"
;!define MUI_COMPONENTSPAGE_SMALLDESC
;!define MUI_FINISHPAGE_NOAUTOCLOSE

;--------------------------------
; Language Selection Dialog Settings

;Remember the installer language
!define MUI_LANGDLL_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_LANGDLL_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_LANGDLL_REGISTRY_VALUENAME "Installer Language"


;--------------------------------
; Install pages

Page custom PreInstall
!define MUI_WELCOMEPAGE_TITLE_3LINES
;!define MUI_PAGE_CUSTOMFUNCTION_PRE "DisableBackButton"
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE License_Agreement_DatCoordinator.rtf
Page custom InstalltypeSelect
Page custom ServiceAccountPage
;!insertmacro MUI_PAGE_COMPONENTS
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES
!define MUI_FINISHPAGE_TITLE_3LINES
!define MUI_FINISHPAGE_RUN
!define MUI_FINISHPAGE_RUN_FUNCTION "OnEnd"
!define MUI_FINISHPAGE_LINK "$(TEXT_UPDATEINFO)"
!define MUI_FINISHPAGE_LINK_LOCATION "$(TEXT_UPDATEINFO_LINK)"
!define MUI_PAGE_CUSTOMFUNCTION_SHOW FinishShow 
!insertmacro MUI_PAGE_FINISH

!ifndef DO_UNINSTALLER_SIGNING
;--------------------------------
; Uninstall pages

!define MUI_WELCOMEPAGE_TITLE_3LINES
!insertmacro MUI_UNPAGE_WELCOME
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!define MUI_FINISHPAGE_TITLE_3LINES
!insertmacro MUI_UNPAGE_FINISH
!endif

;--------------------------------
; Languages

!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "German"
!insertmacro MUI_LANGUAGE "French"
!insertmacro MUI_LANGUAGE "Spanish"

;--------------------------------
; General

Name "${PRODUCT_NAME} v${PRODUCT_VERSION}"
!ifdef UNINSTALLER_ONLY
OutFile "..\InstallFiles\uninstaller_only.exe"
!else
OutFile "ibaDatCoordinatorSetup_v${PRODUCT_VERSION}.exe"
!endif
InstallDir "$PROGRAMFILES\iba\ibaDatCoordinator"
;InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails hide
ShowUnInstDetails hide
BrandingText "iba AG"

VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductName" "${PRODUCT_NAME}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "Comments" ""
VIAddVersionKey /LANG=${LANG_ENGLISH} "CompanyName" "${PRODUCT_PUBLISHER}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "LegalCopyright" "© iba AG. All rights reserved"
VIAddVersionKey /LANG=${LANG_ENGLISH} "FileDescription" "${PRODUCT_NAME} installer"
VIAddVersionKey /LANG=${LANG_ENGLISH} "FileVersion" "${PRODUCT_FILE_VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductVersion" "${PRODUCT_VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "Keywords" "${PRODUCT_KEYWORDS}"
VIProductVersion "${PRODUCT_FILE_VERSION}"

;--------------------------------
; Reserve Files

ReserveFile "serviceorstandalone.ini"
;ReserveFile "welcome.ini"
!insertmacro MUI_RESERVEFILE_INSTALLOPTIONS
!insertmacro MUI_RESERVEFILE_LANGDLL

${StrLoc}

Var WinVer
Var Is64Bit
Var PrevUninstall
Var StartMenuFolder
Var ServiceUserName
Var ServicePassword
Var InstallTypeSelection
Var PortNumber
Var CheckMpi
Var LicenseNr

InstType "service"
InstType "standalone"

;--------------------------------
; Initialization functions
Function .onInit
  SetShellVarContext all
!ifdef UNINSTALLER_ONLY

  WriteUninstaller "$EXEDIR\..\InstallFiles\uninst.exe"
  Quit
  
!else
  
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "serviceorstandalone.ini"
  ${If} $LANGUAGE == 1031       ;German
    !insertmacro MUI_INSTALLOPTIONS_EXTRACT_AS "ServiceAccount_de.ini" "ServiceAccount.ini"
  ${ElseIf} $LANGUAGE == 1036   ;French
    !insertmacro MUI_INSTALLOPTIONS_EXTRACT_AS "ServiceAccount_fr.ini" "ServiceAccount.ini"
  ${Else}
    !insertmacro MUI_INSTALLOPTIONS_EXTRACT_AS "ServiceAccount_en.ini" "ServiceAccount.ini"
  ${EndIf}
  ;!insertmacro MUI_INSTALLOPTIONS_EXTRACT "welcome.ini"
  ;Display language selection dialog
  ;!insertmacro MUI_LANGDLL_DISPLAY

  ;In case of a silent install call the PreInstall function directly
  IfSilent +1 +2
    Call PreInstall
	
	  
  ;initialize $InstallTypeSelection, when not silent will be overwritten by custom page InstallTypeSelect
  Push $0
  strcpy $InstallTypeSelection "1"
  ${GetParameters} $0
  ${GetOptions} $0 '/installtype=' $InstallTypeSelection
  IfErrors +1 lbl_finishedinstalltype
  ReadRegStr $0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Server"
  ${If} $InstallTypeSelection == ""
    strcpy $InstallTypeSelection "1"
  ${EndIf}
lbl_finishedinstalltype:
  Pop $0
  
  ;initialize $InstallTypeSelection, when not silent will be overwritten by custom page InstallTypeSelect
  Push $0
  strcpy $PortNumber "0"
  ${GetParameters} $0
  ${GetOptions} $0 '/port=' $PortNumber
  ${If} $PortNumber == ""
    strcpy $PortNumber "0"
  ${EndIf}
  Pop $0
  
  
  ;In case of a silent install call the installtype select function directly
  IfSilent +1 +2
    Call InstallTypeSelect
 
!endif
FunctionEnd

!ifndef DO_UNINSTALLER_SIGNING
Function un.onInit
  ;!insertmacro MUI_UNGETLANGUAGE
FunctionEnd
!endif

;--------------------------------
; PreInstall function that checks requirements and previous installs
; Remark : This is done in separate "dummy" page because initialization functions
;          don't support translated error messages

Function PreInstall
  Call CheckRequirements
  Call CheckPreviousVersions

  ${If} $WinVer == "8"
  ${OrIf} $WinVer == "2012"
  ${OrIf} $WinVer == "10"
    StrCpy $StartMenuFolder "ibaDatCoordinator" 
  ${Else}
    StrCpy $StartMenuFolder "iba\ibaDatCoordinator"
  ${EndIf}

FunctionEnd

;--------------------------------
; Requirements check

Function CheckRequirements
  ;Check that operating system is supported
  nsSCMEx::GetOsVersion
  Pop $Is64Bit
  Pop $WinVer
  StrCmp $WinVer "7" OSisOK +1
  StrCmp $WinVer "2008 R2" OSisOK +1
  StrCmp $WinVer "8" OSisOK +1
  StrCmp $WinVer "10" OSisOK +1
  StrCmp $WinVer "2012" OSisOK +1
  StrCmp $WinVer "2016" OSisOK +1
  StrCmp $WinVer "2019" OSisOK +1
    MessageBox MB_OK|MB_ICONSTOP|MB_SETFOREGROUND $(TEXT_OS_NOT_SUPPORTED)
    Quit

  WarnNoLongerSupported:
  MessageBox MB_YESNO|MB_ICONEXCLAMATION|MB_SETFOREGROUND|MB_DEFBUTTON2 $(TEXT_OS_NOT_FULLY_SUPPORTED) /SD IDNO IDYES OSisOk
  Quit

  OSisOk:

  ;Check user has administrator rights
  UserInfo::GetName
  Pop $0
  UserInfo::GetAccountType
  Pop $1
  StrCmp $1 "Admin" adminOK +1
    MessageBox MB_OK|MB_ICONSTOP $(TEXT_NOT_ADMINISTRATOR)
    Quit
  adminOK:

  ;Check if required .NET framework version is installed
  Call GetDotNETVersion
  Pop $0
  Pop $1

  ;Check if .NET framework 4.8 is installed
  ${VersionCompare} $0 "4.8.0" $2
  ${If} $2 == 2
    ;Framework 4.8.0 not found --> stop installer
    MessageBox MB_OK|MB_ICONSTOP|MB_SETFOREGROUND $(TEXT_FRAMEWORK_MISSING)
    Quit
  ${EndIf}  

FunctionEnd

;--------------------------------
; Check if previous version of ibaDatCoordinator are installed

Function CheckPreviousVersions

  StrCpy $PrevUninstall ""
  StrCpy $ServiceUserName ""
  StrCpy $ServicePassword ""

  ;Check if previous install found
  ReadRegStr $0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion"
  ${If} $0 != ""

    ;Retrieve version number from string
    Push $0
    Call GetVersionNr
    Pop $R0
    Push "${PRODUCT_VERSION}"
    Call GetVersionNr
    Pop $R1
    IntCmp $R0 $R1 sameVersion olderVersion newerVersion

    sameVersion:
    ;Same version is already installed --> ask to re-install
    MessageBox MB_YESNO|MB_ICONSTOP $(TEXT_ALREADY_INSTALLED) /SD IDYES IDYES upgrade IDNO quit

    olderVersion:
    ;Older version is installed --> ask to upgrade
    MessageBox MB_YESNO|MB_ICONQUESTION $(TEXT_OLDER_INSTALLED) /SD IDYES IDYES upgrade IDNO quit

    newerVersion:
    ;Newer version is installed --> quit (manual uninstall is needed)
    MessageBox MB_OK|MB_ICONSTOP $(TEXT_NEWER_INSTALLED)
    Quit
  ${Else}
    Goto end
  ${EndIf}


  quit:
  Quit

  upgrade:
  ReadRegStr $INSTDIR ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "InstallDir"
  ReadRegStr $0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString"
  ReadRegStr $ServiceUserName ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Service1" ;Retrieve user name
  ReadRegStr $ServicePassword ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Service2" ;Retrieve password
  StrCpy $PrevUninstall '"$0" /S _?=$INSTDIR'  ;add silent parameter switch to uninstall string

  end:
FunctionEnd

; Include installcrt.nsh here since it includes LangString definitions
!include "Include\installcrt.nsh"

;--------------------------------
; Uninstall previous version section

Section -PreInstall
  !insertmacro WriteToInstallHistory "Installing ${PRODUCT_NAME} v${PRODUCT_VERSION} (Command line: $CMDLINE)"

  ${If} $PrevUninstall != ""
    ;Uninstall previous version
    DetailPrint $(TEXT_PREV_UNINSTALLING)
    nsExec::Exec $PrevUninstall
  ${EndIf}
  
  ;Install VC++ 2015 runtime
  !insertmacro InstallCRT14_x86
  
SectionEnd

!macro InstallLanguageCommon LANGPREFIX LANGDISPLAY

  DetailPrint "Installing ${LANGDISPLAY} common files"

  ;Copy files
  SetOutPath "$INSTDIR\${LANGPREFIX}"
  File "..\Passolo\${LANGPREFIX}\ibaDatCoordinator.resources.dll"
  File "..\InstallFiles\Obfuscated\${LANGPREFIX}\hdClient.resources.dll"
  File "..\InstallFiles\Obfuscated\${LANGPREFIX}\hdClientFiles.resources.dll"
  File "..\Dependencies\${LANGPREFIX}\hdCommon.resources.dll"
  File "..\Dependencies\${LANGPREFIX}\hd_plugin.resources.dll"
  File "..\Dependencies\${LANGPREFIX}\ibaUser*.resources.dll"

!macroend

;Installation steps that are common for client, server and standalone version
Section -Common
  SetOverwrite on

  ;Copy server files
  SetOutPath "$INSTDIR"
  File "..\Dependencies\ibaLogger.dll"
  File "..\Dependencies\Eyefinder.dll"
  File "..\Dependencies\DotNetMagic2005.DLL"
  File "..\Dependencies\DotNetMagic.DLL"
  File "..\Dependencies\ICSharpCode.TextEditor.dll"
  File "..\Dependencies\ICSharpCode.SharpZipLib.dll"
  File "..\Dependencies\msvcr100.dll"
  File "..\Dependencies\msvcp100.dll"
  File "..\Dependencies\PowerCollections.dll"
  File "..\Dependencies\ibaFilesV7LiteDotNet.dll"
  File "..\Dependencies\GenuineChannels.dll"
  File "..\Dependencies\Zyan.SafeDeserializationHelpers.dll"
  File "..\Dependencies\DevExpress.XtraEditors.v16.1.dll"
  File "..\Dependencies\DevExpress.XtraGrid.v16.1.dll"
  File "..\Dependencies\DevExpress.Data.v16.1.dll"
  File "..\Dependencies\DevExpress.Utils.v16.1.dll"
  File "..\Dependencies\DevExpress.Sparkline.v16.1.Core.dll"
  File "..\Dependencies\DevExpress.Printing.v16.1.Core.dll"
  File "..\ibaDatCoordinator\bin\Release\ibaSnmpLib.dll"
  ;Upload Task
  File "..\ibaDatCoordinator\bin\Release\WinSCPnet.dll"
  File "..\ibaDatCoordinator\bin\Release\WinSCP.exe"
  File "..\ibaDatCoordinator\bin\Release\Azure.Core.dll"
  File "..\ibaDatCoordinator\bin\Release\Azure.Storage.Blobs.dll"
  File "..\ibaDatCoordinator\bin\Release\Azure.Storage.Common.dll"
  File "..\ibaDatCoordinator\bin\Release\Azure.Storage.Files.DataLake.dll"
  File "..\ibaDatCoordinator\bin\Release\System.Threading.Tasks.Extensions.dll"
  File "..\ibaDatCoordinator\bin\Release\System.Diagnostics.DiagnosticSource.dll"
  File "..\ibaDatCoordinator\bin\Release\System.Text.Encodings.Web.dll"
  File "..\ibaDatCoordinator\bin\Release\System.ValueTuple.dll"
  File "..\ibaDatCoordinator\bin\Release\System.Text.Json.dll"
  ;GRPC
  File "..\ibaDatCoordinator\bin\Release\Google.Protobuf.dll"
  File "..\ibaDatCoordinator\bin\Release\Grpc.Core.Api.dll"
  File "..\ibaDatCoordinator\bin\Release\Grpc.Core.dll"
  File "..\ibaDatCoordinator\bin\Release\grpc_csharp_ext.x64.dll"
  File "..\ibaDatCoordinator\bin\Release\grpc_csharp_ext.x86.dll"
  File "..\ibaDatCoordinator\bin\Release\System.Memory.dll"
  File "..\ibaDatCoordinator\bin\Release\System.Runtime.CompilerServices.Unsafe.dll"
  File "..\ibaDatCoordinator\bin\Release\System.Buffers.dll"
  File "..\ibaDatCoordinator\bin\Release\System.Numerics.Vectors.dll"
  ;OPC UA
  File "..\Dependencies\OpcUa\Opc.Ua.Configuration.dll"
  File "..\Dependencies\OpcUa\Opc.Ua.Core.dll"
  File "..\Dependencies\OpcUa\Opc.Ua.Server.dll"
  File "..\Dependencies\OpcUa\BouncyCastle.Crypto.dll"
  File "..\Dependencies\OpcUa\Newtonsoft.Json.dll"
  File "..\Dependencies\OpcUa\ibaDatCoordinatorOpcUaServerConfig.xml"
  ;HD-stuff
  File "..\InstallFiles\Protected\hdCore.dll"
  File "..\InstallFiles\Protected\hdClient.dll"
  File "..\InstallFiles\Obfuscated\hdClientFiles.dll"
  File "..\Dependencies\hdCommon.dll"
  File "..\Dependencies\hdProtoBuf.dll"
  File "..\Dependencies\hdClientInterfaces.dll"
  File "..\Dependencies\ibaUser.dll"
  File "..\Dependencies\ibaUser.Forms.dll"
  ;Kafka
  File "..\Dependencies\Kafka\x86\libeay32.dll"
  File "..\Dependencies\Kafka\x86\librdkafka.dll"
  File "..\Dependencies\Kafka\x86\libzstd.dll"
  File "..\Dependencies\Kafka\x86\ssleay32.dll"
  File "..\Dependencies\Kafka\x86\zlibwapi.dll"
  File "..\Dependencies\Kafka\Avro.dll"
  File "..\Dependencies\Kafka\Confluent.Kafka.dll"
  File "..\Dependencies\Kafka\Confluent.SchemaRegistry.dll"
  
  File "..\DatCoordinatorPlugins\bin\Release\DatCoordinatorPlugins.dll"
  File "..\InstallFiles\Protected\ibaDatCoordinator.exe"
  File "..\ibaDatCoordinator\bin\Release\ibaDatCoordinator.exe.config"
  File "..\InstallFiles\Protected\DatCoUtil.dll"
  
  ; runtime
  File "..\InstallFiles\Protected\ibaRuntime.dll"

  File "versions_dat.htm"
  File "LicenseInformation.txt"
  File "License_Agreement_DatCoordinator.pdf"
  File "Support.htm"
  
  ; dongle viewer
  SetOutPath "$INSTDIR"
  File "..\Dependencies\ibaDongleViewerSetup.exe"
  nsExec::Exec '"$INSTDIR\ibaDongleViewerSetup.exe" /S'
  Delete "$INSTDIR\ibaDongleViewerSetup.exe"
  
  ; silently install certificate
  SetOutPath "$INSTDIR"
  File "DigiCertAssuredIDRootCA.crt"
  Push "$INSTDIR\DigiCertAssuredIDRootCA.crt"
  Call AddCertificateToStore
  Pop $9
  ${If} $9 <> "success"
    !insertmacro WriteToInstallHistory "Installing certificate failed with error: $9"
  ${EndIf}
  
  ;help files
  File "..\iDatCo_HTML_Help\*.chm"
  
  ;Copy resources
  !insertmacro InstallLanguageCommon "de" "German"
  !insertmacro InstallLanguageCommon "fr" "French"
  !insertmacro InstallLanguageCommon "es" "Spanish"
  ;!insertmacro InstallLanguageCommon "it" "Italian"
  ;!insertmacro InstallLanguageCommon "ru" "Russian"
  ;!insertmacro InstallLanguageCommon "zh-Hans" "Chinese"
  ;!insertmacro InstallLanguageCommon "ja" "Japanese"
  ;!insertmacro InstallLanguageCommon "pt" "Portuguese"
  
  ;plugins
  SetOutPath "$INSTDIR\plugins"
  File "..\Dependencies\hd_plugin.dll"

SectionEnd

Section $(DESC_DATCOOR_NOSERVICE) DATCOOR_NOSERVICE
  SetOverwrite on
  ;MessageBox MB_OK "Debug in DATCOOR_NOSERVICE (1)"
  
  SetOutPath "$INSTDIR"

  ;Create uninstall shortcut
  CreateDirectory "$SMPROGRAMS\$StartMenuFolder"
  CreateShortCut "$SMPROGRAMS\$StartMenuFolder\ibaDatCoordinator.lnk" "$INSTDIR\ibaDatCoordinator.exe"
  CreateDirectory "$LOCALAPPDATA\iba\ibaDatCoordinator"
  CreateShortCut "$SMPROGRAMS\$StartMenuFolder\$(TEXT_LOG_FILES).lnk" "$LOCALAPPDATA\iba\ibaDatCoordinator"
  
  ;MessageBox MB_OK "Debug Writing 0"
  
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Server" "0"
  !insertmacro WriteToInstallHistory "Finished installing stand alone version of ${PRODUCT_NAME} v${PRODUCT_VERSION}"
  
SectionEnd

!macro InstallLanguageService LANGPREFIX LANGDISPLAY

  DetailPrint "Installing ${LANGDISPLAY} service files"

  ;Copy files
  SetOutPath "$INSTDIR\${LANGPREFIX}"
  File "..\Passolo\${LANGPREFIX}\ibaDatCoordinatorStatus.resources.dll"

!macroend

Section $(DESC_DATCOOR_SERVICE) DATCOOR_SERVICE
  SetOverwrite on
  
  ;MessageBox MB_OK "Debug in DATCOOR_SERVICE (2)"
  ;Copy server files
  SetOutPath "$INSTDIR"
  File "..\InstallFiles\Protected\ibaDatCoordinatorService.exe"
  File "..\ibaDatCoordinatorStatus\bin\release\ibaDatCoordinatorStatus.exe"

  ;Copy resources
  !insertmacro InstallLanguageService "de" "German"
  !insertmacro InstallLanguageService "fr" "French"
  !insertmacro InstallLanguageService "es" "Spanish"
  ;!insertmacro InstallLanguageService "it" "Italian"
  ;!insertmacro InstallLanguageService "ru" "Russian"
  ;!insertmacro InstallLanguageService "zh-Hans" "Chinese"
  ;!insertmacro InstallLanguageService "ja" "Japanese"
  ;!insertmacro InstallLanguageService "pt" "Portuguese"

  ;Install service
  DetailPrint $(TEXT_SERVICE_INSTALL)
  !insertmacro MUI_INSTALLOPTIONS_READ $R0 "ServiceAccount.ini" "Field 2" "State" ;local system
  ${If} $R0 == "1"
    StrCpy $ServiceUserName ""
    StrCpy $ServicePassword ""
  ${Else}
    !insertmacro MUI_INSTALLOPTIONS_READ $ServiceUserName "ServiceAccount.ini" "Field 5" "State" ;user name
    !insertmacro MUI_INSTALLOPTIONS_READ $ServicePassword "ServiceAccount.ini" "Field 7" "State" ;password
  ${EndIf}
  nsSCMEx::Install /NOUNLOAD "ibaDatCoordinatorService" "iba DatCoordinator Service" 0x010 2 "$INSTDIR\ibaDatCoordinatorService.exe" "" "" $ServiceUserName $ServicePassword
  Pop $R0
  ${If} $R0 != "success"
    Pop $R0
    MessageBox MB_OK|MB_ICONSTOP "Error installing service, error code $R0" 
  ${EndIf}
  
  ;MessageBox MB_OK "Debug Writing 1"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Server" "1"
  ;Save username and password
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Service1" $ServiceUserName
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Service2" $ServicePassword

  ;Add serverstatus to autorun
  WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Run" "ibaDatCoordinator service status" "$INSTDIR\ibaDatCoordinatorStatus.exe"

  ;printer stuff
  SetOutPath "$INSTDIR"
  File "createundoregfile.bat"
  nsExec::Exec '"$INSTDIR\createundoregfile.bat"'
  File "Copy_Printer_Settings_To_System_Account.bat"
  nsExec::Exec '"$INSTDIR\Copy_Printer_Settings_To_System_Account.bat"'
  Delete "$INSTDIR\createundoregfile.bat"
  nsSCMEx::Stop /NOUNLOAD "Spooler"
  nsSCMEx::Start /NOUNLOAD "Spooler"

  ;add firewall exceptions...
  nsSCMEx::FirewallIsAvailable
  Pop $R0
  ${If} $R0 == "1"
    DetailPrint $(TEXT_CONFIGURE_FIREWALL)
    nsSCMEx::FirewallAddApplication /NOUNLOAD "$INSTDIR\ibaDatCoordinator.exe" "ibaDatCoordinator client"
    nsSCMEx::FirewallAddApplication /NOUNLOAD "$INSTDIR\ibaDatCoordinatorService.exe" "ibaDatCoordinator server"
  ${EndIf}
  
  ;shortcut
  CreateDirectory "$SMPROGRAMS\$StartMenuFolder"
  CreateShortCut "$SMPROGRAMS\$StartMenuFolder\ibaDatCoordinator Server Status.lnk" "$INSTDIR\ibaDatCoordinatorStatus.exe" "" 
  CreateShortCut "$SMPROGRAMS\$StartMenuFolder\ibaDatCoordinator Client.lnk" "$INSTDIR\ibaDatCoordinator.exe" "/service" 
  CreateDirectory "$APPDATA\iba\ibaDatCoordinator"
  CreateShortCut "$SMPROGRAMS\$StartMenuFolder\$(TEXT_LOG_FILES).lnk" "$APPDATA\iba\ibaDatCoordinator"

  ;Set port number if necessary
  
  ${If} $PortNumber != "0"
  Exec '"$INSTDIR\ibaDatCoordinatorStatus.exe" /setportnumber:$PortNumber'
  ${EndIf}
 
  ;Start service
  nsSCMEx::Start /NOUNLOAD "ibaDatCoordinatorService"
  
  ;Start service status
  Exec "$INSTDIR\ibaDatCoordinatorStatus.exe"
  
  !insertmacro WriteToInstallHistory "Finished installing client-server version of ${PRODUCT_NAME} v${PRODUCT_VERSION}"
  
SectionEnd

Section $(DESC_DATCOOR_CLIENT) DATCOOR_CLIENT
  SetOverwrite on
  ;MessageBox MB_OK "Debug in DATCOOR_CLIENT(3)"

  ;add firewall exceptions...
  nsSCMEx::FirewallIsAvailable
  Pop $R0
  ${If} $R0 == "1"
    DetailPrint $(TEXT_CONFIGURE_FIREWALL)
    nsSCMEx::FirewallAddApplication /NOUNLOAD "$INSTDIR\ibaDatCoordinator.exe" "ibaDatCoordinator client"
  ${EndIf}
  
  CreateDirectory "$SMPROGRAMS\$StartMenuFolder"
  CreateShortCut "$SMPROGRAMS\$StartMenuFolder\ibaDatCoordinator Client.lnk" "$INSTDIR\ibaDatCoordinator.exe" "/service"
  CreateDirectory "$LOCALAPPDATA\iba\ibaDatCoordinator"
  CreateShortCut "$SMPROGRAMS\$StartMenuFolder\$(TEXT_LOG_FILES).lnk" "$LOCALAPPDATA\iba\ibaDatCoordinator"
  
  ;MessageBox MB_OK "Debug writing 2"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Server" "2"
  !insertmacro WriteToInstallHistory "Finished installing client-only version of ${PRODUCT_NAME} v${PRODUCT_VERSION}"
SectionEnd

Section -Post

!ifdef DO_UNINSTALLER_SIGNING
  SetOutPath $INSTDIR
  File "..\InstallFiles\uninst.exe"
!else
  WriteUninstaller "$INSTDIR\uninst.exe"
!endif

  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\ibaDatCoordinator.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "HelpLink" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "InstallDir" "$INSTDIR"
  WriteRegDWORD ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "NoModify" 1
  WriteRegDWORD ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "NoRepair" 1
  CreateDirectory "$SMPROGRAMS\$StartMenuFolder"
  CreateShortCut "$SMPROGRAMS\$StartMenuFolder\$(TEXT_UNINSTALL).lnk" "$INSTDIR\uninst.exe"
  
  ;Refresh icons
  DetailPrint "Clearing icon cache"
  ${If} $Is64Bit == 1
    ${DisableX64FSRedirection}
    ${If} $WinVer == "10"
    ${OrIf} $WinVer == "2016"
    ${OrIf} $WinVer == "2019"
      nsExec::Exec '"$SYSDIR\ie4uinit.exe" -show'
    ${Else}
      nsExec::Exec '"$SYSDIR\ie4uinit.exe" -ClearIconCache'
    ${EndIf}
    ${EnableX64FSRedirection}
  ${Else}
    ${If} $WinVer == "10"
    ${OrIf} $WinVer == "2016"
    ${OrIf} $WinVer == "2019"
      nsExec::Exec '"$SYSDIR\ie4uinit.exe" -show'
    ${Else}
      nsExec::Exec '"$SYSDIR\ie4uinit.exe" -ClearIconCache'
    ${EndIf}
  ${EndIf}
  
  nsSCMEx::Unload
SectionEnd

;Check if there is an MPI dongle installed with ibaDatCoordinator related licenses
Function CheckForMpiDongle

  nsSCMEx::ReadDongleType /NOUNLOAD
  Pop $R0

  ${If} $R0 == "MPI"
    nsSCMEx::ReadDongleOption /NOUNLOAD "61" ;Check ibaDatCoordinator license
    Pop $R1
    IntCmp $R1 0 +1 +1 mpi_warning
  ${EndIf}

  Return

mpi_warning:

  nsSCMEx::ReadDongleLicenseNr /NOUNLOAD
  Pop $LicenseNr

  MessageBox MB_OK|MB_ICONSTOP $(TEXT_MPI_NOT_SUPPORTED)
  Quit

FunctionEnd

Function InstalltypeSelect

  IfSilent lbl_applySelect +1

  !insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 1" "Text" "$(TEXT_INSTALLSTANDALONE)"
  !insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 2" "Text" "$(TEXT_INSTALLSERVICE)"
  !insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 3" "Text" "$(TEXT_INSTALLCLIENT)"
  !insertmacro MUI_HEADER_TEXT "$(TEXT_SERVICEORSTANDALONE_TITLE)" "$(TEXT_SERVICEORSTANDALONE_SUBTITLE)"
  StrCpy $0 $InstallTypeSelection
  ;ReadRegStr $0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Server"
  
  ${If} $0 == "0"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 1" "State" "1"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 2" "State" "0"
	!insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 3" "State" "0"
  ${ElseIf} $0 == "1"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 1" "State" "0"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 2" "State" "1"
	!insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 3" "State" "0"
  ${Else}
    !insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 1" "State" "0"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 2" "State" "0"
	!insertmacro MUI_INSTALLOPTIONS_WRITE "serviceorstandalone.ini" "Field 3" "State" "1"
  ${EndIf}
  
  
  
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "serviceorstandalone.ini"
  !insertmacro MUI_INSTALLOPTIONS_READ $0 "serviceorstandalone.ini" "Field 1" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $1 "serviceorstandalone.ini" "Field 2" "State"
	
  ${If} $0 == "0"
  ${AndIf} $1 == "0"
    StrCpy $InstallTypeSelection "2"
  ${Else}
    StrCpy $InstallTypeSelection $1
  ${EndIf}
  
 lbl_applySelect:
 
  StrCpy $CheckMpi 0
 
  SectionGetFlags ${DATCOOR_NOSERVICE} $R0
  ${If} $InstallTypeSelection == "0"
    IntOp $R1 $R0 | ${SF_SELECTED}
    SectionSetFlags ${DATCOOR_NOSERVICE} $R1
    StrCpy $CheckMpi 1
  ${Else}
    IntOp $R1 $R0 & ~${SF_SELECTED}
    SectionSetFlags ${DATCOOR_NOSERVICE} $R1
  ${EndIf}
  
  SectionGetFlags ${DATCOOR_SERVICE} $R0
  ${If} $InstallTypeSelection == "1"
    IntOp $R1 $R0 | ${SF_SELECTED}
    SectionSetFlags ${DATCOOR_SERVICE} $R1
    StrCpy $CheckMpi 1
  ${Else}
    IntOp $R1 $R0 & ~${SF_SELECTED}
    SectionSetFlags ${DATCOOR_SERVICE} $R1
  ${EndIf}
  
  SectionGetFlags ${DATCOOR_CLIENT} $R0
  ${If} $InstallTypeSelection == "2"
    IntOp $R1 $R0 | ${SF_SELECTED}
    SectionSetFlags ${DATCOOR_CLIENT} $R1
  ${Else}
    IntOp $R1 $R0 & ~${SF_SELECTED}
    SectionSetFlags ${DATCOOR_CLIENT} $R1
  ${EndIf}
  
  ${If} $CheckMpi == 1
    Call CheckForMpiDongle
  ${EndIf}

FunctionEnd


!ifndef DO_UNINSTALLER_SIGNING
;--------------------------------
; Uninstall section

Section Uninstall

  SetShellVarContext all
  !insertmacro WriteToInstallHistory "Uninstalling ${PRODUCT_NAME} v${PRODUCT_VERSION} (Command line: $CMDLINE)"
  
 ;Remove exceptions from firewall
  nsSCMEx::FirewallIsAvailable
  Pop $R0
  ${If} $R0 == "1"
    DetailPrint $(TEXT_CONFIGURE_FIREWALL)
    nsSCMEx::FirewallRemoveApplication /NOUNLOAD "$INSTDIR\ibaDatCoordinator.exe" "ibaDatCoordinator client or status"
	nsSCMEx::FirewallRemoveApplication /NOUNLOAD "$INSTDIR\ibaDatCoordinatorService.exe" "ibaDatCoordinator server"
  ${EndIf}
  
  ReadRegStr $0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Server"
  ${If} $0 == "1"
    Call un.UninstallService
	  ;Log installation
	!insertmacro WriteToInstallHistory "Finished uninstalling service component for ${PRODUCT_NAME} v${PRODUCT_VERSION}"
  ${EndIf}

  Call un.UninstallTasks
  !insertmacro WriteToInstallHistory "Finished uninstalling client component for ${PRODUCT_NAME} v${PRODUCT_VERSION}"

  ;Delete uninstaller
  Delete "$INSTDIR\uninst.exe"

  ;Delete shortcuts
  RMDir /r "$SMPROGRAMS\ibaDatCoordinator"
  RMDir /r "$SMPROGRAMS\iba\ibaDatCoordinator"
  RMDir "$SMPROGRAMS\iba" ;it will only be removed when it is empty

  ;Delete "Add/Remove programs" registry keys
  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  nsSCMEx::Unload  
  SetAutoClose true
SectionEnd

!macro UnInstallLanguageCommon LANGPREFIX LANGDISPLAY

  DetailPrint "Uninstalling ${LANGDISPLAY} common files"

  Delete "$INSTDIR\${LANGPREFIX}\ibaDatCoordinator.resources.dll"
  Delete "$INSTDIR\${LANGPREFIX}\hdClient.resources.dll"
  Delete "$INSTDIR\${LANGPREFIX}\hdClientFiles.resources.dll"
  Delete "$INSTDIR\${LANGPREFIX}\hdCommon.resources.dll"
  Delete "$INSTDIR\${LANGPREFIX}\hd_plugin.resources.dll"
  Delete "$INSTDIR\${LANGPREFIX}\ibaUser*.resources.dll"

  RMDir "$INSTDIR\${LANGPREFIX}"

!macroend


Function un.UninstallTasks

  ;Check if client is still running
  again:
  ClearErrors
  Delete "$INSTDIR\ibaDatCoordinator.exe"
  IfErrors 0 ok
    MessageBox MB_RETRYCANCEL|MB_ICONSTOP|MB_SETFOREGROUND $(TEXT_CLOSE_CLIENT) IDRETRY again
      Quit
  ok:
  Delete "$INSTDIR\ibaDatCoordinator.exe.config"

  Delete "$INSTDIR\*.chm"
  Delete "$INSTDIR\ibaLogger.dll"
  Delete "$INSTDIR\Eyefinder.dll"
  Delete "$INSTDIR\DatCoUtil.dll"
  Delete "$INSTDIR\DatCoordinatorPlugins.dll"
  Delete "$INSTDIR\DotNetMagic.dll"
  Delete "$INSTDIR\DotNetMagic2005.dll"
  Delete "$INSTDIR\ibaFilesV7LiteDotNet.dll"
  
  Delete "$INSTDIR\hdCore.dll"
  Delete "$INSTDIR\hdClient.dll"
  Delete "$INSTDIR\hdClientFiles.dll"
  Delete "$INSTDIR\hdClientInterfaces.dll"
  Delete "$INSTDIR\hdCommon.dll"
  Delete "$INSTDIR\hdProtoBuf.dll"
  Delete "$INSTDIR\ibaUser.dll"
  Delete "$INSTDIR\ibaUser.Forms.dll"
  Delete "$INSTDIR\PowerCollections.dll"
  Delete "$INSTDIR\GenuineChannels.dll"
  Delete "$INSTDIR\Zyan.SafeDeserializationHelpers.dll"

  Delete "$INSTDIR\libeay32.dll"
  Delete "$INSTDIR\librdkafka.dll"
  Delete "$INSTDIR\libzstd.dll"
  Delete "$INSTDIR\ssleay32.dll"
  Delete "$INSTDIR\zlibwapi.dll"
  Delete "$INSTDIR\Avro.dll"
  Delete "$INSTDIR\Confluent.Kafka.dll"
  Delete "$INSTDIR\Confluent.SchemaRegistry.dll"

  Delete "$INSTDIR\ibaSnmpLib.dll"
  Delete "$INSTDIR\WinSCPnet.dll"
  Delete "$INSTDIR\WinSCP.exe"
  Delete "$INSTDIR\Opc.Ua.Configuration.dll"
  Delete "$INSTDIR\Opc.Ua.Core.dll"
  Delete "$INSTDIR\Opc.Ua.Server.dll"
  Delete "$INSTDIR\BouncyCastle.Crypto.dll"
  Delete "$INSTDIR\Newtonsoft.Json.dll"
  Delete "$INSTDIR\ibaDatCoordinatorOpcUaServerConfig.xml"

  Delete "$INSTDIR\DevExpress.XtraEditors.v16.1.dll"
  Delete "$INSTDIR\DevExpress.XtraGrid.v16.1.dll"
  Delete "$INSTDIR\DevExpress.Data.v16.1.dll"
  Delete "$INSTDIR\DevExpress.Utils.v16.1.dll"
  Delete "$INSTDIR\DevExpress.Sparkline.v16.1.Core.dll"
  Delete "$INSTDIR\DevExpress.Printing.v16.1.Core.dll"

  Delete "$INSTDIR\ICSharpCode.TextEditor.dll"
  Delete "$INSTDIR\ICSharpCode.SharpZipLib.dll"
  Delete "$INSTDIR\msvcr100.dll"
  Delete "$INSTDIR\msvcp100.dll"
  Delete "$INSTDIR\versions_dat.htm"
  Delete "$INSTDIR\LicenseInformation.txt"
  Delete "$INSTDIR\License_Agreement_DatCoordinator.pdf"
  Delete "$INSTDIR\Support.htm"
  Delete "$INSTDIR\Copy_Printer_Settings_To_System_Account.bat"
  Delete "$INSTDIR\createundoregfile.bat"
  Delete "$INSTDIR\DigiCertAssuredIDRootCA.crt"

  Delete "$INSTDIR\Azure.Core.dll"
  Delete "$INSTDIR\Azure.Storage.Blobs.dll"
  Delete "$INSTDIR\Azure.Storage.Common.dll"
  Delete "$INSTDIR\Azure.Storage.Files.DataLake.dll"
  Delete "$INSTDIR\System.Threading.Tasks.Extensions.dll"
  Delete "$INSTDIR\System.Diagnostics.DiagnosticSource.dll"
  Delete "$INSTDIR\System.Text.Encodings.Web.dll"
  Delete "$INSTDIR\System.ValueTuple.dll"
  Delete "$INSTDIR\System.Text.Json.dll"
  Delete "$INSTDIR\Google.Protobuf.dll"
  Delete "$INSTDIR\Grpc.Core.Api.dll"
  Delete "$INSTDIR\Grpc.Core.dll"
  Delete "$INSTDIR\grpc_csharp_ext.x64.dll"
  Delete "$INSTDIR\grpc_csharp_ext.x86.dll"
  Delete "$INSTDIR\System.Memory.dll"
  Delete "$INSTDIR\System.Runtime.CompilerServices.Unsafe.dll"
  Delete "$INSTDIR\System.Buffers.dll"
  Delete "$INSTDIR\System.Numerics.Vectors.dll"

  ; runtime
  Delete "$INSTDIR\ibaRuntime.dll"
  
  ;Remove resources
  !insertmacro UnInstallLanguageCommon "de" "German"
  !insertmacro UnInstallLanguageCommon "fr" "French"
  !insertmacro UnInstallLanguageCommon "es" "Spanish"
  ;!insertmacro UnInstallLanguageCommon "it" "Italian"
  ;!insertmacro UnInstallLanguageCommon "ru" "Russian"
  ;!insertmacro UnInstallLanguageCommon "zh-Hans" "Chinese"
  ;!insertmacro UnInstallLanguageCommon "ja" "Japanese"
  ;!insertmacro UnInstallLanguageCommon "pt" "Portuguese"

  ;plugins
  Delete "$INSTDIR\plugins\hd_plugin.dll"
  RMDir "$INSTDIR\plugins"
  ;Remove install dir
  RMDir "$INSTDIR"
FunctionEnd

!macro UnInstallLanguageService LANGPREFIX LANGDISPLAY

  DetailPrint "Uninstalling ${LANGDISPLAY} service files"

  Delete "$INSTDIR\${LANGPREFIX}\ibaDatCoordinatorStatus.resources.dll"

  RMDir "$INSTDIR\${LANGPREFIX}"

!macroend

Function un.UninstallService
  ;Trigger close of all server status instances
  DetailPrint $(TEXT_STATUS_STOP)
  WriteRegDWORD HKLM "SOFTWARE\iba\ibaDatCoordinator\Uninstall" "isBusy" 0
  WriteRegDWORD HKLM "SOFTWARE\iba\ibaDatCoordinator\Uninstall" "isBusy" 1
  Sleep 500

  ;Check if server status programs are still running
  StrCpy $R0 "0"
  StrCpy $R1 "10"
  againStatus:
  ClearErrors
  Delete "$INSTDIR\ibaDatCoordinatorStatus.exe"
  IfErrors 0 okStatus
    DetailPrint "Attempt $R0 failed"
    Sleep 1000
    IntOp $R0 $R0 + 1
    IntCmp $R0 $R1 timeoutStatus againStatus
  timeoutStatus:
  StrCpy $R0 "0"
  StrCpy $R1 "1"
  MessageBox MB_RETRYCANCEL|MB_ICONSTOP|MB_SETFOREGROUND $(TEXT_CLOSE_STATUS) IDRETRY againStatus
    Quit
  okStatus:
  
  ;Remove resources
  !insertmacro UnInstallLanguageService "de" "German"
  !insertmacro UnInstallLanguageService "fr" "French"
  !insertmacro UnInstallLanguageService "es" "Spanish"
  ;!insertmacro UnInstallLanguageService "it" "Italian"
  ;!insertmacro UnInstallLanguageService "ru" "Russian"
  ;!insertmacro UnInstallLanguageService "zh-Hans" "Chinese"
  ;!insertmacro UnInstallLanguageService "ja" "Japanese"
  ;!insertmacro UnInstallLanguageService "pt" "Portuguese"

  ;Clear uninstall is busy flag
  WriteRegDWORD HKLM "SOFTWARE\iba\ibaPDA\Uninstall" "isBusy" 0
  
  ;uninstall the service

  ;Stop service
  DetailPrint $(TEXT_SERVICE_STOP)
  nsSCMEx::Stop /NOUNLOAD "ibaDatCoordinatorService"

  ;Delete service
  DetailPrint $(TEXT_SERVICE_REMOVE)
  nsSCMEx::Remove /NOUNLOAD "ibaDatCoordinatorService"

  Delete "$INSTDIR\ibaDatCoordinatorService.exe"
  IfErrors 0 +2
    Call un.waitAndDelete

  
  ;Remove server status from autorun
  DeleteRegValue HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Run" "ibaDatCoordinator service status"

FunctionEnd

Function un.WaitAndDelete
  Sleep 1000
  Delete "$INSTDIR\ibaDatCoordinatorService.exe"
  IfErrors -2 0
FunctionEnd

!endif ;DO_UNINSTALLER_SIGNING

;--------------------------------
; Description of sections

;!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
;  !insertmacro MUI_DESCRIPTION_TEXT ${SECDOTNET}       $(DESC_LONGDOTNET)
;  !insertmacro MUI_DESCRIPTION_TEXT ${DATCOOR_NOSERVICE}   $(DESC_DatCoor_NoService2)
;  !insertmacro MUI_DESCRIPTION_TEXT ${DATCOOR_SERVICE}   $(DESC_DatCoor_Service2)
;!insertmacro MUI_FUNCTION_DESCRIPTION_END


;--------------------------------
; Usefull functions
/*
Function GetDotNETVersion
  Push $0
  Push $1

  System::Call "mscoree::GetCORVersion(w .r0, i ${NSIS_MAX_STRLEN}, *i) i .r1"
  StrCmp $1 "error" 0 +2
  StrCpy $0 "not found"

  Pop $1
  Exch $0
FunctionEnd
*/

Function GetDotNETVersion
  Push $0
  Push $1
  Push $2
  StrCpy $0 ""
  StrCpy $1 ""
  StrCpy $2 ""
  
  ;in x64
  ;ReadRegDWORD $0 HKLM "SOFTWARE\Wow6432node\Microsoft\NET Framework Setup\NDP\v4\Full" "Install"
  
  ;Check if v4.7.2 or higher is installed
  ReadRegDWORD $2 HKLM "SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full" "Install"
  ${If} $2 = 1
    ReadRegDWORD $2 HKLM "SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full" "Release"
    ${If} $2 = 378389
      StrCpy $0 "4.5"
    ${ElseIf} $2 = 378675
    ${OrIf} $2 = 378758
      StrCpy $0 "4.5.1"
    ${ElseIf} $2 = 379893
      StrCpy $0 "4.5.2"
    ${ElseIf} $2 = 393295
    ${OrIf} $2 = 393297
      StrCpy $0 "4.6"
    ${ElseIf} $2 = 394254
    ${OrIf} $2 = 394271
      StrCpy $0 "4.6.1"
    ${ElseIf} $2 = 394802
    ${OrIf} $2 = 394806
      StrCpy $0 "4.6.2"
    ${ElseIf} $2 = 460798
    ${OrIf} $2 = 460805
      StrCpy $0 "4.7"
    ${ElseIf} $2 = 461308
    ${OrIf} $2 = 461310
      StrCpy $0 "4.7.1"
    ${ElseIf} $2 = 461808
    ${OrIf} $2 = 461814
      StrCpy $0 "4.7.2"
    ${ElseIf} $2 = 528040
    ${OrIf} $2 = 528049
      StrCpy $0 "4.8.0"
    ${ElseIf} $2 > 528049 ; For future versions
      StrCpy $0 "4.8.0"
    ${EndIf}
  ${EndIf}
  
  
  ;Check if v3.5 is installed
  ReadRegDWORD $2 HKLM "SOFTWARE\Microsoft\NET Framework Setup\NDP\v3.5" "Install"
  StrCmp $2 "1" +1 +3
  StrCpy $1 "3.5"
  Goto end
  
  ;Check if v3.0 is installed
  ReadRegDWORD $2 HKLM "SOFTWARE\Microsoft\NET Framework Setup\NDP\v3.0" "Install"
  StrCmp $2 "1" +1 +3
  StrCpy $1 "3.0"
  Goto end
  
  ;Check if v2.0 is installed
  ReadRegDWORD $2 HKLM "SOFTWARE\Microsoft\NET Framework Setup\NDP\v2.0.50727" "Install"
  StrCmp $2 "1" +1 +3
  StrCpy $1 "2.0.50727"
  Goto end
  
  ;Check if v1.1 is installed
  ;ReadRegDWORD $0 HKLM "SOFTWARE\Microsoft\NET Framework Setup\NDP\v1.1.4322" "Install"
  ;StrCmp $0 "1" +1 +3
  ;StrCpy $0 "1.1.4322"
  ;Goto end
  
  ;StrCpy $0 "none"

  end:
  Pop $2
  Exch $1
  Exch 1
  Exch $0
FunctionEnd

;--------------------------------
; Parse the version number
; x.y.z            --> x*1000000 + y*10000 + z*100 + 99
; x.y.z BETA       --> x*1000000 + y*10000 + z*100 + 0
; x.y.z BETAa      --> x*1000000 + y*10000 + z*100 + a

Function GetVersionNr
;  $R5 : version string
;  $0  : version number
;  $1  : element string
;  $2  : character counter
;  $3  : multiplicator
;  $4  : temp character

  Exch $R5
  Push $0
  Push $1
  Push $2
  Push $3
  Push $4

  StrCpy $0 "0"
  StrCpy $1 ""
  StrCpy $2 "-1"
  StrCpy $3 "1000000"

  loop:
  IntOp $2 $2 + 1
  StrCpy $4 $R5 1 $2   ;Copy next character from version string
  StrCmp $4 "" dotFound
  StrCmp $4 " " dotFound
  StrCmp $4 "." dotFound
  StrCpy $1 $1$4       ;Add character to element string
  Goto loop

  dotFound:
  IntOp $1 $1 * $3     ;Multiply value with its weight
  IntOp $0 $0 + $1     ;Add weighted value to version nr
  IntOp $3 $3 / 100    ;Decrease weight of next value
  StrCpy $1 ""         ;Initialize element string
  StrCmp $4 "." loop

  ${StrLoc} $2 $R5 "BETA" "<"
  ${If} $2 != ""
    ;Get BETA number
    ${If} $2 > 0
      IntOp $2 $2 * -1
      StrCpy $1 $R5 10 $2  ;Copy BETA number to $1
      IntOp $0 $0 + $1  ;Add BETA number to version number
    ${EndIf}
  ${Else}
    IntOp $0 $0 + 99  ;Add 99 to version number if it is not a BETA version
  ${EndIf}

  Pop $4
  Pop $3
  Pop $2
  Pop $1
  StrCpy $R5 $0
  Pop $0
  Exch $R5

FunctionEnd


!define CERT_QUERY_OBJECT_FILE 1
!define CERT_QUERY_CONTENT_FLAG_ALL 16382
!define CERT_QUERY_FORMAT_FLAG_ALL 14
!define CERT_STORE_PROV_SYSTEM 10
!define CERT_STORE_OPEN_EXISTING_FLAG 0x4000
!define CERT_SYSTEM_STORE_LOCAL_MACHINE 0x20000
!define CERT_STORE_ADD_ALWAYS 4
 
Function AddCertificateToStore
 
  Exch $0
  Push $1
  Push $R0
 
  System::Call "crypt32::CryptQueryObject(i ${CERT_QUERY_OBJECT_FILE}, w r0, \
    i ${CERT_QUERY_CONTENT_FLAG_ALL}, i ${CERT_QUERY_FORMAT_FLAG_ALL}, \
    i 0, i 0, i 0, i 0, i 0, i 0, *i .r0) i .R0"
 
  ${If} $R0 <> 0
 
    System::Call "crypt32::CertOpenStore(i ${CERT_STORE_PROV_SYSTEM}, i 0, i 0, \
      i ${CERT_STORE_OPEN_EXISTING_FLAG}|${CERT_SYSTEM_STORE_LOCAL_MACHINE}, \
      w 'ROOT') i .r1"
 
    ${If} $1 <> 0
 
      System::Call "crypt32::CertAddCertificateContextToStore(i r1, i r0, \
        i ${CERT_STORE_ADD_ALWAYS}, i 0) i .R0"
      System::Call "crypt32::CertFreeCertificateContext(i r0)"
 
      ${If} $R0 = 0
 
        StrCpy $0 "Unable to add certificate to certificate store"
 
      ${Else}
 
        StrCpy $0 "success"
 
      ${EndIf}
 
      System::Call "crypt32::CertCloseStore(i r1, i 0)"
 
    ${Else}
 
      System::Call "crypt32::CertFreeCertificateContext(i r0)"
 
      StrCpy $0 "Unable to open certificate store"
 
    ${EndIf}
 
  ${Else}
 
    StrCpy $0 "Unable to open certificate file"
 
  ${EndIf}
 
  Pop $R0
  Pop $1
  Exch $0
 
FunctionEnd

;--------------------------------
; Service account page

Function ServiceAccountPage
  ;Check if install as service is selected
  ${Unless} ${SectionIsSelected} ${DATCOOR_SERVICE}
    Abort
  ${EndUnless}
  !insertmacro MUI_HEADER_TEXT "$(TEXT_SERVICEACCOUNT_TITLE)" "$(TEXT_SERVICEACCOUNT_SUBTITLE)"
  ${If} $ServiceUserName == ""
    !insertmacro MUI_INSTALLOPTIONS_WRITE "ServiceAccount.ini" "Field 2" "State" "1"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "ServiceAccount.ini" "Field 3" "State" "0"
  ${Else}
    !insertmacro MUI_INSTALLOPTIONS_WRITE "ServiceAccount.ini" "Field 2" "State" "0"
    !insertmacro MUI_INSTALLOPTIONS_WRITE "ServiceAccount.ini" "Field 3" "State" "1"
  ${EndIf}
  !insertmacro MUI_INSTALLOPTIONS_WRITE "ServiceAccount.ini" "Field 5" "State" $ServiceUserName
  !insertmacro MUI_INSTALLOPTIONS_WRITE "ServiceAccount.ini" "Field 7" "State" $ServicePassword
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "ServiceAccount.ini"

FunctionEnd

Function OnEnd
  ReadRegStr $0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Server"
  ${If} $0 == "1"
  ${OrIf} $0 == "2"
    strcpy $1 '"$INSTDIR\ibaDatCoordinator.exe" /service'
  ${Else}
    strcpy $1 '"$INSTDIR\ibaDatCoordinator.exe"'
  ${EndIf}

  nsSCMEx::RunAsNonElevatedUser /NOUNLOAD "$INSTDIR\ibaDatCoordinator.exe" $1 "$INSTDIR"

  Pop $R0
  ${If} $R0 != "success"
    ;ibaPDA couldn't be started non-elevated so let's start it normally
    Exec $1
  ${EndIf}

  FunctionEnd

Function FinishShow 
  GetDlgItem $0 $MUI_HWND 0x4b4 
# $MUI_HWND contains the window handle for MUI's welcome/finish pages 
# 0x4b4 is the link control 

# remove the center alignment style
# System::Call USER32::GetWindowLong(ir0,i-16)i.r1
# IntOp $1 $1 - 1
# System::Call USER32::SetWindowLong(ir0s,i-16,ir1s) 
  
#set window postition for two lines...
  System::Call "User32::SetWindowPos(i, i, i, i, i, i, i) b ( $0, 0, 180, 264, 293, 37, 0x244)"
  
# ^Font and ^FontSize are LangString vars containing 
# the installer's set font and font size 
# Create a new font based on it that is underlined 
# ( Font 'weight' of 400 = regular ) 
  
  CreateFont $1 "$(^Font)" "$(^FontSize)" "400" /UNDERLINE 
# and set the font 
  SendMessage $0 ${WM_SETFONT} $1 1 
  
  
FunctionEnd

;--------------------------------
; String resources

LangString TEXT_SERVICEACCOUNT_TITLE      ${LANG_ENGLISH} "Select user account"
LangString TEXT_SERVICEACCOUNT_SUBTITLE   ${LANG_ENGLISH} "Select the user account the ibaDatCoordinator service should use."
LangString DESC_DATCOOR_NOSERVICE         ${LANG_ENGLISH} "ibaDatCoordinator"
LangString DESC_DATCOOR_SERVICE           ${LANG_ENGLISH} "ibaDatCoordinator Server/Client"
LangString DESC_DATCOOR_CLIENT           ${LANG_ENGLISH} "ibaDatCoordinator Client"
LangString TEXT_OS_NOT_SUPPORTED          ${LANG_ENGLISH} "ibaDatCoordinator cannot be installed: This operating system is not supported."
LangString TEXT_OS_NOT_FULLY_SUPPORTED    ${LANG_ENGLISH} "This operating system is no longer supported. Would you like to continue the installation anyway?"
LangString TEXT_NOT_ADMINISTRATOR         ${LANG_ENGLISH} "You do not have sufficient privileges to complete this installation for all users of the machine.  Log on as an administrator and then retry this installation."
LangString TEXT_FRAMEWORK_MISSING         ${LANG_ENGLISH} "The .NET framework version 4.8 is not installed. Please install this before running the ibaPDA installer. The .NET framework can be found on the $\"iba Software & Manuals$\" DVD or it can be downloaded via windows update."
LangString TEXT_UNINSTALL                 ${LANG_ENGLISH} "Uninstall ${PRODUCT_NAME}"
LangString TEXT_ALREADY_INSTALLED         ${LANG_ENGLISH} "${PRODUCT_NAME} v${PRODUCT_VERSION} is already installed. Do you wish to reinstall?"
LangString TEXT_OLDER_INSTALLED           ${LANG_ENGLISH} "An older version of ${PRODUCT_NAME} is installed. Do you wish to upgrade to version ${PRODUCT_VERSION}?"
LangString TEXT_NEWER_INSTALLED           ${LANG_ENGLISH} "A newer version of ${PRODUCT_NAME} is installed."
LangString TEXT_PREV_UNINSTALLING         ${LANG_ENGLISH} "Removing older version of ${PRODUCT_NAME}"
LangString TEXT_STILL_RUNNING             ${LANG_ENGLISH} "Cannot delete the application you are trying to remove. Perhaps it is still running. If so, please close it and try again."
LangString DESC_REMAINING                 ${LANG_ENGLISH} " (%d %s%s remaining)"
LangString DESC_PROGRESS                  ${LANG_ENGLISH} "%dkB (%d%%) of %dkB @ %d.%01dkB/s" ;"%d.%01dkB/s" ;"%dkB (%d%%) of %dkB @ %d.%01dkB/s"
LangString DESC_PLURAL                    ${LANG_ENGLISH} "s"
LangString DESC_HOUR                      ${LANG_ENGLISH} "hour"
LangString DESC_MINUTE                    ${LANG_ENGLISH} "minute"
LangString DESC_SECOND                    ${LANG_ENGLISH} "second"
LangString DESC_CONNECTING                ${LANG_ENGLISH} "Connecting..."
LangString DESC_DOWNLOADING               ${LANG_ENGLISH} "Downloading %s"
LangString DESC_INSTALLING                ${LANG_ENGLISH} "Installing"
LangString TEXT_SERVICE_INSTALL           ${LANG_ENGLISH} "Installing service"
LangString TEXT_SERVICE_STOP              ${LANG_ENGLISH} "Stopping service"
LangString TEXT_SERVICE_REMOVE            ${LANG_ENGLISH} "Deleting service"
LangString TEXT_SERVICEORSTANDALONE_TITLE ${LANG_ENGLISH} "Choose Installation Type"
LangString TEXT_SERVICEORSTANDALONE_SUBTITLE ${LANG_ENGLISH} "Choose ibaDatCoordinator installation type"
LangString TEXT_INSTALLSERVICE            ${LANG_ENGLISH} "Install ibaDatCoordinator server and client"
LangString TEXT_INSTALLSTANDALONE         ${LANG_ENGLISH} "Install ibaDatCoordinator as stand alone executable"
LangString TEXT_INSTALLCLIENT         ${LANG_ENGLISH} "Install ibaDatCoordinator client only"
LangString TEXT_LOG_FILES                 ${LANG_ENGLISH} "log files"
LangString TEXT_CLOSE_STATUS              ${LANG_ENGLISH} "ibaDatCoordinator server status is running. Please close the ibaDatCoordinator server status program before continuing the installation."
LangString TEXT_STATUS_STOP               ${LANG_ENGLISH} "Stopping ibaDatCoordinator server status"
LangString TEXT_CONFIGURE_FIREWALL        ${LANG_ENGLISH} "Configuring firewall"
LangString TEXT_CLOSE_CLIENT              ${LANG_ENGLISH} "ibaDatCoordinator client is running. Please close the ibaDatCoordinator client before continuing the installation."
LangString TEXT_UPDATEINFO				  ${LANG_ENGLISH} "Please register here for regular information about product updates"
LangString TEXT_UPDATEINFO_LINK			  ${LANG_ENGLISH} "https://www.iba-ag.com/en/subscribe-to-regular-product-information/"
LangString TEXT_MPI_NOT_SUPPORTED         ${LANG_ENGLISH} "This version of ${PRODUCT_NAME} requires a firmware update of the connected dongle. Please contact your local iba support and request a dongle firmware update for license $LicenseNr.$\r$\n$\r$\nThe installation of ${PRODUCT_NAME} will be aborted."

LangString TEXT_SERVICEACCOUNT_TITLE      ${LANG_GERMAN}  "Benutzerkonto wählen"
LangString TEXT_SERVICEACCOUNT_SUBTITLE   ${LANG_GERMAN}  "Wählen Sie das Benutzerkonto für den Server-Dienst aus."
LangString DESC_DATCOOR_NOSERVICE         ${LANG_GERMAN} "ibaDatCoordinator"
LangString DESC_DATCOOR_SERVICE           ${LANG_GERMAN} "ibaDatCoordinator Server/Client"
LangString DESC_DATCOOR_CLIENT           ${LANG_GERMAN} "ibaDatCoordinator Client"
LangString TEXT_OS_NOT_SUPPORTED          ${LANG_GERMAN}  "ibaDatCoordinator kann nicht installiert werden: Das Betriebssystem wird nicht unterstützt."
LangString TEXT_OS_NOT_FULLY_SUPPORTED    ${LANG_GERMAN}  "Das Betriebssystem wird nicht mehr unterstützt. Möchten Sie mit der Installation trotzdem fortfahren?"
LangString TEXT_NOT_ADMINISTRATOR         ${LANG_GERMAN} "Sie besitzen keine ausreichenden Berechtigungen, um diese Installation für alle Benutzer dieses Computers auszuführen. Melden Sie sich als Administrator an, und wiederholen Sie diese Installation."
LangString TEXT_FRAMEWORK_MISSING         ${LANG_GERMAN}  "Das .NET Framework, Version 4.8, ist nicht installiert. Bitte installieren Sie dies zunächst, bevor Sie mit der Installation von ibaPDA beginnen. Das .NET Framework finden Sie auf der DVD $\"iba Software & Manuals$\" oder als Download via Windows-Update."
LangString TEXT_UNINSTALL                 ${LANG_GERMAN} "${PRODUCT_NAME} deinstallieren"
LangString TEXT_ALREADY_INSTALLED         ${LANG_GERMAN} "${PRODUCT_NAME} v${PRODUCT_VERSION} ist bereits installiert. Wollen Sie die Neuinstallation trotzdem durchführen?"
LangString TEXT_OLDER_INSTALLED           ${LANG_GERMAN} "Eine ältere Version von ${PRODUCT_NAME} ist bereits installiert. Wollen Sie ein upgrade auf die neuere Version ${PRODUCT_VERSION} durchführen?"
LangString TEXT_NEWER_INSTALLED           ${LANG_GERMAN} "Eine neuere Version von ${PRODUCT_NAME} ist bereits installiert."
LangString TEXT_PREV_UNINSTALLING         ${LANG_GERMAN} "Ältere Version von ${PRODUCT_NAME} wird entfernt..."
LangString TEXT_STILL_RUNNING             ${LANG_GERMAN} "Die Anwendung, die Sie entfernen wollen kann nicht gelöscht werden. Eventuell wird sie noch ausgeführt. Wenn dem so ist, beenden Sie bitte die Anwendung und versuchen Sie es erneut."
LangString DESC_REMAINING                 ${LANG_GERMAN} " (%d %s%s)"
LangString DESC_PROGRESS                  ${LANG_GERMAN} "%dkB (%d%%) of %dkB @ %d.%01dkB/s" ;"%d.%01dkB/s" ;"%dkB (%d%%) of %dkB @ %d.%01dkB/s"
LangString DESC_PLURAL                    ${LANG_GERMAN} "n"
LangString DESC_HOUR                      ${LANG_GERMAN} "Stunde"
LangString DESC_MINUTE                    ${LANG_GERMAN} "Minute"
LangString DESC_SECOND                    ${LANG_GERMAN} "Sekunde"
LangString DESC_CONNECTING                ${LANG_GERMAN} "Verbinden..."
LangString DESC_DOWNLOADING               ${LANG_GERMAN} "%s wird heruntergeladen"
LangString DESC_INSTALLING                ${LANG_GERMAN} "wird installiert"
LangString TEXT_SERVICE_INSTALL           ${LANG_GERMAN} "Dienst wird installiert"
LangString TEXT_SERVICE_STOP              ${LANG_GERMAN} "Dienst wird angehalten"
LangString TEXT_SERVICE_REMOVE            ${LANG_GERMAN} "Dienst wird gelöscht"
LangString TEXT_SERVICEORSTANDALONE_TITLE ${LANG_GERMAN} "Installationsart auswählen"
LangString TEXT_SERVICEORSTANDALONE_SUBTITLE ${LANG_GERMAN} "Wählen Sie die Installationsart für ibaDatCoordinator aus"
LangString TEXT_INSTALLSERVICE            ${LANG_GERMAN} "ibaDatCoordinator Server und Client installieren"
LangString TEXT_INSTALLSTANDALONE         ${LANG_GERMAN} "ibaDatCoordinator nur als Programm installieren"
LangString TEXT_INSTALLCLIENT         	  ${LANG_GERMAN} "Nur ibaDatCoordinator Client installieren"
LangString TEXT_LOG_FILES                 ${LANG_GERMAN} "Log Dateien"
LangString TEXT_CLOSE_STATUS              ${LANG_GERMAN}  "ibaDatCoordinator Server Status läuft. Bitte schließen Sie das ibaDatCoordinator Server Status-Programm, bevor Sie mit der Installation fortfahren."
LangString TEXT_STATUS_STOP               ${LANG_GERMAN}  "ibaDatCoordinator Server Status wird angehalten"
LangString TEXT_CONFIGURE_FIREWALL        ${LANG_GERMAN}  "Firewall wird konfiguriert"
LangString TEXT_CLOSE_CLIENT              ${LANG_GERMAN}  "Der ibaDatCoordinator-Client läuft. Bitte schließen Sie den ibaDatCoordinator-Client, bevor Sie mit der Installation fortfahren."
LangString TEXT_UPDATEINFO				  ${LANG_GERMAN} "Registrieren Sie sich hier für regelmäßige Informationen über Produkt-Updates"
LangString TEXT_UPDATEINFO_LINK			  ${LANG_GERMAN} "https://www.iba-ag.com/de/anmeldung-zu-regelmaessigen-produkt-informationen/"
LangString TEXT_MPI_NOT_SUPPORTED         ${LANG_GERMAN} "Diese Version von ${PRODUCT_NAME} erfordert ein Firmware-Update des gesteckten Dongles. Bitte wenden Sie sich an Ihren lokalen iba-Support und fragen Sie nach einem Dongle-Firmware-Update für die Lizenz $LicenseNr.$\r$\n$\r$\nDie Installation von ${PRODUCT_NAME} ist nicht möglich und wird abgebrochen."

LangString TEXT_SERVICEACCOUNT_TITLE      ${LANG_FRENCH}  "Choisir le compte d'utilisateur"
LangString TEXT_SERVICEACCOUNT_SUBTITLE   ${LANG_FRENCH}  "Choisir le compte d'utilisateur employé par le service de serveur."
LangString DESC_DATCOOR_NOSERVICE         ${LANG_FRENCH} "ibaDatCoordinator"
LangString DESC_DATCOOR_SERVICE           ${LANG_FRENCH} "ibaDatCoordinator Serveur/Client"
LangString DESC_DATCOOR_CLIENT            ${LANG_FRENCH} "ibaDatCoordinator Client"
LangString TEXT_OS_NOT_SUPPORTED          ${LANG_FRENCH}  "ibaDatCoordinator ne peut pas être installé: Le système d'exploitation n'est pas supporté."
LangString TEXT_OS_NOT_FULLY_SUPPORTED    ${LANG_FRENCH}  "Le système d'exploitation n'est plus supporté. Voulez-vous quand même continuer l'installation?"
LangString TEXT_NOT_ADMINISTRATOR         ${LANG_FRENCH} "Vous n'avez pas assez de privilèges pour effectuer cette installation pour tous les utilisateurs de cet ordinateur. Connectez-vous en tant qu'administrateur et réessayez cette installation."
LangString TEXT_FRAMEWORK_MISSING         ${LANG_FRENCH}  "Le .NET framework version 4.8 n'est pas installée. Veuillez installer ceci avant d' excecuter l'installateur d'ibaPDA. Le .NET framework peut être trouvé sur le DVD $\"iba Software & Manuals$\" ou il peut être téléchargé par l'intermédiaire de Windows Update."
LangString TEXT_UNINSTALL                 ${LANG_FRENCH} "Désinstaller ${PRODUCT_NAME}"
LangString TEXT_ALREADY_INSTALLED         ${LANG_FRENCH} "${PRODUCT_NAME} v${PRODUCT_VERSION} est déj?install? Souhaitez-vous procéder ?une réinstallation?"
LangString TEXT_OLDER_INSTALLED           ${LANG_FRENCH} "Une ancienne version de ${PRODUCT_NAME} est déj?installée. Souhaitez-vous une mise ?niveau ?la nouvelle version ${PRODUCT_VERSION}?"
LangString TEXT_NEWER_INSTALLED           ${LANG_FRENCH} "Une version plus récente de ${PRODUCT_NAME} est déj?installée."
LangString TEXT_PREV_UNINSTALLING         ${LANG_FRENCH} "Suppression de l'ancienne version de ${PRODUCT_NAME}."
LangString TEXT_STILL_RUNNING             ${LANG_FRENCH} "L'application que vous voulez supprimer ne peut pas être effacée. Elle est éventuellement en cours d'exécution. Dans ce cas, fermez l'application et réessayez."
LangString DESC_REMAINING                 ${LANG_FRENCH} " (%d %s%s restant)"
LangString DESC_PROGRESS                  ${LANG_FRENCH} "%dkB (%d%%) of %dkB @ %d.%01dkB/s" ;"%d.%01dkB/s" ;"%dkB (%d%%) of %dkB @ %d.%01dkB/s"
LangString DESC_PLURAL                    ${LANG_FRENCH} "s"
LangString DESC_HOUR                      ${LANG_FRENCH} "Heure"
LangString DESC_MINUTE                    ${LANG_FRENCH} "Minute"
LangString DESC_SECOND                    ${LANG_FRENCH} "Seconde"
LangString DESC_CONNECTING                ${LANG_FRENCH} "Connexion..."
LangString DESC_DOWNLOADING               ${LANG_FRENCH} "Téléchargement de %s"
LangString DESC_INSTALLING                ${LANG_FRENCH} "Installation"
LangString TEXT_SERVICE_INSTALL           ${LANG_FRENCH} "Installation du service"
LangString TEXT_SERVICE_STOP              ${LANG_FRENCH} "Arrêt du service"
LangString TEXT_SERVICE_REMOVE            ${LANG_FRENCH} "Suppression du service"
LangString TEXT_SERVICEORSTANDALONE_TITLE ${LANG_FRENCH} "Choisir Type d'Installation"
LangString TEXT_SERVICEORSTANDALONE_SUBTITLE ${LANG_FRENCH} "Choisir le type d'installation d'ibaDatCoordinator"
LangString TEXT_INSTALLSERVICE            ${LANG_FRENCH} "Installer  l'ibaDatCoordinator comme serveur et client"
LangString TEXT_INSTALLSTANDALONE         ${LANG_FRENCH} "Installer l'ibaDatCoordinator comme exécutable autonome"
LangString TEXT_INSTALLCLIENT          ${LANG_FRENCH} "Installer  l'ibaDatCoordinator comme client seulement"
LangString TEXT_LOG_FILES                 ${LANG_FRENCH} "fichiers log"
LangString TEXT_CLOSE_STATUS              ${LANG_FRENCH}  "Le logiciel état de serveur ibaDatCoordinator est en cours d'exécution. Veuillez fermer le logiciel état de serveur ibaDatCoordinator avant de continuer l'installation."
LangString TEXT_STATUS_STOP               ${LANG_FRENCH}  "Arrêt du logiciel état de serveur ibaDatCoordinator" 
LangString TEXT_CONFIGURE_FIREWALL        ${LANG_FRENCH}  "Configuration du pare-fue"
LangString TEXT_CLOSE_CLIENT              ${LANG_FRENCH}  "Le client d'ibaDatCoordinator est en cours d'exécution. Veuillez fermer le client d'ibaDatCoordinator avant de continuer l'installation."
LangString TEXT_UPDATEINFO				  ${LANG_FRENCH} "Please register here for regular information about product updates"
LangString TEXT_UPDATEINFO_LINK			  ${LANG_FRENCH} "https://www.iba-ag.com/en/subscribe-to-regular-product-information/"
LangString TEXT_MPI_NOT_SUPPORTED         ${LANG_FRENCH} "Cette version d'${PRODUCT_NAME} nécessite une mise à jour du firmware du dongle connecté. Veuillez contacter votre support technique iba local et demander une mise à jour du firmware du dongle pour la licence $LicenseNr.$\r$\n$\r$\nL'installation de ${PRODUCT_NAME} sera annulé."

LangString TEXT_SERVICEACCOUNT_TITLE      ${LANG_SPANISH} "Seleccionar cuenta de usuario"
LangString TEXT_SERVICEACCOUNT_SUBTITLE   ${LANG_SPANISH} "Seleccione la cuenta de usuario que el ibaDatCoordinator debe utilizar."
LangString DESC_DATCOOR_NOSERVICE         ${LANG_SPANISH} "ibaDatCoordinator"
LangString DESC_DATCOOR_SERVICE           ${LANG_SPANISH} "Servidor/Cliente ibaDatCoordinator"
LangString DESC_DATCOOR_CLIENT           ${LANG_SPANISH} "Cliente ibaDatCoordinator"
LangString TEXT_OS_NOT_SUPPORTED          ${LANG_SPANISH} "No se pudo instalar el ibaDatCoordinator: El sistema operativo no es compatible."
LangString TEXT_OS_NOT_FULLY_SUPPORTED    ${LANG_SPANISH} "Este sistema operativo ya no es compatible. ¿Desea continuar con la instalación de todas formas?"
LangString TEXT_NOT_ADMINISTRATOR         ${LANG_SPANISH} "No posee suficientes privilegios para completar la instalación para todos los usuarios de la máquina.  Inicie sesión como administrador e intente nuevamente la instalación."
LangString TEXT_FRAMEWORK_MISSING         ${LANG_SPANISH} "La versión 4.8 del .NET framework no está instalada. Por favor, instale esto antes de ejecutar el instalador del ibaPDA. El .NET framework puede encontrarse en el DVD $\"iba Software & Manuals$\" o se puede descargar mediante la actualización de Windows."
LangString TEXT_UNINSTALL                 ${LANG_SPANISH} "Desinstalar ${PRODUCT_NAME}"
LangString TEXT_ALREADY_INSTALLED         ${LANG_SPANISH} "${PRODUCT_NAME} v${PRODUCT_VERSION} ya está instalado. ¿Desea reinstalarlo?"
LangString TEXT_OLDER_INSTALLED           ${LANG_SPANISH} "Está instalada una versión anterior de ${PRODUCT_NAME}. ¿Desea actualizar a la versión ${PRODUCT_VERSION}?"
LangString TEXT_NEWER_INSTALLED           ${LANG_SPANISH} "Se ha instalado una nueva versión de ${PRODUCT_NAME}."
LangString TEXT_PREV_UNINSTALLING         ${LANG_SPANISH} "Eliminando la versión anterior de  ${PRODUCT_NAME}"
LangString TEXT_STILL_RUNNING             ${LANG_SPANISH} "No se puede borrar la aplicación que intenta eliminar. Tal vez aún se esté ejecutando. Si es así, por favor ciérrela e intente nuevamente."
LangString DESC_REMAINING                 ${LANG_SPANISH} " (%d %s%s restante)"
LangString DESC_PROGRESS                  ${LANG_SPANISH} "%dkB (%d%%) of %dkB @ %d.%01dkB/s" ;"%d.%01dkB/s" ;"%dkB (%d%%) of %dkB @ %d.%01dkB/s"
LangString DESC_PLURAL                    ${LANG_SPANISH} "s"
LangString DESC_HOUR                      ${LANG_SPANISH} "hora"
LangString DESC_MINUTE                    ${LANG_SPANISH} "minuto"
LangString DESC_SECOND                    ${LANG_SPANISH} "segundo"
LangString DESC_CONNECTING                ${LANG_SPANISH} "Conectando..."
LangString DESC_DOWNLOADING               ${LANG_SPANISH} "Descargando %s"
LangString DESC_INSTALLING                ${LANG_SPANISH} "Instalando"
LangString TEXT_SERVICE_INSTALL           ${LANG_SPANISH} "Instalación de servicio"
LangString TEXT_SERVICE_STOP              ${LANG_SPANISH} "Detención de servicio"
LangString TEXT_SERVICE_REMOVE            ${LANG_SPANISH} "Eliminando servicio"
LangString TEXT_SERVICEORSTANDALONE_TITLE ${LANG_SPANISH} "Elija el tipo de Instalación"
LangString TEXT_SERVICEORSTANDALONE_SUBTITLE ${LANG_SPANISH} "Elija el tipo de instalación para el ibaDatCoordinator"
LangString TEXT_INSTALLSERVICE            ${LANG_SPANISH} "Instale el servidor y cliente del ibaDatCoordinator"
LangString TEXT_INSTALLSTANDALONE         ${LANG_SPANISH} "Instale el ibaDatCoordinator como un ejecutable autónomo"
LangString TEXT_INSTALLCLIENT         ${LANG_SPANISH} "Instale solo el cliente ibaDatCooridnator"
LangString TEXT_LOG_FILES                 ${LANG_SPANISH} "archivos de registro"
LangString TEXT_CLOSE_STATUS              ${LANG_SPANISH} "El estado del servidor ibaDatCoordinator se está ejecutando. Por favor, cierre el programa de estado del servidor ibaDatCoordinator antes de continuar con la instalación."
LangString TEXT_STATUS_STOP               ${LANG_SPANISH} "Deteniendo el estado del servidor ibaDatCoordinator"
LangString TEXT_CONFIGURE_FIREWALL        ${LANG_SPANISH} "Configurar firewall"
LangString TEXT_CLOSE_CLIENT              ${LANG_SPANISH} "El cliente ibaDatCoordinator se está ejecutando. Por favor, cierre el cliente ibaDatCoordinator antes de continuar con la instalación."
LangString TEXT_UPDATEINFO				  ${LANG_SPANISH} "Por favor, regístrese aquí para obtener información regular sobre las actualizaciones de los productos"
LangString TEXT_UPDATEINFO_LINK			  ${LANG_SPANISH} "https://www.iba-ag.com/en/subscribe-to-regular-product-information/"
LangString TEXT_MPI_NOT_SUPPORTED         ${LANG_SPANISH} "Esta versión de ${PRODUCT_NAME} requiere una actualización de firmaware del dongle conectado. Por favor contacte a su soporte de iba más cercano y solicite una actualización de firmware del dongle para una licencia $LicenseNr.$\r$\n$\r$\nLa instalación de ${PRODUCT_NAME} será cancelada."

