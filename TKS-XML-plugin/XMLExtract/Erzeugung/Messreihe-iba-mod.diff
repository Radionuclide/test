diff U3b E:/Projects/ibaXmlExtract/xmlplugin.git/TKS-XML-plugin/XMLExtract/Erzeugung/Messreihe-generated.cs E:/Projects/ibaXmlExtract/xmlplugin.git/TKS-XML-plugin/XMLExtract/Erzeugung/Messreihe.cs
--- E:/Projects/ibaXmlExtract/xmlplugin.git/TKS-XML-plugin/XMLExtract/Erzeugung/Messreihe-generated.cs	Thu Jun 19 14:58:33 2014
+++ E:/Projects/ibaXmlExtract/xmlplugin.git/TKS-XML-plugin/XMLExtract/Erzeugung/Messreihe.cs	Thu Jul 03 12:24:14 2014
@@ -24,6 +24,8 @@
     [System.Xml.Serialization.XmlRootAttribute("Erzeugung", Namespace="http://www.thyssen.com/xml/schema/qbic", IsNullable=false)]
     public partial class MaterialEreignisType
     {
+        [System.Xml.Serialization.XmlAttributeAttribute("schemaLocation", Namespace = System.Xml.Schema.XmlSchema.InstanceNamespace)]
+        public string xsiSchemaLocation = "http://www.thyssen.com/xml/schema/qbic http://www-eai/schema/qbic/Messung/REL-2_6_1/Messreihe.xsd";
         
         public MaterialHeaderType MaterialHeader { get; set; }
         [System.Xml.Serialization.XmlElementAttribute("Messung")]
@@ -44,56 +46,20 @@
     [System.Diagnostics.DebuggerStepThroughAttribute()]
     [System.ComponentModel.DesignerCategoryAttribute("code")]
     [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.thyssen.com/xml/schema/qbic")]
+    [System.Xml.Serialization.XmlRootAttribute("MaterialHeader", Namespace = "http://www.thyssen.com/xml/schema/qbic", IsNullable = false)]
     public partial class MaterialHeaderType
     {
         
-        private object itemField;
-        
-        private System.Nullable<StandortType> standortField;
-        
         private System.Nullable<MaterialArtType> materialArtField;
         
         [System.Xml.Serialization.XmlElementAttribute("LokalerIdent", typeof(string))]
         [System.Xml.Serialization.XmlElementAttribute("TKSIdent", typeof(ulong))]
-        public object Item { get; set; }
+        public object LokalerIdent { get; set; }
         
         /// <summary>
-        /// BO, DO, DU
+        /// BO, DO, DU, oder Anderer
         /// </summary>
-        public StandortType Standort
-        {
-            get
-            {
-                if (this.standortField.HasValue)
-                {
-                    return this.standortField.Value;
-                }
-                else
-                {
-                    return default(StandortType);
-                }
-            }
-            set
-            {
-                this.standortField = value;
-            }
-        }
-        
-        [System.Xml.Serialization.XmlIgnoreAttribute()]
-        public bool StandortSpecified
-        {
-            get
-            {
-                return this.standortField.HasValue;
-            }
-            set
-            {
-                if (value==false)
-                {
-                    this.standortField = null;
-                }
-            }
-        }
+        public string Standort { get; set; }
         
         /// <summary>
         /// Nur DU:  BR WB KB VZ BB PK
@@ -134,21 +100,6 @@
         }
     }
     
-    /// <summary>
-    /// Gueltige TKS-Standorte.
-    /// </summary>
-    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.6.0.20097")]
-    [System.SerializableAttribute()]
-    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.thyssen.com/xml/schema/qbic")]
-    public enum StandortType
-    {
-        
-        BO,
-        
-        DO,
-        
-        DU,
-    }
     
     /// <summary>
     /// Zusaetzliche Kennzeichnung von Duisburger Material.
@@ -197,7 +148,10 @@
     [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.thyssen.com/xml/schema/qbic")]
     public partial class Raster1DType
     {
-        
+        public Raster1DType()
+        {
+            this.WerteList = new List<float>();
+        }        
         /// <summary>
         /// Anz. der Werte, wird berechnet wenn fehlend.
         /// </summary>
@@ -207,14 +161,31 @@
         /// <summary>
         /// Schrittlaenge zwischen zwei Messpunkten, in der spez. x-Richtung und Dimension (Sekunde oder Meter)
         /// </summary>
-        public double SegmentgroesseX { get; set; }
+        public float SegmentgroesseX { get; set; }
         /// <summary>
         /// Darf weggelassen werden, dann wird 0 angenommen.
         /// </summary>
-        public double SegmentOffsetX { get; set; }
-        [System.Xml.Serialization.XmlIgnoreAttribute()]
-        public bool SegmentOffsetXSpecified { get; set; }
-        public string WerteX { get; set; }
+        public float SegmentOffsetX { get; set; }
+        [EditorBrowsable(EditorBrowsableState.Never)]
+        public string WerteX
+        {
+            get
+            {
+                var stringItems = WerteList.ConvertAll(w => XmlConvert.ToString(w));
+                return String.Join(" ", stringItems.ToArray());
+            }
+            set
+            {
+                WerteList.Clear();
+                foreach (var item in value.Split(" ".ToCharArray(), StringSplitOptions.RemoveEmptyEntries))
+                {
+                    WerteList.Add(XmlConvert.ToSingle(item));
+                }
+            }
+        }
+
+        [XmlIgnore]
+        public List<float> WerteList { get; set; }
     }
     
     [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.6.0.20097")]
@@ -239,15 +210,12 @@
     public partial class SpurType
     {
         
-        private object itemField;
-        
         private System.Nullable<WerteTypeEnum> typField;
         
-        private BezugDimensionEnum dimensionXField;
+        public string Einheit { get; set; }
+
+        public string EinheitLocal { get; set; }
         
-        [System.Xml.Serialization.XmlElementAttribute("Einheit", typeof(EinheitEnum))]
-        [System.Xml.Serialization.XmlElementAttribute("EinheitLokal", typeof(string))]
-        public object Item { get; set; }
         /// <summary>
         /// Name der Messreihe im statischen Modell
         /// </summary>
@@ -256,6 +224,14 @@
         /// Darf weggelassen werden; dann werden die Werte berechnet.
         /// </summary>
         public StatistikType Statistik { get; set; }
+        [EditorBrowsable(EditorBrowsableState.Never)]
+        public bool ShouldSerializeStatistik()
+        {
+            if (this.Statistik == null)
+                return false;
+
+            return (Statistik.Avg + Statistik.Max + Statistik.Min + Statistik.StdDev) != 0;
+        }
         /// <summary>
         /// Falls Werte relativ sind, kann hier der Bezugswert angegeben werden. Falls die Werte absolut sind, ist der Bezugswert 0.
         /// </summary>
@@ -280,7 +256,8 @@
         {
             this.Raster1D = new Raster1DType();
             this.Statistik = new StatistikType();
-            this.Bezugswert = 0;
+            this.DimensionX = BezugDimensionEnum.Laenge;
+            this.Bezugswert = 0.0;
         }
         
         /// <summary>
@@ -334,6 +311,9 @@
         
         gradC,
         
+        /// <summary>
+        /// m/min
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("m/min")]
         mmin,
         
@@ -343,6 +323,9 @@
         
         V,
         
+        /// <summary>
+        /// g/qm
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("g/qm")]
         gqm,
         
@@ -354,6 +337,9 @@
         
         grad,
         
+        /// <summary>
+        /// Keine/1
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("Keine/1")]
         Keine1,
         
@@ -363,12 +349,21 @@
         
         Test,
         
+        /// <summary>
+        /// As/qm
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("As/qm")]
         Asqm,
         
+        /// <summary>
+        /// m/qs
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("m/qs")]
         mqs,
         
+        /// <summary>
+        /// U/min
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("U/min")]
         Umin,
         
@@ -378,30 +373,57 @@
         
         Hz,
         
+        /// <summary>
+        /// gradC/s
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("gradC/s")]
         gradCs,
         
+        /// <summary>
+        /// m3/s
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("m3/s")]
         m3s,
         
+        /// <summary>
+        /// m3/h
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("m3/h")]
         m3h,
         
+        /// <summary>
+        /// t/h
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("t/h")]
         th,
         
+        /// <summary>
+        /// mikroS/cm
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("mikroS/cm")]
         mikroScm,
         
+        /// <summary>
+        /// N/m2
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("N/m2")]
         Nm2,
         
+        /// <summary>
+        /// m/s
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("m/s")]
         ms,
         
+        /// <summary>
+        /// A/qm
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("A/qm")]
         Aqm,
         
+        /// <summary>
+        /// cm-1
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("cm-1")]
         cm1,
         
@@ -411,6 +433,9 @@
         
         m3,
         
+        /// <summary>
+        /// ml/min
+        /// </summary>
         [System.Xml.Serialization.XmlEnumAttribute("ml/min")]
         mlmin,
         
@@ -459,8 +484,6 @@
     public partial class MessungType
     {
         
-        private BandlaufrichtungEnum bandlaufrichtungField;
-        
         public string IDMessgeraet { get; set; }
         /// <summary>
         /// z.B. BEFB02
@@ -472,15 +495,22 @@
         /// z.B. DICKE__AL
         /// </summary>
         public string Gruppe { get; set; }
+        
+        [XmlIgnore]
         public System.DateTime Messzeitpunkt { get; set; }
+
+        [XmlElement("Messzeitpunkt")]
+        public string MesszeitpunktString
+        {
+            get { return this.Messzeitpunkt.ToString("yyyy-MM-dd'T'HH:mm:sszzz"); }
+            set { this.Messzeitpunkt = DateTime.ParseExact(value, "yyyy-MM-dd'T'HH:mm:sszzz", System.Globalization.CultureInfo.CurrentCulture); }
+        }
         [System.Xml.Serialization.XmlElementAttribute("Spur")]
         public List<SpurType> Spur { get; set; }
         /// <summary>
         /// Voraussichtlich wird keine weitere Messung zu diesem Arbeitsgangdurchsatz folgen.
         /// </summary>
         public bool LetzteMsgAmDurchsatz { get; set; }
-        [System.Xml.Serialization.XmlIgnoreAttribute()]
-        public bool LetzteMsgAmDurchsatzSpecified { get; set; }
         
         /// <summary>
         /// MessungType class constructor
